{
  "project": "DeliveryDrone",
  "implementation": "DeliveryDrone::DeliveryDroneSystem.Impl",
  "date": 1612182872186,
  "hash": "8\u001d��\u0010���c\u0010dД�",
  "modelUnits": [
    {
      "name": "DeliveryDrone",
      "kind": "AadlPackage",
      "public": {
        "with": [
          "Base_Types",
          "Data_Types",
          "Agree_Constants",
          "Agree_Nodes",
          "Agree_Constants",
          "CASE_Consolidated_Properties",
          "GNC"
        ],
        "components": [
          {
            "name": "DeliveryDrone::Actuation",
            "localName": "Actuation",
            "kind": "ComponentType",
            "category": "system",
            "features": [
              {
                "name": "motor_cmd",
                "kind": "DataPort",
                "classifier": "Base_Types::Boolean",
                "direction": "in"
              },
              {
                "name": "response",
                "kind": "DataPort",
                "classifier": "Base_Types::Boolean",
                "direction": "out"
              }
            ],
            "annexes": [
              {
                "name": "verdict",
                "kind": "AnnexSubclause",
                "sourceText": "{**\n\t\t\tCyberRel \\\"response_out_I\\\" = motor_cmd:I => response:I;\n\t\t\tCyberRel \\\"response_out_A\\\" = motor_cmd:A => response:A;\n\t\t\tEvent {\n\t\t\t\tid = \\\"loa_event\\\"\n\t\t\t\tprobability = 1.0e-8\n\t\t\t\tcomment = \\\"loss of availability of the Actuation\\\"\n\t\t\t\tdescription = \\\"LOA\\\"\n\t\t\t}\n\t\t\tEvent {\n\t\t\t\tid = \\\"ued_event\\\"\n\t\t\t\tprobability = 1.0e-9\n\t\t\t\tcomment = \\\"undetected erroneous data of the Actuation\\\"\n\t\t\t\tdescription = \\\"UED\\\"\n\t\t\t}\n\t\t\tSafetyRel \\\"response_out_LOA\\\" = happens(\\\"loa_event\\\") or motor_cmd:A => response:A;\n\t\t\tSafetyRel \\\"response_out_UED\\\" = happens(\\\"ued_event\\\") or motor_cmd:I => response:I;\n\t\t**}"
              }
            ]
          },
          {
            "name": "DeliveryDrone::DeliveryPlanner",
            "localName": "DeliveryPlanner",
            "kind": "ComponentType",
            "category": "system",
            "features": [
              {
                "name": "bus_in",
                "kind": "DataPort",
                "classifier": "Data_Types::InputBus.impl",
                "direction": "in"
              },
              {
                "name": "cur_pos",
                "kind": "DataPort",
                "classifier": "Data_Types::Position.impl",
                "direction": "in"
              },
              {
                "name": "delivery_status",
                "kind": "DataPort",
                "classifier": "Data_Types::DeliveryStatus",
                "direction": "in"
              },
              {
                "name": "radio_response",
                "kind": "DataPort",
                "classifier": "Data_Types::RadioResponse.impl",
                "direction": "in"
              },
              {
                "name": "camera_result",
                "kind": "DataPort",
                "classifier": "Base_Types::Integer",
                "direction": "in"
              },
              {
                "name": "gps_health_status",
                "kind": "DataPort",
                "classifier": "Base_Types::Boolean",
                "direction": "in"
              },
              {
                "name": "imu_health_status",
                "kind": "DataPort",
                "classifier": "Base_Types::Boolean",
                "direction": "in"
              },
              {
                "name": "rdo_health_status",
                "kind": "DataPort",
                "classifier": "Base_Types::Boolean",
                "direction": "in"
              },
              {
                "name": "cam_health_status",
                "kind": "DataPort",
                "classifier": "Base_Types::Boolean",
                "direction": "in"
              },
              {
                "name": "package_is_secure",
                "kind": "DataPort",
                "classifier": "Base_Types::Boolean",
                "direction": "in"
              },
              {
                "name": "radio_cmd",
                "kind": "DataPort",
                "classifier": "Base_Types::Boolean",
                "direction": "out"
              },
              {
                "name": "delivery_cmd",
                "kind": "DataPort",
                "classifier": "Data_Types::PackageDeliveryCommand",
                "direction": "out"
              },
              {
                "name": "dest_location",
                "kind": "DataPort",
                "classifier": "Data_Types::Position.impl",
                "direction": "out"
              },
              {
                "name": "bus_out",
                "kind": "DataPort",
                "classifier": "Base_Types::Boolean",
                "direction": "out"
              },
              {
                "name": "nav_cmd",
                "kind": "DataPort",
                "classifier": "Base_Types::Boolean",
                "direction": "out"
              },
              {
                "name": "camera",
                "kind": "DataPort",
                "classifier": "Base_Types::Boolean",
                "direction": "out"
              },
              {
                "name": "probe_safe_landing",
                "kind": "DataPort",
                "classifier": "Data_Types::ProbeSafeLanding.impl",
                "direction": "out"
              },
              {
                "name": "constellation",
                "kind": "DataPort",
                "classifier": "Data_Types::Constellation",
                "direction": "out"
              },
              {
                "name": "launch_pos",
                "kind": "DataPort",
                "classifier": "Data_Types::Position.impl",
                "direction": "out"
              },
              {
                "name": "probe_init_mode",
                "kind": "DataPort",
                "classifier": "Base_Types::Boolean",
                "direction": "out"
              },
              {
                "name": "probe_abort_mode",
                "kind": "DataPort",
                "classifier": "Base_Types::Boolean",
                "direction": "out"
              },
              {
                "name": "target_clear",
                "kind": "DataPort",
                "classifier": "Base_Types::Boolean",
                "direction": "out"
              },
              {
                "name": "valid_marker",
                "kind": "DataPort",
                "classifier": "Base_Types::Boolean",
                "direction": "out"
              }
            ],
            "annexes": [
              {
                "name": "agree",
                "kind": "AnnexSubclause",
                "parsedAnnexSubclause": {
                  "statements": [
                    {
                      "kind": "EqStatement",
                      "left": [
                        {
                          "name": "recent_order",
                          "type": {
                            "kind": "DoubleDotRef",
                            "name": "Data_Types::DeliveryOrder.impl"
                          }
                        }
                      ],
                      "expr": {
                        "kind": "IfThenElseExpr",
                        "if": {
                          "kind": "NamedElmExpr",
                          "name": "init_mode"
                        },
                        "then": {
                          "kind": "SelectionExpr",
                          "target": {
                            "kind": "NamedElmExpr",
                            "name": "bus_in"
                          },
                          "field": "order"
                        },
                        "else": {
                          "kind": "BinaryExpr",
                          "left": {
                            "kind": "SelectionExpr",
                            "target": {
                              "kind": "NamedElmExpr",
                              "name": "bus_in"
                            },
                            "field": "order"
                          },
                          "op": "->",
                          "right": {
                            "kind": "PreExpr",
                            "expr": {
                              "kind": "NamedElmExpr",
                              "name": "recent_order"
                            }
                          }
                        }
                      }
                    },
                    {
                      "kind": "EqStatement",
                      "left": [
                        {
                          "name": "truck_position",
                          "type": {
                            "kind": "DoubleDotRef",
                            "name": "Data_Types::Position.impl"
                          }
                        }
                      ],
                      "expr": {
                        "kind": "CallExpr",
                        "function": {
                          "kind": "DoubleDotRef",
                          "packageName": "Agree_Nodes",
                          "name": "FirstLocation"
                        },
                        "args": [
                          {
                            "kind": "NamedElmExpr",
                            "name": "cur_pos"
                          }
                        ]
                      }
                    },
                    {
                      "kind": "EqStatement",
                      "left": [
                        {
                          "name": "dest_position",
                          "type": {
                            "kind": "DoubleDotRef",
                            "name": "Data_Types::Position.impl"
                          }
                        }
                      ],
                      "expr": {
                        "kind": "NamedElmExpr",
                        "name": "dest_location"
                      }
                    },
                    {
                      "kind": "EqStatement",
                      "left": [
                        {
                          "name": "expensive_item",
                          "type": {
                            "kind": "PrimType",
                            "primType": "bool"
                          }
                        }
                      ],
                      "expr": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "SelectionExpr",
                          "target": {
                            "kind": "NamedElmExpr",
                            "name": "recent_order"
                          },
                          "field": "item_value"
                        },
                        "op": ">=",
                        "right": {
                          "kind": "NamedElmExpr",
                          "name": "ITEM_VALUE_THRESHOLD"
                        }
                      }
                    },
                    {
                      "kind": "EqStatement",
                      "left": [
                        {
                          "name": "confirmation",
                          "type": {
                            "kind": "PrimType",
                            "primType": "bool"
                          }
                        }
                      ],
                      "expr": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "SelectionExpr",
                          "target": {
                            "kind": "NamedElmExpr",
                            "name": "radio_response"
                          },
                          "field": "target_confirmed"
                        },
                        "op": "and",
                        "right": {
                          "kind": "SelectionExpr",
                          "target": {
                            "kind": "NamedElmExpr",
                            "name": "radio_response"
                          },
                          "field": "data_available"
                        }
                      }
                    },
                    {
                      "kind": "EqStatement",
                      "left": [
                        {
                          "name": "confirmation_timeout",
                          "type": {
                            "kind": "PrimType",
                            "primType": "bool"
                          }
                        }
                      ],
                      "expr": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "CallExpr",
                          "function": {
                            "kind": "DoubleDotRef",
                            "packageName": "Agree_Nodes",
                            "name": "Duration"
                          },
                          "args": [
                            {
                              "kind": "UnaryExpr",
                              "operand": {
                                "kind": "NamedElmExpr",
                                "name": "confirmation"
                              },
                              "op": "not"
                            }
                          ]
                        },
                        "op": ">",
                        "right": {
                          "kind": "NamedElmExpr",
                          "name": "WAITING_CONFIRMATION_THRESHOLD"
                        }
                      }
                    },
                    {
                      "kind": "EqStatement",
                      "left": [
                        {
                          "name": "get_clearance_timeout",
                          "type": {
                            "kind": "PrimType",
                            "primType": "bool"
                          }
                        }
                      ],
                      "expr": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "CallExpr",
                          "function": {
                            "kind": "DoubleDotRef",
                            "packageName": "Agree_Nodes",
                            "name": "Duration"
                          },
                          "args": [
                            {
                              "kind": "NamedElmExpr",
                              "name": "no_clearance"
                            }
                          ]
                        },
                        "op": ">=",
                        "right": {
                          "kind": "NamedElmExpr",
                          "name": "MAXIMUM_NUMBER_OF_RETRIES"
                        }
                      }
                    },
                    {
                      "kind": "EqStatement",
                      "left": [
                        {
                          "name": "delivery_failed",
                          "type": {
                            "kind": "PrimType",
                            "primType": "bool"
                          }
                        }
                      ],
                      "expr": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "NamedElmExpr",
                          "name": "delivery_status"
                        },
                        "op": "=",
                        "right": {
                          "kind": "NamedElmExpr",
                          "name": "FAILED_STATUS"
                        }
                      }
                    },
                    {
                      "kind": "EqStatement",
                      "left": [
                        {
                          "name": "delivery_completed",
                          "type": {
                            "kind": "PrimType",
                            "primType": "bool"
                          }
                        }
                      ],
                      "expr": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "NamedElmExpr",
                          "name": "delivery_status"
                        },
                        "op": "=",
                        "right": {
                          "kind": "NamedElmExpr",
                          "name": "COMPLETED_STATUS"
                        }
                      }
                    },
                    {
                      "kind": "EqStatement",
                      "left": [
                        {
                          "name": "is_safe_landing",
                          "type": {
                            "kind": "PrimType",
                            "primType": "bool"
                          }
                        }
                      ],
                      "expr": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "NamedElmExpr",
                          "name": "target_clear"
                        },
                        "op": "and",
                        "right": {
                          "kind": "NamedElmExpr",
                          "name": "valid_marker"
                        }
                      }
                    },
                    {
                      "kind": "EqStatement",
                      "left": [
                        {
                          "name": "on_off",
                          "type": {
                            "kind": "PrimType",
                            "primType": "bool"
                          }
                        }
                      ],
                      "expr": {
                        "kind": "SelectionExpr",
                        "target": {
                          "kind": "NamedElmExpr",
                          "name": "bus_in"
                        },
                        "field": "on_off"
                      }
                    },
                    {
                      "kind": "EqStatement",
                      "left": [
                        {
                          "name": "init_criteria_succeed",
                          "type": {
                            "kind": "PrimType",
                            "primType": "bool"
                          }
                        }
                      ],
                      "expr": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "SelectionExpr",
                          "target": {
                            "kind": "NamedElmExpr",
                            "name": "bus_in"
                          },
                          "field": "init_criteria_satisfied"
                        },
                        "op": "and",
                        "right": {
                          "kind": "UnaryExpr",
                          "operand": {
                            "kind": "NamedElmExpr",
                            "name": "internal_error_detected"
                          },
                          "op": "not"
                        }
                      }
                    },
                    {
                      "kind": "EqStatement",
                      "left": [
                        {
                          "name": "init_criteria_failed",
                          "type": {
                            "kind": "PrimType",
                            "primType": "bool"
                          }
                        }
                      ],
                      "expr": {
                        "kind": "UnaryExpr",
                        "operand": {
                          "kind": "NamedElmExpr",
                          "name": "init_criteria_succeed"
                        },
                        "op": "not"
                      }
                    },
                    {
                      "kind": "EqStatement",
                      "left": [
                        {
                          "name": "abort_cmd",
                          "type": {
                            "kind": "PrimType",
                            "primType": "bool"
                          }
                        }
                      ],
                      "expr": {
                        "kind": "SelectionExpr",
                        "target": {
                          "kind": "NamedElmExpr",
                          "name": "bus_in"
                        },
                        "field": "abort_cmd"
                      }
                    },
                    {
                      "kind": "EqStatement",
                      "left": [
                        {
                          "name": "mission_store_release_sequence",
                          "type": {
                            "kind": "PrimType",
                            "primType": "bool"
                          }
                        }
                      ],
                      "expr": {
                        "kind": "SelectionExpr",
                        "target": {
                          "kind": "NamedElmExpr",
                          "name": "bus_in"
                        },
                        "field": "mission_store_release_sequence"
                      }
                    },
                    {
                      "kind": "EqStatement",
                      "left": [
                        {
                          "name": "okay_to_launch",
                          "type": {
                            "kind": "PrimType",
                            "primType": "bool"
                          }
                        }
                      ],
                      "expr": {
                        "kind": "UnaryExpr",
                        "operand": {
                          "kind": "NamedElmExpr",
                          "name": "internal_error_detected"
                        },
                        "op": "not"
                      }
                    },
                    {
                      "kind": "EqStatement",
                      "left": [
                        {
                          "name": "separation",
                          "type": {
                            "kind": "PrimType",
                            "primType": "bool"
                          }
                        }
                      ],
                      "expr": {
                        "kind": "UnaryExpr",
                        "operand": {
                          "kind": "NamedElmExpr",
                          "name": "connected"
                        },
                        "op": "not"
                      }
                    },
                    {
                      "kind": "EqStatement",
                      "left": [
                        {
                          "name": "destination_location_reached",
                          "type": {
                            "kind": "PrimType",
                            "primType": "bool"
                          }
                        }
                      ],
                      "expr": {
                        "kind": "CallExpr",
                        "function": {
                          "kind": "DoubleDotRef",
                          "packageName": "Agree_Nodes",
                          "name": "close_locations"
                        },
                        "args": [
                          {
                            "kind": "NamedElmExpr",
                            "name": "cur_pos"
                          },
                          {
                            "kind": "NamedElmExpr",
                            "name": "dest_position"
                          }
                        ]
                      }
                    },
                    {
                      "kind": "EqStatement",
                      "left": [
                        {
                          "name": "no_clearance",
                          "type": {
                            "kind": "PrimType",
                            "primType": "bool"
                          }
                        }
                      ],
                      "expr": {
                        "kind": "UnaryExpr",
                        "operand": {
                          "kind": "NamedElmExpr",
                          "name": "is_safe_landing"
                        },
                        "op": "not"
                      }
                    },
                    {
                      "kind": "EqStatement",
                      "left": [
                        {
                          "name": "successfull_delivery",
                          "type": {
                            "kind": "PrimType",
                            "primType": "bool"
                          }
                        }
                      ],
                      "expr": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "BinaryExpr",
                          "left": {
                            "kind": "NamedElmExpr",
                            "name": "delivery_completed"
                          },
                          "op": "and",
                          "right": {
                            "kind": "NamedElmExpr",
                            "name": "destination_location_reached"
                          }
                        },
                        "op": "and",
                        "right": {
                          "kind": "UnaryExpr",
                          "operand": {
                            "kind": "NamedElmExpr",
                            "name": "no_clearance"
                          },
                          "op": "not"
                        }
                      }
                    },
                    {
                      "kind": "EqStatement",
                      "left": [
                        {
                          "name": "exhaustive_retries",
                          "type": {
                            "kind": "PrimType",
                            "primType": "bool"
                          }
                        }
                      ],
                      "expr": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "NamedElmExpr",
                          "name": "get_clearance_timeout"
                        },
                        "op": "or",
                        "right": {
                          "kind": "NamedElmExpr",
                          "name": "confirmation_timeout"
                        }
                      }
                    },
                    {
                      "kind": "EqStatement",
                      "left": [
                        {
                          "name": "internal_error_detected",
                          "type": {
                            "kind": "PrimType",
                            "primType": "bool"
                          }
                        }
                      ],
                      "expr": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "BinaryExpr",
                          "left": {
                            "kind": "BinaryExpr",
                            "left": {
                              "kind": "UnaryExpr",
                              "operand": {
                                "kind": "NamedElmExpr",
                                "name": "gps_health_status"
                              },
                              "op": "not"
                            },
                            "op": "or",
                            "right": {
                              "kind": "UnaryExpr",
                              "operand": {
                                "kind": "NamedElmExpr",
                                "name": "imu_health_status"
                              },
                              "op": "not"
                            }
                          },
                          "op": "or",
                          "right": {
                            "kind": "UnaryExpr",
                            "operand": {
                              "kind": "NamedElmExpr",
                              "name": "rdo_health_status"
                            },
                            "op": "not"
                          }
                        },
                        "op": "or",
                        "right": {
                          "kind": "UnaryExpr",
                          "operand": {
                            "kind": "NamedElmExpr",
                            "name": "cam_health_status"
                          },
                          "op": "not"
                        }
                      }
                    },
                    {
                      "kind": "EqStatement",
                      "left": [
                        {
                          "name": "truck_location_reached",
                          "type": {
                            "kind": "PrimType",
                            "primType": "bool"
                          }
                        }
                      ],
                      "expr": {
                        "kind": "CallExpr",
                        "function": {
                          "kind": "DoubleDotRef",
                          "packageName": "Agree_Nodes",
                          "name": "close_locations"
                        },
                        "args": [
                          {
                            "kind": "NamedElmExpr",
                            "name": "cur_pos"
                          },
                          {
                            "kind": "NamedElmExpr",
                            "name": "truck_position"
                          }
                        ]
                      }
                    },
                    {
                      "kind": "EqStatement",
                      "left": [
                        {
                          "name": "connected",
                          "type": {
                            "kind": "PrimType",
                            "primType": "bool"
                          }
                        }
                      ],
                      "expr": {
                        "kind": "SelectionExpr",
                        "target": {
                          "kind": "NamedElmExpr",
                          "name": "bus_in"
                        },
                        "field": "connected"
                      }
                    },
                    {
                      "kind": "GuaranteeStatement",
                      "label": "Output: probe_safe_landing",
                      "expr": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "NamedElmExpr",
                          "name": "probe_safe_landing"
                        },
                        "op": "=",
                        "right": {
                          "kind": "RecordLitExpr",
                          "recordType": {
                            "kind": "DoubleDotRef",
                            "name": "Data_Types::ProbeSafeLanding.impl"
                          },
                          "value": {
                            "is_target_clear": {
                              "kind": "NamedElmExpr",
                              "name": "target_clear"
                            },
                            "has_valid_marker": {
                              "kind": "NamedElmExpr",
                              "name": "valid_marker"
                            }
                          }
                        }
                      }
                    },
                    {
                      "kind": "GuaranteeStatement",
                      "label": "Output: delivery_cmd",
                      "expr": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "NamedElmExpr",
                          "name": "delivery_cmd"
                        },
                        "op": "=",
                        "right": {
                          "kind": "IfThenElseExpr",
                          "if": {
                            "kind": "BinaryExpr",
                            "left": {
                              "kind": "BinaryExpr",
                              "left": {
                                "kind": "NamedElmExpr",
                                "name": "making_delivery_mode"
                              },
                              "op": "and",
                              "right": {
                                "kind": "UnaryExpr",
                                "operand": {
                                  "kind": "NamedElmExpr",
                                  "name": "no_clearance"
                                },
                                "op": "not"
                              }
                            },
                            "op": "and",
                            "right": {
                              "kind": "BinaryExpr",
                              "left": {
                                "kind": "NamedElmExpr",
                                "name": "expensive_item"
                              },
                              "op": "=>",
                              "right": {
                                "kind": "NamedElmExpr",
                                "name": "confirmation"
                              }
                            }
                          },
                          "then": {
                            "kind": "NamedElmExpr",
                            "name": "RELEASE_PACKAGE_CMD"
                          },
                          "else": {
                            "kind": "IfThenElseExpr",
                            "if": {
                              "kind": "BinaryExpr",
                              "left": {
                                "kind": "NamedElmExpr",
                                "name": "return_to_truck_mode"
                              },
                              "op": "and",
                              "right": {
                                "kind": "NamedElmExpr",
                                "name": "internal_error_detected"
                              }
                            },
                            "then": {
                              "kind": "NamedElmExpr",
                              "name": "ABORT_DELIVERY_CMD"
                            },
                            "else": {
                              "kind": "NamedElmExpr",
                              "name": "NO_OPERATION_CMD"
                            }
                          }
                        }
                      }
                    },
                    {
                      "kind": "GuaranteeStatement",
                      "label": "Output: constellation",
                      "expr": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "NamedElmExpr",
                          "name": "constellation"
                        },
                        "op": "=",
                        "right": {
                          "kind": "IfThenElseExpr",
                          "if": {
                            "kind": "NamedElmExpr",
                            "name": "init_mode"
                          },
                          "then": {
                            "kind": "SelectionExpr",
                            "target": {
                              "kind": "NamedElmExpr",
                              "name": "bus_in"
                            },
                            "field": "constellation"
                          },
                          "else": {
                            "kind": "BinaryExpr",
                            "left": {
                              "kind": "SelectionExpr",
                              "target": {
                                "kind": "NamedElmExpr",
                                "name": "bus_in"
                              },
                              "field": "constellation"
                            },
                            "op": "->",
                            "right": {
                              "kind": "PreExpr",
                              "expr": {
                                "kind": "NamedElmExpr",
                                "name": "constellation"
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "kind": "GuaranteeStatement",
                      "label": "Output: dest_location",
                      "expr": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "NamedElmExpr",
                          "name": "dest_location"
                        },
                        "op": "=",
                        "right": {
                          "kind": "IfThenElseExpr",
                          "if": {
                            "kind": "NamedElmExpr",
                            "name": "init_mode"
                          },
                          "then": {
                            "kind": "SelectionExpr",
                            "target": {
                              "kind": "SelectionExpr",
                              "target": {
                                "kind": "NamedElmExpr",
                                "name": "bus_in"
                              },
                              "field": "order"
                            },
                            "field": "target_position"
                          },
                          "else": {
                            "kind": "BinaryExpr",
                            "left": {
                              "kind": "SelectionExpr",
                              "target": {
                                "kind": "SelectionExpr",
                                "target": {
                                  "kind": "NamedElmExpr",
                                  "name": "bus_in"
                                },
                                "field": "order"
                              },
                              "field": "target_position"
                            },
                            "op": "->",
                            "right": {
                              "kind": "PreExpr",
                              "expr": {
                                "kind": "NamedElmExpr",
                                "name": "dest_location"
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "kind": "GuaranteeStatement",
                      "label": "Output: launch_pos",
                      "expr": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "NamedElmExpr",
                          "name": "launch_pos"
                        },
                        "op": "=",
                        "right": {
                          "kind": "IfThenElseExpr",
                          "if": {
                            "kind": "NamedElmExpr",
                            "name": "init_mode"
                          },
                          "then": {
                            "kind": "SelectionExpr",
                            "target": {
                              "kind": "NamedElmExpr",
                              "name": "bus_in"
                            },
                            "field": "launch_pos"
                          },
                          "else": {
                            "kind": "BinaryExpr",
                            "left": {
                              "kind": "SelectionExpr",
                              "target": {
                                "kind": "NamedElmExpr",
                                "name": "bus_in"
                              },
                              "field": "launch_pos"
                            },
                            "op": "->",
                            "right": {
                              "kind": "PreExpr",
                              "expr": {
                                "kind": "NamedElmExpr",
                                "name": "launch_pos"
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "kind": "GuaranteeStatement",
                      "label": "Output: radio_cmd",
                      "expr": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "NamedElmExpr",
                          "name": "radio_cmd"
                        },
                        "op": "=",
                        "right": {
                          "kind": "BinaryExpr",
                          "left": {
                            "kind": "NamedElmExpr",
                            "name": "making_delivery_mode"
                          },
                          "op": "and",
                          "right": {
                            "kind": "NamedElmExpr",
                            "name": "expensive_item"
                          }
                        }
                      }
                    },
                    {
                      "kind": "GuaranteeStatement",
                      "label": "Output: probe_init_mode",
                      "expr": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "NamedElmExpr",
                          "name": "probe_init_mode"
                        },
                        "op": "=",
                        "right": {
                          "kind": "NamedElmExpr",
                          "name": "init_mode"
                        }
                      }
                    },
                    {
                      "kind": "GuaranteeStatement",
                      "label": "Output: probe_abort_mode",
                      "expr": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "NamedElmExpr",
                          "name": "probe_abort_mode"
                        },
                        "op": "=",
                        "right": {
                          "kind": "NamedElmExpr",
                          "name": "abort_mode"
                        }
                      }
                    },
                    {
                      "kind": "GuaranteeStatement",
                      "label": "Output: nav_cmd | it sends signal to navigation only if it's in flying modes'",
                      "expr": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "NamedElmExpr",
                          "name": "nav_cmd"
                        },
                        "op": "=",
                        "right": {
                          "kind": "BinaryExpr",
                          "left": {
                            "kind": "BinaryExpr",
                            "left": {
                              "kind": "NamedElmExpr",
                              "name": "flying_to_dest_mode"
                            },
                            "op": "or",
                            "right": {
                              "kind": "NamedElmExpr",
                              "name": "making_delivery_mode"
                            }
                          },
                          "op": "or",
                          "right": {
                            "kind": "NamedElmExpr",
                            "name": "return_to_truck_mode"
                          }
                        }
                      }
                    },
                    {
                      "kind": "EqStatement",
                      "left": [
                        {
                          "name": "off_mode",
                          "type": {
                            "kind": "PrimType",
                            "primType": "bool"
                          }
                        }
                      ],
                      "expr": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "BoolLitExpr",
                          "value": "true"
                        },
                        "op": "->",
                        "right": {
                          "kind": "BinaryExpr",
                          "left": {
                            "kind": "BinaryExpr",
                            "left": {
                              "kind": "BinaryExpr",
                              "left": {
                                "kind": "BinaryExpr",
                                "left": {
                                  "kind": "PreExpr",
                                  "expr": {
                                    "kind": "NamedElmExpr",
                                    "name": "off_mode"
                                  }
                                },
                                "op": "and",
                                "right": {
                                  "kind": "UnaryExpr",
                                  "operand": {
                                    "kind": "BinaryExpr",
                                    "left": {
                                      "kind": "NamedElmExpr",
                                      "name": "on_off"
                                    },
                                    "op": "and",
                                    "right": {
                                      "kind": "NamedElmExpr",
                                      "name": "connected"
                                    }
                                  },
                                  "op": "not"
                                }
                              },
                              "op": "or",
                              "right": {
                                "kind": "BinaryExpr",
                                "left": {
                                  "kind": "BinaryExpr",
                                  "left": {
                                    "kind": "PreExpr",
                                    "expr": {
                                      "kind": "NamedElmExpr",
                                      "name": "init_mode"
                                    }
                                  },
                                  "op": "and",
                                  "right": {
                                    "kind": "NamedElmExpr",
                                    "name": "on_off"
                                  }
                                },
                                "op": "and",
                                "right": {
                                  "kind": "NamedElmExpr",
                                  "name": "connected"
                                }
                              }
                            },
                            "op": "or",
                            "right": {
                              "kind": "BinaryExpr",
                              "left": {
                                "kind": "BinaryExpr",
                                "left": {
                                  "kind": "PreExpr",
                                  "expr": {
                                    "kind": "NamedElmExpr",
                                    "name": "ready_mode"
                                  }
                                },
                                "op": "and",
                                "right": {
                                  "kind": "NamedElmExpr",
                                  "name": "on_off"
                                }
                              },
                              "op": "and",
                              "right": {
                                "kind": "NamedElmExpr",
                                "name": "connected"
                              }
                            }
                          },
                          "op": "or",
                          "right": {
                            "kind": "BinaryExpr",
                            "left": {
                              "kind": "BinaryExpr",
                              "left": {
                                "kind": "PreExpr",
                                "expr": {
                                  "kind": "NamedElmExpr",
                                  "name": "abort_mode"
                                }
                              },
                              "op": "and",
                              "right": {
                                "kind": "NamedElmExpr",
                                "name": "on_off"
                              }
                            },
                            "op": "and",
                            "right": {
                              "kind": "NamedElmExpr",
                              "name": "connected"
                            }
                          }
                        }
                      }
                    },
                    {
                      "kind": "EqStatement",
                      "left": [
                        {
                          "name": "init_mode",
                          "type": {
                            "kind": "PrimType",
                            "primType": "bool"
                          }
                        }
                      ],
                      "expr": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "BoolLitExpr",
                          "value": "false"
                        },
                        "op": "->",
                        "right": {
                          "kind": "BinaryExpr",
                          "left": {
                            "kind": "BinaryExpr",
                            "left": {
                              "kind": "BinaryExpr",
                              "left": {
                                "kind": "BinaryExpr",
                                "left": {
                                  "kind": "BinaryExpr",
                                  "left": {
                                    "kind": "BinaryExpr",
                                    "left": {
                                      "kind": "PreExpr",
                                      "expr": {
                                        "kind": "NamedElmExpr",
                                        "name": "init_mode"
                                      }
                                    },
                                    "op": "and",
                                    "right": {
                                      "kind": "UnaryExpr",
                                      "operand": {
                                        "kind": "BinaryExpr",
                                        "left": {
                                          "kind": "NamedElmExpr",
                                          "name": "on_off"
                                        },
                                        "op": "and",
                                        "right": {
                                          "kind": "NamedElmExpr",
                                          "name": "connected"
                                        }
                                      },
                                      "op": "not"
                                    }
                                  },
                                  "op": "and",
                                  "right": {
                                    "kind": "UnaryExpr",
                                    "operand": {
                                      "kind": "BinaryExpr",
                                      "left": {
                                        "kind": "NamedElmExpr",
                                        "name": "init_criteria_succeed"
                                      },
                                      "op": "and",
                                      "right": {
                                        "kind": "NamedElmExpr",
                                        "name": "connected"
                                      }
                                    },
                                    "op": "not"
                                  }
                                },
                                "op": "and",
                                "right": {
                                  "kind": "UnaryExpr",
                                  "operand": {
                                    "kind": "BinaryExpr",
                                    "left": {
                                      "kind": "NamedElmExpr",
                                      "name": "abort_cmd"
                                    },
                                    "op": "and",
                                    "right": {
                                      "kind": "NamedElmExpr",
                                      "name": "connected"
                                    }
                                  },
                                  "op": "not"
                                }
                              },
                              "op": "or",
                              "right": {
                                "kind": "BinaryExpr",
                                "left": {
                                  "kind": "BinaryExpr",
                                  "left": {
                                    "kind": "PreExpr",
                                    "expr": {
                                      "kind": "NamedElmExpr",
                                      "name": "off_mode"
                                    }
                                  },
                                  "op": "and",
                                  "right": {
                                    "kind": "NamedElmExpr",
                                    "name": "on_off"
                                  }
                                },
                                "op": "and",
                                "right": {
                                  "kind": "NamedElmExpr",
                                  "name": "connected"
                                }
                              }
                            },
                            "op": "or",
                            "right": {
                              "kind": "BinaryExpr",
                              "left": {
                                "kind": "BinaryExpr",
                                "left": {
                                  "kind": "PreExpr",
                                  "expr": {
                                    "kind": "NamedElmExpr",
                                    "name": "ready_mode"
                                  }
                                },
                                "op": "and",
                                "right": {
                                  "kind": "NamedElmExpr",
                                  "name": "init_criteria_failed"
                                }
                              },
                              "op": "and",
                              "right": {
                                "kind": "NamedElmExpr",
                                "name": "connected"
                              }
                            }
                          },
                          "op": "or",
                          "right": {
                            "kind": "BinaryExpr",
                            "left": {
                              "kind": "BinaryExpr",
                              "left": {
                                "kind": "PreExpr",
                                "expr": {
                                  "kind": "NamedElmExpr",
                                  "name": "return_to_truck_mode"
                                }
                              },
                              "op": "and",
                              "right": {
                                "kind": "NamedElmExpr",
                                "name": "truck_location_reached"
                              }
                            },
                            "op": "and",
                            "right": {
                              "kind": "NamedElmExpr",
                              "name": "connected"
                            }
                          }
                        }
                      }
                    },
                    {
                      "kind": "EqStatement",
                      "left": [
                        {
                          "name": "ready_mode",
                          "type": {
                            "kind": "PrimType",
                            "primType": "bool"
                          }
                        }
                      ],
                      "expr": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "BoolLitExpr",
                          "value": "false"
                        },
                        "op": "->",
                        "right": {
                          "kind": "BinaryExpr",
                          "left": {
                            "kind": "BinaryExpr",
                            "left": {
                              "kind": "BinaryExpr",
                              "left": {
                                "kind": "BinaryExpr",
                                "left": {
                                  "kind": "BinaryExpr",
                                  "left": {
                                    "kind": "PreExpr",
                                    "expr": {
                                      "kind": "NamedElmExpr",
                                      "name": "ready_mode"
                                    }
                                  },
                                  "op": "and",
                                  "right": {
                                    "kind": "UnaryExpr",
                                    "operand": {
                                      "kind": "BinaryExpr",
                                      "left": {
                                        "kind": "NamedElmExpr",
                                        "name": "init_criteria_failed"
                                      },
                                      "op": "and",
                                      "right": {
                                        "kind": "NamedElmExpr",
                                        "name": "connected"
                                      }
                                    },
                                    "op": "not"
                                  }
                                },
                                "op": "and",
                                "right": {
                                  "kind": "UnaryExpr",
                                  "operand": {
                                    "kind": "BinaryExpr",
                                    "left": {
                                      "kind": "NamedElmExpr",
                                      "name": "on_off"
                                    },
                                    "op": "and",
                                    "right": {
                                      "kind": "NamedElmExpr",
                                      "name": "connected"
                                    }
                                  },
                                  "op": "not"
                                }
                              },
                              "op": "and",
                              "right": {
                                "kind": "UnaryExpr",
                                "operand": {
                                  "kind": "BinaryExpr",
                                  "left": {
                                    "kind": "NamedElmExpr",
                                    "name": "abort_cmd"
                                  },
                                  "op": "and",
                                  "right": {
                                    "kind": "NamedElmExpr",
                                    "name": "connected"
                                  }
                                },
                                "op": "not"
                              }
                            },
                            "op": "and",
                            "right": {
                              "kind": "UnaryExpr",
                              "operand": {
                                "kind": "BinaryExpr",
                                "left": {
                                  "kind": "NamedElmExpr",
                                  "name": "mission_store_release_sequence"
                                },
                                "op": "and",
                                "right": {
                                  "kind": "NamedElmExpr",
                                  "name": "connected"
                                }
                              },
                              "op": "not"
                            }
                          },
                          "op": "or",
                          "right": {
                            "kind": "BinaryExpr",
                            "left": {
                              "kind": "BinaryExpr",
                              "left": {
                                "kind": "PreExpr",
                                "expr": {
                                  "kind": "NamedElmExpr",
                                  "name": "init_mode"
                                }
                              },
                              "op": "and",
                              "right": {
                                "kind": "NamedElmExpr",
                                "name": "init_criteria_succeed"
                              }
                            },
                            "op": "and",
                            "right": {
                              "kind": "NamedElmExpr",
                              "name": "connected"
                            }
                          }
                        }
                      }
                    },
                    {
                      "kind": "EqStatement",
                      "left": [
                        {
                          "name": "launch_mode",
                          "type": {
                            "kind": "PrimType",
                            "primType": "bool"
                          }
                        }
                      ],
                      "expr": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "BoolLitExpr",
                          "value": "false"
                        },
                        "op": "->",
                        "right": {
                          "kind": "BinaryExpr",
                          "left": {
                            "kind": "BinaryExpr",
                            "left": {
                              "kind": "BinaryExpr",
                              "left": {
                                "kind": "PreExpr",
                                "expr": {
                                  "kind": "NamedElmExpr",
                                  "name": "launch_mode"
                                }
                              },
                              "op": "and",
                              "right": {
                                "kind": "UnaryExpr",
                                "operand": {
                                  "kind": "BinaryExpr",
                                  "left": {
                                    "kind": "NamedElmExpr",
                                    "name": "abort_cmd"
                                  },
                                  "op": "and",
                                  "right": {
                                    "kind": "NamedElmExpr",
                                    "name": "connected"
                                  }
                                },
                                "op": "not"
                              }
                            },
                            "op": "and",
                            "right": {
                              "kind": "UnaryExpr",
                              "operand": {
                                "kind": "BinaryExpr",
                                "left": {
                                  "kind": "BinaryExpr",
                                  "left": {
                                    "kind": "NamedElmExpr",
                                    "name": "package_is_secure"
                                  },
                                  "op": "and",
                                  "right": {
                                    "kind": "NamedElmExpr",
                                    "name": "okay_to_launch"
                                  }
                                },
                                "op": "and",
                                "right": {
                                  "kind": "NamedElmExpr",
                                  "name": "separation"
                                }
                              },
                              "op": "not"
                            }
                          },
                          "op": "or",
                          "right": {
                            "kind": "BinaryExpr",
                            "left": {
                              "kind": "BinaryExpr",
                              "left": {
                                "kind": "PreExpr",
                                "expr": {
                                  "kind": "NamedElmExpr",
                                  "name": "ready_mode"
                                }
                              },
                              "op": "and",
                              "right": {
                                "kind": "NamedElmExpr",
                                "name": "mission_store_release_sequence"
                              }
                            },
                            "op": "and",
                            "right": {
                              "kind": "NamedElmExpr",
                              "name": "connected"
                            }
                          }
                        }
                      }
                    },
                    {
                      "kind": "EqStatement",
                      "left": [
                        {
                          "name": "abort_mode",
                          "type": {
                            "kind": "PrimType",
                            "primType": "bool"
                          }
                        }
                      ],
                      "expr": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "BoolLitExpr",
                          "value": "false"
                        },
                        "op": "->",
                        "right": {
                          "kind": "BinaryExpr",
                          "left": {
                            "kind": "BinaryExpr",
                            "left": {
                              "kind": "BinaryExpr",
                              "left": {
                                "kind": "BinaryExpr",
                                "left": {
                                  "kind": "PreExpr",
                                  "expr": {
                                    "kind": "NamedElmExpr",
                                    "name": "abort_mode"
                                  }
                                },
                                "op": "and",
                                "right": {
                                  "kind": "UnaryExpr",
                                  "operand": {
                                    "kind": "BinaryExpr",
                                    "left": {
                                      "kind": "NamedElmExpr",
                                      "name": "on_off"
                                    },
                                    "op": "and",
                                    "right": {
                                      "kind": "NamedElmExpr",
                                      "name": "connected"
                                    }
                                  },
                                  "op": "not"
                                }
                              },
                              "op": "or",
                              "right": {
                                "kind": "BinaryExpr",
                                "left": {
                                  "kind": "BinaryExpr",
                                  "left": {
                                    "kind": "PreExpr",
                                    "expr": {
                                      "kind": "NamedElmExpr",
                                      "name": "init_mode"
                                    }
                                  },
                                  "op": "and",
                                  "right": {
                                    "kind": "NamedElmExpr",
                                    "name": "abort_cmd"
                                  }
                                },
                                "op": "and",
                                "right": {
                                  "kind": "NamedElmExpr",
                                  "name": "connected"
                                }
                              }
                            },
                            "op": "or",
                            "right": {
                              "kind": "BinaryExpr",
                              "left": {
                                "kind": "BinaryExpr",
                                "left": {
                                  "kind": "PreExpr",
                                  "expr": {
                                    "kind": "NamedElmExpr",
                                    "name": "ready_mode"
                                  }
                                },
                                "op": "and",
                                "right": {
                                  "kind": "NamedElmExpr",
                                  "name": "abort_cmd"
                                }
                              },
                              "op": "and",
                              "right": {
                                "kind": "NamedElmExpr",
                                "name": "connected"
                              }
                            }
                          },
                          "op": "or",
                          "right": {
                            "kind": "BinaryExpr",
                            "left": {
                              "kind": "BinaryExpr",
                              "left": {
                                "kind": "PreExpr",
                                "expr": {
                                  "kind": "NamedElmExpr",
                                  "name": "launch_mode"
                                }
                              },
                              "op": "and",
                              "right": {
                                "kind": "NamedElmExpr",
                                "name": "abort_cmd"
                              }
                            },
                            "op": "and",
                            "right": {
                              "kind": "NamedElmExpr",
                              "name": "connected"
                            }
                          }
                        }
                      }
                    },
                    {
                      "kind": "EqStatement",
                      "left": [
                        {
                          "name": "flying_to_dest_mode",
                          "type": {
                            "kind": "PrimType",
                            "primType": "bool"
                          }
                        }
                      ],
                      "expr": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "BoolLitExpr",
                          "value": "false"
                        },
                        "op": "->",
                        "right": {
                          "kind": "BinaryExpr",
                          "left": {
                            "kind": "BinaryExpr",
                            "left": {
                              "kind": "PreExpr",
                              "expr": {
                                "kind": "NamedElmExpr",
                                "name": "flying_to_dest_mode"
                              }
                            },
                            "op": "and",
                            "right": {
                              "kind": "UnaryExpr",
                              "operand": {
                                "kind": "NamedElmExpr",
                                "name": "destination_location_reached"
                              },
                              "op": "not"
                            }
                          },
                          "op": "or",
                          "right": {
                            "kind": "BinaryExpr",
                            "left": {
                              "kind": "BinaryExpr",
                              "left": {
                                "kind": "BinaryExpr",
                                "left": {
                                  "kind": "PreExpr",
                                  "expr": {
                                    "kind": "NamedElmExpr",
                                    "name": "launch_mode"
                                  }
                                },
                                "op": "and",
                                "right": {
                                  "kind": "NamedElmExpr",
                                  "name": "package_is_secure"
                                }
                              },
                              "op": "and",
                              "right": {
                                "kind": "NamedElmExpr",
                                "name": "okay_to_launch"
                              }
                            },
                            "op": "and",
                            "right": {
                              "kind": "NamedElmExpr",
                              "name": "separation"
                            }
                          }
                        }
                      }
                    },
                    {
                      "kind": "EqStatement",
                      "left": [
                        {
                          "name": "making_delivery_mode",
                          "type": {
                            "kind": "PrimType",
                            "primType": "bool"
                          }
                        }
                      ],
                      "expr": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "BoolLitExpr",
                          "value": "false"
                        },
                        "op": "->",
                        "right": {
                          "kind": "BinaryExpr",
                          "left": {
                            "kind": "BinaryExpr",
                            "left": {
                              "kind": "PreExpr",
                              "expr": {
                                "kind": "NamedElmExpr",
                                "name": "making_delivery_mode"
                              }
                            },
                            "op": "and",
                            "right": {
                              "kind": "UnaryExpr",
                              "operand": {
                                "kind": "BinaryExpr",
                                "left": {
                                  "kind": "BinaryExpr",
                                  "left": {
                                    "kind": "BinaryExpr",
                                    "left": {
                                      "kind": "NamedElmExpr",
                                      "name": "successfull_delivery"
                                    },
                                    "op": "or",
                                    "right": {
                                      "kind": "NamedElmExpr",
                                      "name": "exhaustive_retries"
                                    }
                                  },
                                  "op": "or",
                                  "right": {
                                    "kind": "NamedElmExpr",
                                    "name": "delivery_failed"
                                  }
                                },
                                "op": "or",
                                "right": {
                                  "kind": "NamedElmExpr",
                                  "name": "internal_error_detected"
                                }
                              },
                              "op": "not"
                            }
                          },
                          "op": "or",
                          "right": {
                            "kind": "BinaryExpr",
                            "left": {
                              "kind": "PreExpr",
                              "expr": {
                                "kind": "NamedElmExpr",
                                "name": "flying_to_dest_mode"
                              }
                            },
                            "op": "and",
                            "right": {
                              "kind": "NamedElmExpr",
                              "name": "destination_location_reached"
                            }
                          }
                        }
                      }
                    },
                    {
                      "kind": "EqStatement",
                      "left": [
                        {
                          "name": "return_to_truck_mode",
                          "type": {
                            "kind": "PrimType",
                            "primType": "bool"
                          }
                        }
                      ],
                      "expr": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "BoolLitExpr",
                          "value": "false"
                        },
                        "op": "->",
                        "right": {
                          "kind": "BinaryExpr",
                          "left": {
                            "kind": "BinaryExpr",
                            "left": {
                              "kind": "PreExpr",
                              "expr": {
                                "kind": "NamedElmExpr",
                                "name": "return_to_truck_mode"
                              }
                            },
                            "op": "and",
                            "right": {
                              "kind": "UnaryExpr",
                              "operand": {
                                "kind": "BinaryExpr",
                                "left": {
                                  "kind": "NamedElmExpr",
                                  "name": "truck_location_reached"
                                },
                                "op": "and",
                                "right": {
                                  "kind": "NamedElmExpr",
                                  "name": "connected"
                                }
                              },
                              "op": "not"
                            }
                          },
                          "op": "or",
                          "right": {
                            "kind": "BinaryExpr",
                            "left": {
                              "kind": "PreExpr",
                              "expr": {
                                "kind": "NamedElmExpr",
                                "name": "making_delivery_mode"
                              }
                            },
                            "op": "and",
                            "right": {
                              "kind": "BinaryExpr",
                              "left": {
                                "kind": "BinaryExpr",
                                "left": {
                                  "kind": "BinaryExpr",
                                  "left": {
                                    "kind": "NamedElmExpr",
                                    "name": "successfull_delivery"
                                  },
                                  "op": "or",
                                  "right": {
                                    "kind": "NamedElmExpr",
                                    "name": "exhaustive_retries"
                                  }
                                },
                                "op": "or",
                                "right": {
                                  "kind": "NamedElmExpr",
                                  "name": "delivery_failed"
                                }
                              },
                              "op": "or",
                              "right": {
                                "kind": "NamedElmExpr",
                                "name": "internal_error_detected"
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "kind": "GuaranteeStatement",
                      "label": "Modes are mutually exclusive",
                      "expr": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "BinaryExpr",
                          "left": {
                            "kind": "BinaryExpr",
                            "left": {
                              "kind": "BinaryExpr",
                              "left": {
                                "kind": "BinaryExpr",
                                "left": {
                                  "kind": "BinaryExpr",
                                  "left": {
                                    "kind": "BinaryExpr",
                                    "left": {
                                      "kind": "BinaryExpr",
                                      "left": {
                                        "kind": "CallExpr",
                                        "function": {
                                          "kind": "DoubleDotRef",
                                          "packageName": "Agree_Nodes",
                                          "name": "ToInt"
                                        },
                                        "args": [
                                          {
                                            "kind": "NamedElmExpr",
                                            "name": "off_mode"
                                          }
                                        ]
                                      },
                                      "op": "+",
                                      "right": {
                                        "kind": "CallExpr",
                                        "function": {
                                          "kind": "DoubleDotRef",
                                          "packageName": "Agree_Nodes",
                                          "name": "ToInt"
                                        },
                                        "args": [
                                          {
                                            "kind": "NamedElmExpr",
                                            "name": "init_mode"
                                          }
                                        ]
                                      }
                                    },
                                    "op": "+",
                                    "right": {
                                      "kind": "CallExpr",
                                      "function": {
                                        "kind": "DoubleDotRef",
                                        "packageName": "Agree_Nodes",
                                        "name": "ToInt"
                                      },
                                      "args": [
                                        {
                                          "kind": "NamedElmExpr",
                                          "name": "ready_mode"
                                        }
                                      ]
                                    }
                                  },
                                  "op": "+",
                                  "right": {
                                    "kind": "CallExpr",
                                    "function": {
                                      "kind": "DoubleDotRef",
                                      "packageName": "Agree_Nodes",
                                      "name": "ToInt"
                                    },
                                    "args": [
                                      {
                                        "kind": "NamedElmExpr",
                                        "name": "launch_mode"
                                      }
                                    ]
                                  }
                                },
                                "op": "+",
                                "right": {
                                  "kind": "CallExpr",
                                  "function": {
                                    "kind": "DoubleDotRef",
                                    "packageName": "Agree_Nodes",
                                    "name": "ToInt"
                                  },
                                  "args": [
                                    {
                                      "kind": "NamedElmExpr",
                                      "name": "abort_mode"
                                    }
                                  ]
                                }
                              },
                              "op": "+",
                              "right": {
                                "kind": "CallExpr",
                                "function": {
                                  "kind": "DoubleDotRef",
                                  "packageName": "Agree_Nodes",
                                  "name": "ToInt"
                                },
                                "args": [
                                  {
                                    "kind": "NamedElmExpr",
                                    "name": "flying_to_dest_mode"
                                  }
                                ]
                              }
                            },
                            "op": "+",
                            "right": {
                              "kind": "CallExpr",
                              "function": {
                                "kind": "DoubleDotRef",
                                "packageName": "Agree_Nodes",
                                "name": "ToInt"
                              },
                              "args": [
                                {
                                  "kind": "NamedElmExpr",
                                  "name": "making_delivery_mode"
                                }
                              ]
                            }
                          },
                          "op": "+",
                          "right": {
                            "kind": "CallExpr",
                            "function": {
                              "kind": "DoubleDotRef",
                              "packageName": "Agree_Nodes",
                              "name": "ToInt"
                            },
                            "args": [
                              {
                                "kind": "NamedElmExpr",
                                "name": "return_to_truck_mode"
                              }
                            ]
                          }
                        },
                        "op": "=",
                        "right": {
                          "kind": "IntLitExpr",
                          "value": "1"
                        }
                      }
                    }
                  ]
                },
                "sourceText": "{**\n\t\t\t-- variables\n\t\t\teq recent_order: Data_Types::DeliveryOrder.impl = if init_mode then \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \tbus_in.order\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  else\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \tbus_in.order -> pre(recent_order);\n\t\t\teq truck_position: Data_Types::Position.impl = Agree_Nodes::FirstLocation(cur_pos);\t\n\t\t\teq dest_position: Data_Types::Position.impl = dest_location;\n\t\t\teq expensive_item: bool = recent_order.item_value >= Agree_Constants::ITEM_VALUE_THRESHOLD;\n\t\t\teq confirmation: bool = radio_response.target_confirmed and radio_response.data_available;\n\t\t\teq confirmation_timeout: bool = (Agree_Nodes::Duration(not confirmation) > Agree_Constants::WAITING_CONFIRMATION_THRESHOLD);\n\t\t\teq get_clearance_timeout: bool = (Agree_Nodes::Duration(no_clearance) >= Agree_Constants::MAXIMUM_NUMBER_OF_RETRIES);\n\t\t\teq delivery_failed: bool = (delivery_status = Agree_Constants::FAILED_STATUS);\n\t\t\teq delivery_completed: bool = (delivery_status = Agree_Constants::COMPLETED_STATUS);\n\t\t\teq is_safe_landing: bool = (target_clear and valid_marker);\n\t\t\t\n\t\t\t-- events\n\t\t\teq on_off: bool = bus_in.on_off;\n\t\t\teq init_criteria_succeed: bool = bus_in.init_criteria_satisfied and not internal_error_detected;\n\t\t\teq init_criteria_failed: bool = not init_criteria_succeed;\n\t\t\teq abort_cmd: bool = bus_in.abort_cmd;\n\t\t\teq mission_store_release_sequence: bool = bus_in.mission_store_release_sequence;\n\t\t\teq okay_to_launch: bool = not internal_error_detected;\n\t\t\teq separation: bool = not connected;\n\t\t\teq destination_location_reached: bool = Agree_Nodes::close_locations(cur_pos, dest_position);\n\t\t\teq no_clearance: bool = not is_safe_landing;\n\t\t\teq successfull_delivery: bool = delivery_completed and destination_location_reached and not no_clearance;\n\t\t\teq exhaustive_retries: bool =  get_clearance_timeout or confirmation_timeout;\n\t\t\teq internal_error_detected: bool = not gps_health_status or not imu_health_status or not rdo_health_status or not cam_health_status;\n\t\t\teq truck_location_reached: bool = Agree_Nodes::close_locations(cur_pos, truck_position);\n\t\t\teq connected: bool = bus_in.connected;\n\t\t\t\n\t\t\t-- probe\n\t\t\tguarantee \\\"Output: probe_safe_landing\\\": probe_safe_landing = Data_Types::ProbeSafeLanding.impl {is_target_clear = target_clear; has_valid_marker = valid_marker};\n\t\t\t\n\t\t\tguarantee \\\"Output: delivery_cmd\\\":\n\t\t\t\tdelivery_cmd = if (making_delivery_mode and not no_clearance and (expensive_item => confirmation)) then\n\t\t\t\t\t\t\t   \t\tAgree_Constants::RELEASE_PACKAGE_CMD\n\t\t\t\t\t\t\t   else if return_to_truck_mode and internal_error_detected then\n\t\t\t\t\t\t\t   \t\tAgree_Constants::ABORT_DELIVERY_CMD\n\t\t\t\t\t\t\t   else \n\t\t\t\t\t\t\t   \t\tAgree_Constants::NO_OPERATION_CMD;\n\t\t\t\t\n\t\t\tguarantee \\\"Output: constellation\\\":\n\t\t\t\tconstellation = if init_mode then \n\t\t\t\t\t\t\t\t\tbus_in.constellation\n\t\t\t\t\t\t\t\telse \n\t\t\t\t\t\t\t\t\tbus_in.constellation -> pre(constellation);\n\t\t\t\n\t\t\tguarantee \\\"Output: dest_location\\\":\n\t\t\t\tdest_location = if init_mode then \n\t\t\t\t\t\t\t\t\tbus_in.order.target_position\n\t\t\t\t\t\t\t\telse \n\t\t\t\t\t\t\t\t\tbus_in.order.target_position -> pre(dest_location);\n\t\t\t\t\n\t\t\tguarantee \\\"Output: launch_pos\\\":\n\t\t\t\tlaunch_pos = if init_mode then \n\t\t\t\t\t\t\t\t\tbus_in.launch_pos\n\t\t\t\t\t\t\t\t else \n\t\t\t\t\t\t\t\t\tbus_in.launch_pos -> pre(launch_pos);\n\t\t\t\n\t\t\tguarantee \\\"Output: radio_cmd\\\":\n\t\t\t\tradio_cmd = (making_delivery_mode and expensive_item);\n\t\t\t\n\t\t\tguarantee \\\"Output: probe_init_mode\\\":\n\t\t\t\tprobe_init_mode = init_mode;\n\t\t\t\t\n\t\t\tguarantee \\\"Output: probe_abort_mode\\\":\n\t\t\t\tprobe_abort_mode = abort_mode;\n\t\t\t\n\t\t\tguarantee \\\"Output: nav_cmd | it sends signal to navigation only if it's in flying modes'\\\":\n\t\t\t\tnav_cmd = (flying_to_dest_mode or making_delivery_mode or return_to_truck_mode);\n\t\t\t\n\t\t\t\n\t\t\teq off_mode: bool = true -> \n\t\t\t\t\t\t\t\t(pre(off_mode) and (not (on_off and connected))) or\n\t\t\t\t\t\t\t\t(pre(init_mode) and on_off and connected) or\n\t\t\t\t\t\t\t\t(pre(ready_mode) and on_off and connected) or \n\t\t\t\t\t\t\t\t(pre(abort_mode) and on_off and connected);\n\t\t\t\n\t\t\teq init_mode: bool = false ->\n\t\t\t\t\t\t\t\t (pre(init_mode) and (not (on_off and connected)) \n\t\t\t\t\t\t\t\t \t\t\t\t and (not (init_criteria_succeed and connected)) \n\t\t\t\t\t\t\t\t \t\t\t\t and (not (abort_cmd and connected))) or\n\t\t\t\t\t\t\t\t (pre(off_mode) and on_off and connected) or\n\t\t\t\t\t\t\t\t (pre(ready_mode) and init_criteria_failed and connected) or\n\t\t\t\t\t\t\t\t (pre(return_to_truck_mode) and truck_location_reached and connected);\n\t\t\t\n\t\t\teq ready_mode: bool = false ->\n\t\t\t\t\t\t\t\t  (pre(ready_mode) and (not (init_criteria_failed and connected)) \n\t\t\t\t\t\t\t\t  \t\t           and (not (on_off and connected)) \n\t\t\t\t\t\t\t\t  \t\t           and (not (abort_cmd and connected)) \n\t\t\t\t\t\t\t\t  \t\t           and (not (mission_store_release_sequence and connected))) or\n\t\t\t\t\t\t\t\t  (pre(init_mode) and init_criteria_succeed and connected);\n\t\t\t\n\t\t\teq launch_mode: bool = false ->\n\t\t\t\t\t\t\t\t   (pre(launch_mode) and (not (abort_cmd and connected)) \n\t\t\t\t\t\t\t\t   \t\t\t\t\t and (not (package_is_secure and okay_to_launch and separation))) or\n\t\t\t\t\t\t\t\t   (pre(ready_mode) and mission_store_release_sequence and connected);\n\t\t\t\n\t\t\teq abort_mode: bool = false ->\n\t\t\t\t\t\t\t\t  (pre(abort_mode) and (not (on_off and connected))) or\n\t\t\t\t\t\t\t\t  (pre(init_mode) and abort_cmd and connected) or\n\t\t\t\t\t\t\t\t  (pre(ready_mode) and abort_cmd and connected) or\n\t\t\t\t\t\t\t\t  (pre(launch_mode) and abort_cmd and connected);\n\t\t\t\n\t\t\teq flying_to_dest_mode: bool = false ->\n\t\t\t\t\t\t\t\t\t\t   (pre(flying_to_dest_mode) and (not (destination_location_reached))) or\n\t\t\t\t\t\t\t\t\t\t   (pre(launch_mode) and package_is_secure and okay_to_launch and separation);\n\t\t\t\n\t\t\teq making_delivery_mode: bool = false ->\n\t\t\t\t\t\t\t\t\t\t\t(pre(making_delivery_mode) and (not (successfull_delivery or exhaustive_retries or delivery_failed or internal_error_detected))) or\n\t\t\t\t\t\t\t\t\t\t    (pre(flying_to_dest_mode) and destination_location_reached);\n\t\t\t\n\t\t\teq return_to_truck_mode: bool = false ->\n\t\t\t\t\t\t\t\t\t\t\t(pre(return_to_truck_mode) and (not (truck_location_reached and connected))) or\n\t\t\t\t\t\t\t\t\t\t    (pre(making_delivery_mode) and (successfull_delivery or exhaustive_retries or delivery_failed or internal_error_detected));\n\t\t\t\n\t\t\tguarantee \\\"Modes are mutually exclusive\\\":\n\t\t\t\tAgree_Nodes::ToInt(off_mode) + Agree_Nodes::ToInt(init_mode) + \n\t\t\t\tAgree_Nodes::ToInt(ready_mode) + Agree_Nodes::ToInt(launch_mode) +\n\t\t\t\tAgree_Nodes::ToInt(abort_mode) + Agree_Nodes::ToInt(flying_to_dest_mode) +\n\t\t\t\tAgree_Nodes::ToInt(making_delivery_mode) + Agree_Nodes::ToInt(return_to_truck_mode) = 1;\n    \t\t\n\t\t**}"
              },
              {
                "name": "verdict",
                "kind": "AnnexSubclause",
                "sourceText": "{**\n\t\t\tCyberRel \\\"dp_bus_out_I\\\"         = cur_pos:I or delivery_status:I or camera_result:I or radio_response:I => bus_out:I;\n\t\t\tCyberRel \\\"dp_bus_out_A\\\"         = cur_pos:A or delivery_status:A or camera_result:A or radio_response:A => bus_out:A;\n\t\t\tCyberRel \\\"dp_cmd_out_I\\\"         = cur_pos:I or delivery_status:I or camera_result:I or radio_response:I => nav_cmd:I;\n\t\t\tCyberRel \\\"dp_cmd_out_A\\\"         = cur_pos:A or delivery_status:A or camera_result:A or radio_response:A => nav_cmd:A;\n\t\t\tCyberRel \\\"dp_delivery_status_I\\\" = cur_pos:I or delivery_status:I or camera_result:I or radio_response:I => delivery_cmd:I;\n\t\t\tCyberRel \\\"dp_delivery_status_A\\\" = cur_pos:A or delivery_status:A or camera_result:A or radio_response:A => delivery_cmd:A;\n\t\t\tCyberRel \\\"dp_camera_out_I\\\"      = cur_pos:I or delivery_status:I or camera_result:I or radio_response:I => camera:I;\n\t\t\tCyberRel \\\"dp_camera_out_A\\\"      = cur_pos:A or delivery_status:A or camera_result:A or radio_response:A => camera:A;\n\t\t\tCyberRel \\\"dp_radio_cmd_I\\\"       = cur_pos:I or delivery_status:I or camera_result:I or radio_response:I => radio_cmd:I;\n\t\t\tCyberRel \\\"dp_radio_cmd_A\\\"       = cur_pos:A or delivery_status:A or camera_result:A or radio_response:A => radio_cmd:A;\n\t\t\tEvent {\n\t\t\t\tid = \\\"loa_event\\\"\n\t\t\t\tprobability = 1.0e-8\n\t\t\t\tcomment = \\\"loss of availability of the DeliveryPlanner\\\"\n\t\t\t\tdescription = \\\"LOA\\\"\n\t\t\t}\n\t\t\tEvent {\n\t\t\t\tid = \\\"ued_event\\\"\n\t\t\t\tprobability = 1.0e-9\n\t\t\t\tcomment = \\\"undetected erroneous data of the DeliveryPlanner\\\"\n\t\t\t\tdescription = \\\"UED\\\"\n\t\t\t}\n\t\t\tSafetyRel \\\"dp_bus_out_UED\\\"         = happens(\\\"ued_event\\\") or cur_pos:I or delivery_status:I or camera_result:I or radio_response:I => bus_out:I;\n\t\t\tSafetyRel \\\"dp_bus_out_LOA\\\"         = happens(\\\"loa_event\\\") or cur_pos:A or delivery_status:A or camera_result:A or radio_response:A => bus_out:A;\n\t\t\tSafetyRel \\\"dp_cmd_out_UED\\\"         = happens(\\\"ued_event\\\") or cur_pos:I or delivery_status:I or camera_result:I or radio_response:I => nav_cmd:I;\n\t\t\tSafetyRel \\\"dp_cmd_out_LOA\\\"         = happens(\\\"loa_event\\\") or cur_pos:A or delivery_status:A or camera_result:A or radio_response:A => nav_cmd:A;\n\t\t\tSafetyRel \\\"dp_delivery_status_UED\\\" = happens(\\\"ued_event\\\") or cur_pos:I or delivery_status:I or camera_result:I or radio_response:I => delivery_cmd:I;\n\t\t\tSafetyRel \\\"dp_delivery_status_LOA\\\" = happens(\\\"loa_event\\\") or cur_pos:A or delivery_status:A or camera_result:A or radio_response:A => delivery_cmd:A;\n\t\t\tSafetyRel \\\"dp_camera_out_UED\\\"      = happens(\\\"ued_event\\\") or cur_pos:I or delivery_status:I or camera_result:I or radio_response:I => camera:I;\n\t\t\tSafetyRel \\\"dp_camera_out_LOA\\\"      = happens(\\\"loa_event\\\") or cur_pos:A or delivery_status:A or camera_result:A or radio_response:A => camera:A;\n\t\t\tSafetyRel \\\"dp_radio_cmd_UED\\\"       = happens(\\\"ued_event\\\") or cur_pos:I or delivery_status:I or camera_result:I or radio_response:I => radio_cmd:I;\n\t\t\tSafetyRel \\\"dp_radio_cmd_LOA\\\"       = happens(\\\"loa_event\\\") or cur_pos:A or delivery_status:A or camera_result:A or radio_response:A => radio_cmd:A;\n\t\t**}"
              }
            ]
          },
          {
            "name": "DeliveryDrone::Radio",
            "localName": "Radio",
            "kind": "ComponentType",
            "category": "system",
            "features": [
              {
                "name": "comm_in",
                "kind": "DataPort",
                "classifier": "Data_Types::RadioResponse.impl",
                "direction": "in"
              },
              {
                "name": "radio_in",
                "kind": "DataPort",
                "classifier": "Base_Types::Boolean",
                "direction": "in"
              },
              {
                "name": "comm_out",
                "kind": "DataPort",
                "classifier": "Base_Types::Boolean",
                "direction": "out"
              },
              {
                "name": "radio_out",
                "kind": "DataPort",
                "classifier": "Data_Types::RadioResponse.impl",
                "direction": "out"
              },
              {
                "name": "health_status",
                "kind": "DataPort",
                "classifier": "Base_Types::Boolean",
                "direction": "out"
              }
            ],
            "annexes": [
              {
                "name": "agree",
                "kind": "AnnexSubclause",
                "parsedAnnexSubclause": {
                  "statements": [
                    {
                      "kind": "GuaranteeStatement",
                      "label": "Radio receives data from remote communication channel if there is a request",
                      "expr": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "NamedElmExpr",
                          "name": "radio_in"
                        },
                        "op": "=>",
                        "right": {
                          "kind": "BinaryExpr",
                          "left": {
                            "kind": "BinaryExpr",
                            "left": {
                              "kind": "SelectionExpr",
                              "target": {
                                "kind": "NamedElmExpr",
                                "name": "radio_out"
                              },
                              "field": "data_available"
                            },
                            "op": "=",
                            "right": {
                              "kind": "SelectionExpr",
                              "target": {
                                "kind": "NamedElmExpr",
                                "name": "comm_in"
                              },
                              "field": "data_available"
                            }
                          },
                          "op": "and",
                          "right": {
                            "kind": "BinaryExpr",
                            "left": {
                              "kind": "SelectionExpr",
                              "target": {
                                "kind": "NamedElmExpr",
                                "name": "comm_in"
                              },
                              "field": "target_confirmed"
                            },
                            "op": "=",
                            "right": {
                              "kind": "SelectionExpr",
                              "target": {
                                "kind": "NamedElmExpr",
                                "name": "radio_out"
                              },
                              "field": "target_confirmed"
                            }
                          }
                        }
                      }
                    },
                    {
                      "kind": "GuaranteeStatement",
                      "label": "Without a request, no radio data is available",
                      "expr": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "UnaryExpr",
                          "operand": {
                            "kind": "NamedElmExpr",
                            "name": "radio_in"
                          },
                          "op": "not"
                        },
                        "op": "=>",
                        "right": {
                          "kind": "UnaryExpr",
                          "operand": {
                            "kind": "SelectionExpr",
                            "target": {
                              "kind": "NamedElmExpr",
                              "name": "radio_out"
                            },
                            "field": "data_available"
                          },
                          "op": "not"
                        }
                      }
                    }
                  ]
                },
                "sourceText": "{**\n     \t \tguarantee \\\"Radio receives data from remote communication channel if there is a request\\\":\n     \t \t\tradio_in => (radio_out.data_available = comm_in.data_available and\n     \t \t\t\t         comm_in.target_confirmed = radio_out.target_confirmed);\n     \t \t\n\t\t\tguarantee \\\"Without a request, no radio data is available\\\":\n\t\t\t\tnot radio_in => not radio_out.data_available;\n\t\t**}"
              },
              {
                "name": "verdict",
                "kind": "AnnexSubclause",
                "sourceText": "{**\n\t\t\tCyberRel \\\"comm_out_I\\\" = comm_in:I => comm_out:I;\n\t\t\tCyberRel \\\"comm_out_A\\\" = comm_in:A => comm_out:A;\n\t\t\tCyberRel \\\"plan_out_I\\\" = radio_in:I => radio_out:I;\n\t\t\tCyberRel \\\"plan_out_A\\\" = radio_in:A => radio_out:A;\n\t\t\tEvent {\n\t\t\t\tid = \\\"loa_event\\\"\n\t\t\t\tprobability = 1.0e-8\n\t\t\t\tcomment = \\\"loss of availability of the Radio\\\"\n\t\t\t\tdescription = \\\"LOA\\\"\n\t\t\t}\n\t\t\tEvent {\n\t\t\t\tid = \\\"ued_event\\\"\n\t\t\t\tprobability = 1.0e-9\n\t\t\t\tcomment = \\\"undetected erroneous data of the Radio\\\"\n\t\t\t\tdescription = \\\"UED\\\"\n\t\t\t}\n\t\t\tSafetyRel \\\"comm_out_UED\\\" = happens(\\\"ued_event\\\") or comm_in:I => comm_out:I;\n\t\t\tSafetyRel \\\"comm_out_LOA\\\" = happens(\\\"loa_event\\\") or comm_in:A => comm_out:A;\n\t\t\tSafetyRel \\\"plan_out_UED\\\" = happens(\\\"ued_event\\\") or radio_in:I => radio_out:I;\n\t\t\tSafetyRel \\\"plan_out_LOA\\\" = happens(\\\"loa_event\\\") or radio_in:A => radio_out:A;\n\t\t**}"
              }
            ]
          },
          {
            "name": "DeliveryDrone::DeliveryItemMechanism",
            "localName": "DeliveryItemMechanism",
            "kind": "ComponentType",
            "category": "system",
            "features": [
              {
                "name": "delivery_cmd_in",
                "kind": "DataPort",
                "classifier": "Data_Types::PackageDeliveryCommand",
                "direction": "in"
              },
              {
                "name": "delivery_status_out",
                "kind": "DataPort",
                "classifier": "Data_Types::DeliveryStatus",
                "direction": "out"
              },
              {
                "name": "package_is_secure",
                "kind": "DataPort",
                "classifier": "Base_Types::Boolean",
                "direction": "out"
              }
            ],
            "annexes": [
              {
                "name": "agree",
                "kind": "AnnexSubclause",
                "parsedAnnexSubclause": {
                  "statements": [
                    {
                      "kind": "EqStatement",
                      "left": [
                        {
                          "name": "release_cmd",
                          "type": {
                            "kind": "PrimType",
                            "primType": "bool"
                          }
                        }
                      ],
                      "expr": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "NamedElmExpr",
                          "name": "delivery_cmd_in"
                        },
                        "op": "=",
                        "right": {
                          "kind": "NamedElmExpr",
                          "name": "RELEASE_PACKAGE_CMD"
                        }
                      }
                    },
                    {
                      "kind": "EqStatement",
                      "left": [
                        {
                          "name": "abort_cmd",
                          "type": {
                            "kind": "PrimType",
                            "primType": "bool"
                          }
                        }
                      ],
                      "expr": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "NamedElmExpr",
                          "name": "delivery_cmd_in"
                        },
                        "op": "=",
                        "right": {
                          "kind": "NamedElmExpr",
                          "name": "ABORT_DELIVERY_CMD"
                        }
                      }
                    },
                    {
                      "kind": "EqStatement",
                      "left": [
                        {
                          "name": "no_op_cmd",
                          "type": {
                            "kind": "PrimType",
                            "primType": "bool"
                          }
                        }
                      ],
                      "expr": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "NamedElmExpr",
                          "name": "delivery_cmd_in"
                        },
                        "op": "=",
                        "right": {
                          "kind": "NamedElmExpr",
                          "name": "NO_OPERATION_CMD"
                        }
                      }
                    },
                    {
                      "kind": "GuaranteeStatement",
                      "label": "Initially, delivery status is NOT_STARTED",
                      "expr": {
                        "kind": "CallExpr",
                        "function": {
                          "kind": "DoubleDotRef",
                          "packageName": "Agree_Nodes",
                          "name": "InitiallyX"
                        },
                        "args": [
                          {
                            "kind": "BinaryExpr",
                            "left": {
                              "kind": "NamedElmExpr",
                              "name": "delivery_status_out"
                            },
                            "op": "=",
                            "right": {
                              "kind": "NamedElmExpr",
                              "name": "NOT_STARTED_STATUS"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "kind": "GuaranteeStatement",
                      "label": "if no op or abort command have received then delivery status gets re-started",
                      "expr": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "BoolLitExpr",
                          "value": "true"
                        },
                        "op": "->",
                        "right": {
                          "kind": "BinaryExpr",
                          "left": {
                            "kind": "BinaryExpr",
                            "left": {
                              "kind": "NamedElmExpr",
                              "name": "no_op_cmd"
                            },
                            "op": "or",
                            "right": {
                              "kind": "NamedElmExpr",
                              "name": "abort_cmd"
                            }
                          },
                          "op": "=>",
                          "right": {
                            "kind": "BinaryExpr",
                            "left": {
                              "kind": "NamedElmExpr",
                              "name": "delivery_status_out"
                            },
                            "op": "=",
                            "right": {
                              "kind": "NamedElmExpr",
                              "name": "NOT_STARTED_STATUS"
                            }
                          }
                        }
                      }
                    },
                    {
                      "kind": "GuaranteeStatement",
                      "label": "If delivery command is issued, delivery status is different from NOT_STARTED",
                      "expr": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "BoolLitExpr",
                          "value": "true"
                        },
                        "op": "->",
                        "right": {
                          "kind": "BinaryExpr",
                          "left": {
                            "kind": "NamedElmExpr",
                            "name": "release_cmd"
                          },
                          "op": "=>",
                          "right": {
                            "kind": "BinaryExpr",
                            "left": {
                              "kind": "NamedElmExpr",
                              "name": "delivery_status_out"
                            },
                            "op": "<>",
                            "right": {
                              "kind": "NamedElmExpr",
                              "name": "NOT_STARTED_STATUS"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "sourceText": "{**\n\t\t\teq release_cmd: bool = (delivery_cmd_in = Agree_Constants::RELEASE_PACKAGE_CMD);\n\t\t\teq abort_cmd: bool = (delivery_cmd_in = Agree_Constants::ABORT_DELIVERY_CMD);\n\t\t\teq no_op_cmd: bool = (delivery_cmd_in = Agree_Constants::NO_OPERATION_CMD);\n\t\t\t\n\t\t\tguarantee \\\"Initially, delivery status is NOT_STARTED\\\":\n\t\t\t\tAgree_Nodes::InitiallyX(delivery_status_out = Agree_Constants::NOT_STARTED_STATUS);\n\t\t\t\t\n\t\t\tguarantee \\\"if no op or abort command have received then delivery status gets re-started\\\":\n\t\t\t\ttrue -> (no_op_cmd or abort_cmd => (delivery_status_out = Agree_Constants::NOT_STARTED_STATUS));\n\t\t\t\n\t\t\tguarantee \\\"If delivery command is issued, delivery status is different from NOT_STARTED\\\": \n\t\t\t\ttrue -> (release_cmd => delivery_status_out <> Agree_Constants::NOT_STARTED_STATUS);\n\t\t**}"
              },
              {
                "name": "verdict",
                "kind": "AnnexSubclause",
                "sourceText": "{**\n\t\t\tCyberRel \\\"delivery_status_out_I\\\" = delivery_cmd_in:I => delivery_status_out:I;\n\t\t\tCyberRel \\\"delivery_status_out_A\\\" = delivery_cmd_in:A => delivery_status_out:A;\n\t\t\tEvent {\n\t\t\t\tid = \\\"loa_event\\\"\n\t\t\t\tprobability = 1.0e-8\n\t\t\t\tcomment = \\\"loss of availability of the DeliveryItemMechanism\\\"\n\t\t\t\tdescription = \\\"LOA\\\"\n\t\t\t}\n\t\t\tEvent {\n\t\t\t\tid = \\\"ued_event\\\"\n\t\t\t\tprobability = 1.0e-9\n\t\t\t\tcomment = \\\"undetected erroneous data of the DeliveryItemMechanism\\\"\n\t\t\t\tdescription = \\\"UED\\\"\n\t\t\t}\n\t\t\tSafetyRel \\\"delivery_status_out_UED\\\" = happens(\\\"ued_event\\\") or delivery_cmd_in:I => delivery_status_out:I;\n\t\t\tSafetyRel \\\"delivery_status_out_LOA\\\" = happens(\\\"loa_event\\\") or delivery_cmd_in:A => delivery_status_out:A;\n\t\t**}"
              }
            ]
          },
          {
            "name": "DeliveryDrone::Camera",
            "localName": "Camera",
            "kind": "ComponentType",
            "category": "system",
            "features": [
              {
                "name": "camera_in",
                "kind": "DataPort",
                "classifier": "Base_Types::Boolean",
                "direction": "in"
              },
              {
                "name": "camera_out",
                "kind": "DataPort",
                "classifier": "Base_Types::Integer",
                "direction": "out"
              },
              {
                "name": "health_status",
                "kind": "DataPort",
                "classifier": "Base_Types::Boolean",
                "direction": "out"
              }
            ],
            "annexes": [
              {
                "name": "verdict",
                "kind": "AnnexSubclause",
                "sourceText": "{**\n\t\t\tCyberRel \\\"camera_out_I\\\" = camera_in:I => camera_out:I;\n\t\t\tCyberRel \\\"camera_out_A\\\" = camera_in:A => camera_out:A;\n\t\t**}"
              }
            ]
          },
          {
            "name": "DeliveryDrone::Connector",
            "localName": "Connector",
            "kind": "ComponentType",
            "category": "system",
            "features": [
              {
                "name": "bus_in",
                "kind": "DataPort",
                "classifier": "Data_Types::InputBus.impl",
                "direction": "in"
              },
              {
                "name": "bus_out",
                "kind": "DataPort",
                "classifier": "Data_Types::InputBus.impl",
                "direction": "out"
              }
            ],
            "annexes": [
              {
                "name": "agree",
                "kind": "AnnexSubclause",
                "parsedAnnexSubclause": {
                  "statements": [
                    {
                      "kind": "GuaranteeStatement",
                      "label": "Output: bus_out",
                      "expr": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "NamedElmExpr",
                          "name": "bus_out"
                        },
                        "op": "=",
                        "right": {
                          "kind": "NamedElmExpr",
                          "name": "bus_in"
                        }
                      }
                    }
                  ]
                },
                "sourceText": "{**\n\t\t\t-- high-level specification\n\t\t\tguarantee \\\"Output: bus_out\\\": bus_out = bus_in;\n\t\t**}"
              },
              {
                "name": "verdict",
                "kind": "AnnexSubclause",
                "sourceText": "{**\n            CyberRel \\\"bus_out_I\\\" = bus_in:I => bus_out:I;\n            CyberRel \\\"bus_out_A\\\" = bus_in:A => bus_out:A;\n            Event {\n                   id = \\\"loa_event\\\"\n                   probability = 1.0e-8\n                   comment = \\\"loss of availability of the connector\\\"\n                   description = \\\"LOA\\\"\n                  }\n            Event {\n                   id = \\\"ued_event\\\"\n                   probability = 1.0e-9\n                   comment = \\\"undetected erroneous data of the connector\\\"\n                   description = \\\"UED\\\"\n                  }\n            SafetyRel \\\"bus_out_LOA\\\" = happens(\\\"loa_event\\\") => bus_out:A;\n            SafetyRel \\\"bus_out_UED\\\" = happens(\\\"ued_event\\\") => bus_out:I;\n        **}"
              }
            ]
          },
          {
            "name": "DeliveryDrone::DeliveryDroneSystem",
            "localName": "DeliveryDroneSystem",
            "kind": "ComponentType",
            "category": "system",
            "features": [
              {
                "name": "satellite0_sig_pos",
                "kind": "DataPort",
                "classifier": "Data_Types::Position.impl",
                "direction": "in"
              },
              {
                "name": "satellite1_sig_pos",
                "kind": "DataPort",
                "classifier": "Data_Types::Position.impl",
                "direction": "in"
              },
              {
                "name": "bus1",
                "kind": "DataPort",
                "classifier": "Data_Types::InputBus.impl",
                "direction": "in"
              },
              {
                "name": "comm1",
                "kind": "DataPort",
                "classifier": "Data_Types::RadioResponse.impl",
                "direction": "in"
              },
              {
                "name": "comm2",
                "kind": "DataPort",
                "classifier": "Base_Types::Boolean",
                "direction": "out"
              },
              {
                "name": "bus2",
                "kind": "DataPort",
                "classifier": "Base_Types::Boolean",
                "direction": "out"
              },
              {
                "name": "radio_cmd",
                "kind": "DataPort",
                "classifier": "Base_Types::Boolean",
                "direction": "out"
              },
              {
                "name": "radio_response",
                "kind": "DataPort",
                "classifier": "Data_Types::RadioResponse.impl",
                "direction": "out"
              },
              {
                "name": "delivery_status",
                "kind": "DataPort",
                "classifier": "Data_Types::DeliveryStatus",
                "direction": "out"
              },
              {
                "name": "actuation_out",
                "kind": "DataPort",
                "classifier": "Base_Types::Boolean",
                "direction": "out"
              },
              {
                "name": "probe_init_mode",
                "kind": "DataPort",
                "classifier": "Base_Types::Boolean",
                "direction": "out"
              },
              {
                "name": "probe_abort_mode",
                "kind": "DataPort",
                "classifier": "Base_Types::Boolean",
                "direction": "out"
              },
              {
                "name": "probe_delivery_cmd",
                "kind": "DataPort",
                "classifier": "Data_Types::PackageDeliveryCommand",
                "direction": "out"
              },
              {
                "name": "probe_constellation",
                "kind": "DataPort",
                "classifier": "Data_Types::Constellation",
                "direction": "out"
              },
              {
                "name": "probe_launch_location",
                "kind": "DataPort",
                "classifier": "Data_Types::Position.impl",
                "direction": "out"
              },
              {
                "name": "probe_delivery_location",
                "kind": "DataPort",
                "classifier": "Data_Types::Position.impl",
                "direction": "out"
              },
              {
                "name": "probe_fly_cmd",
                "kind": "DataPort",
                "classifier": "Base_Types::Boolean",
                "direction": "out"
              }
            ],
            "annexes": [
              {
                "name": "agree",
                "kind": "AnnexSubclause",
                "parsedAnnexSubclause": {
                  "statements": [
                    {
                      "kind": "EqStatement",
                      "left": [
                        {
                          "name": "delivery_started",
                          "type": {
                            "kind": "PrimType",
                            "primType": "bool"
                          }
                        }
                      ],
                      "expr": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "NamedElmExpr",
                          "name": "delivery_status"
                        },
                        "op": "<>",
                        "right": {
                          "kind": "NamedElmExpr",
                          "name": "NOT_STARTED_STATUS"
                        }
                      }
                    },
                    {
                      "kind": "EqStatement",
                      "left": [
                        {
                          "name": "confirmation_requested",
                          "type": {
                            "kind": "PrimType",
                            "primType": "bool"
                          }
                        }
                      ],
                      "expr": {
                        "kind": "CallExpr",
                        "function": {
                          "kind": "DoubleDotRef",
                          "packageName": "Agree_Nodes",
                          "name": "HasHappened"
                        },
                        "args": [
                          {
                            "kind": "NamedElmExpr",
                            "name": "radio_cmd"
                          }
                        ]
                      }
                    },
                    {
                      "kind": "EqStatement",
                      "left": [
                        {
                          "name": "acknowledge_received",
                          "type": {
                            "kind": "PrimType",
                            "primType": "bool"
                          }
                        }
                      ],
                      "expr": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "SelectionExpr",
                          "target": {
                            "kind": "NamedElmExpr",
                            "name": "comm1"
                          },
                          "field": "data_available"
                        },
                        "op": "and",
                        "right": {
                          "kind": "SelectionExpr",
                          "target": {
                            "kind": "NamedElmExpr",
                            "name": "comm1"
                          },
                          "field": "target_confirmed"
                        }
                      }
                    },
                    {
                      "kind": "EqStatement",
                      "left": [
                        {
                          "name": "target_confirmed",
                          "type": {
                            "kind": "PrimType",
                            "primType": "bool"
                          }
                        }
                      ],
                      "expr": {
                        "kind": "CallExpr",
                        "function": {
                          "kind": "DoubleDotRef",
                          "packageName": "Agree_Nodes",
                          "name": "HasHappened"
                        },
                        "args": [
                          {
                            "kind": "BinaryExpr",
                            "left": {
                              "kind": "NamedElmExpr",
                              "name": "confirmation_requested"
                            },
                            "op": "and",
                            "right": {
                              "kind": "NamedElmExpr",
                              "name": "acknowledge_received"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "kind": "EqStatement",
                      "left": [
                        {
                          "name": "valuable_package",
                          "type": {
                            "kind": "PrimType",
                            "primType": "bool"
                          }
                        }
                      ],
                      "expr": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "SelectionExpr",
                          "target": {
                            "kind": "NamedElmExpr",
                            "name": "most_recent_order"
                          },
                          "field": "item_value"
                        },
                        "op": ">=",
                        "right": {
                          "kind": "NamedElmExpr",
                          "name": "ITEM_VALUE_THRESHOLD"
                        }
                      }
                    },
                    {
                      "kind": "EqStatement",
                      "left": [
                        {
                          "name": "power_signal",
                          "type": {
                            "kind": "PrimType",
                            "primType": "bool"
                          }
                        }
                      ],
                      "expr": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "SelectionExpr",
                          "target": {
                            "kind": "NamedElmExpr",
                            "name": "bus1"
                          },
                          "field": "on_off"
                        },
                        "op": "and",
                        "right": {
                          "kind": "SelectionExpr",
                          "target": {
                            "kind": "NamedElmExpr",
                            "name": "bus1"
                          },
                          "field": "connected"
                        }
                      }
                    },
                    {
                      "kind": "EqStatement",
                      "left": [
                        {
                          "name": "isOn",
                          "type": {
                            "kind": "PrimType",
                            "primType": "bool"
                          }
                        }
                      ],
                      "expr": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "BoolLitExpr",
                          "value": "false"
                        },
                        "op": "->",
                        "right": {
                          "kind": "IfThenElseExpr",
                          "if": {
                            "kind": "NamedElmExpr",
                            "name": "power_signal"
                          },
                          "then": {
                            "kind": "UnaryExpr",
                            "operand": {
                              "kind": "PreExpr",
                              "expr": {
                                "kind": "NamedElmExpr",
                                "name": "isOn"
                              }
                            },
                            "op": "not"
                          },
                          "else": {
                            "kind": "PreExpr",
                            "expr": {
                              "kind": "NamedElmExpr",
                              "name": "isOn"
                            }
                          }
                        }
                      }
                    },
                    {
                      "kind": "EqStatement",
                      "left": [
                        {
                          "name": "most_recent_constellation",
                          "type": {
                            "kind": "DoubleDotRef",
                            "name": "Data_Types::Constellation"
                          }
                        }
                      ],
                      "expr": {
                        "kind": "IfThenElseExpr",
                        "if": {
                          "kind": "NamedElmExpr",
                          "name": "probe_init_mode"
                        },
                        "then": {
                          "kind": "SelectionExpr",
                          "target": {
                            "kind": "NamedElmExpr",
                            "name": "bus1"
                          },
                          "field": "constellation"
                        },
                        "else": {
                          "kind": "BinaryExpr",
                          "left": {
                            "kind": "SelectionExpr",
                            "target": {
                              "kind": "NamedElmExpr",
                              "name": "bus1"
                            },
                            "field": "constellation"
                          },
                          "op": "->",
                          "right": {
                            "kind": "PreExpr",
                            "expr": {
                              "kind": "NamedElmExpr",
                              "name": "most_recent_constellation"
                            }
                          }
                        }
                      }
                    },
                    {
                      "kind": "EqStatement",
                      "left": [
                        {
                          "name": "most_recent_launch_location",
                          "type": {
                            "kind": "DoubleDotRef",
                            "name": "Data_Types::Position.impl"
                          }
                        }
                      ],
                      "expr": {
                        "kind": "IfThenElseExpr",
                        "if": {
                          "kind": "NamedElmExpr",
                          "name": "probe_init_mode"
                        },
                        "then": {
                          "kind": "SelectionExpr",
                          "target": {
                            "kind": "NamedElmExpr",
                            "name": "bus1"
                          },
                          "field": "launch_pos"
                        },
                        "else": {
                          "kind": "BinaryExpr",
                          "left": {
                            "kind": "SelectionExpr",
                            "target": {
                              "kind": "NamedElmExpr",
                              "name": "bus1"
                            },
                            "field": "launch_pos"
                          },
                          "op": "->",
                          "right": {
                            "kind": "PreExpr",
                            "expr": {
                              "kind": "NamedElmExpr",
                              "name": "most_recent_launch_location"
                            }
                          }
                        }
                      }
                    },
                    {
                      "kind": "EqStatement",
                      "left": [
                        {
                          "name": "most_recent_order",
                          "type": {
                            "kind": "DoubleDotRef",
                            "name": "Data_Types::DeliveryOrder.impl"
                          }
                        }
                      ],
                      "expr": {
                        "kind": "IfThenElseExpr",
                        "if": {
                          "kind": "NamedElmExpr",
                          "name": "probe_init_mode"
                        },
                        "then": {
                          "kind": "SelectionExpr",
                          "target": {
                            "kind": "NamedElmExpr",
                            "name": "bus1"
                          },
                          "field": "order"
                        },
                        "else": {
                          "kind": "BinaryExpr",
                          "left": {
                            "kind": "SelectionExpr",
                            "target": {
                              "kind": "NamedElmExpr",
                              "name": "bus1"
                            },
                            "field": "order"
                          },
                          "op": "->",
                          "right": {
                            "kind": "PreExpr",
                            "expr": {
                              "kind": "NamedElmExpr",
                              "name": "most_recent_order"
                            }
                          }
                        }
                      }
                    },
                    {
                      "kind": "EqStatement",
                      "left": [
                        {
                          "name": "most_recent_delivery_location",
                          "type": {
                            "kind": "DoubleDotRef",
                            "name": "Data_Types::Position.impl"
                          }
                        }
                      ],
                      "expr": {
                        "kind": "SelectionExpr",
                        "target": {
                          "kind": "NamedElmExpr",
                          "name": "most_recent_order"
                        },
                        "field": "target_position"
                      }
                    },
                    {
                      "kind": "EqStatement",
                      "left": [
                        {
                          "name": "release_cmd",
                          "type": {
                            "kind": "PrimType",
                            "primType": "bool"
                          }
                        }
                      ],
                      "expr": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "NamedElmExpr",
                          "name": "probe_delivery_cmd"
                        },
                        "op": "=",
                        "right": {
                          "kind": "NamedElmExpr",
                          "name": "RELEASE_PACKAGE_CMD"
                        }
                      }
                    },
                    {
                      "kind": "GuaranteeStatement",
                      "label": "P1: Constellation for GPS is initialized properly",
                      "expr": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "NamedElmExpr",
                          "name": "isOn"
                        },
                        "op": "=>",
                        "right": {
                          "kind": "BinaryExpr",
                          "left": {
                            "kind": "NamedElmExpr",
                            "name": "most_recent_constellation"
                          },
                          "op": "=",
                          "right": {
                            "kind": "NamedElmExpr",
                            "name": "probe_constellation"
                          }
                        }
                      }
                    },
                    {
                      "kind": "GuaranteeStatement",
                      "label": "P2: Launch location for IMU is initialized properly",
                      "expr": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "NamedElmExpr",
                          "name": "isOn"
                        },
                        "op": "=>",
                        "right": {
                          "kind": "BinaryExpr",
                          "left": {
                            "kind": "NamedElmExpr",
                            "name": "most_recent_launch_location"
                          },
                          "op": "=",
                          "right": {
                            "kind": "NamedElmExpr",
                            "name": "probe_launch_location"
                          }
                        }
                      }
                    },
                    {
                      "kind": "GuaranteeStatement",
                      "label": "P3: Delivery location for navigation is initialized properly",
                      "expr": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "NamedElmExpr",
                          "name": "isOn"
                        },
                        "op": "=>",
                        "right": {
                          "kind": "BinaryExpr",
                          "left": {
                            "kind": "NamedElmExpr",
                            "name": "most_recent_delivery_location"
                          },
                          "op": "=",
                          "right": {
                            "kind": "NamedElmExpr",
                            "name": "probe_delivery_location"
                          }
                        }
                      }
                    },
                    {
                      "kind": "GuaranteeStatement",
                      "label": "P4: A command to release a valuable package is issued only if drone has received confirmation from base",
                      "expr": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "BinaryExpr",
                          "left": {
                            "kind": "NamedElmExpr",
                            "name": "release_cmd"
                          },
                          "op": "and",
                          "right": {
                            "kind": "NamedElmExpr",
                            "name": "valuable_package"
                          }
                        },
                        "op": "=>",
                        "right": {
                          "kind": "NamedElmExpr",
                          "name": "target_confirmed"
                        }
                      }
                    },
                    {
                      "kind": "GuaranteeStatement",
                      "label": "P5: The drone will always request a confirmation to base before starting delivery of a valuable package",
                      "expr": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "BinaryExpr",
                          "left": {
                            "kind": "NamedElmExpr",
                            "name": "delivery_started"
                          },
                          "op": "and",
                          "right": {
                            "kind": "NamedElmExpr",
                            "name": "valuable_package"
                          }
                        },
                        "op": "=>",
                        "right": {
                          "kind": "NamedElmExpr",
                          "name": "confirmation_requested"
                        }
                      }
                    },
                    {
                      "kind": "GuaranteeStatement",
                      "label": "P6: The drone is flying only if since last initialization the mission was not aborted",
                      "expr": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "NamedElmExpr",
                          "name": "probe_fly_cmd"
                        },
                        "op": "=>",
                        "right": {
                          "kind": "CallExpr",
                          "function": {
                            "kind": "DoubleDotRef",
                            "packageName": "Agree_Nodes",
                            "name": "Since"
                          },
                          "args": [
                            {
                              "kind": "NamedElmExpr",
                              "name": "probe_init_mode"
                            },
                            {
                              "kind": "UnaryExpr",
                              "operand": {
                                "kind": "NamedElmExpr",
                                "name": "probe_abort_mode"
                              },
                              "op": "not"
                            }
                          ]
                        }
                      }
                    }
                  ]
                },
                "sourceText": "{**\t\t\t\n\n\t\t\teq delivery_started: bool = delivery_status <> Agree_Constants::NOT_STARTED_STATUS;\n      \t\t\n      \t\teq confirmation_requested: bool = Agree_Nodes::HasHappened(radio_cmd); \n\t\t\t\n\t\t\teq acknowledge_received: bool = comm1.data_available and comm1.target_confirmed;\n\t\t\t\n\t\t\teq target_confirmed: bool = Agree_Nodes::HasHappened(\n      \t\t\tconfirmation_requested and\n      \t\t\tacknowledge_received\n      \t\t);\n      \t\t\n      \t\teq valuable_package: bool = most_recent_order.item_value >= Agree_Constants::ITEM_VALUE_THRESHOLD;\n      \t\t\n      \t\teq power_signal: bool = bus1.on_off and bus1.connected;\n      \t\t\n      \t\teq isOn: bool = false -> if power_signal then not pre(isOn)\n      \t\t\t\t\t\t\t\t else pre(isOn);\n      \t\t\t\n      \t\t\n      \t\teq most_recent_constellation: Data_Types::Constellation = if probe_init_mode then \n      \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \tbus1.constellation\n      \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  else bus1.constellation -> pre(most_recent_constellation);\n      \t\t\n      \t\teq most_recent_launch_location: Data_Types::Position.impl = if probe_init_mode then \n      \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \t\tbus1.launch_pos\n      \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \telse bus1.launch_pos -> pre(most_recent_launch_location);\n      \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \t\t\t\t\t\t\t\t\t\t\t\t\t\t  \t\n      \t\teq most_recent_order: Data_Types::DeliveryOrder.impl = if probe_init_mode then \n      \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t   \t\tbus1.order\n      \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t   else bus1.order -> pre(most_recent_order);\n      \t\t\n      \t\teq most_recent_delivery_location: Data_Types::Position.impl = most_recent_order.target_position;\n      \t\t\n      \t\teq release_cmd: bool = (probe_delivery_cmd = Agree_Constants::RELEASE_PACKAGE_CMD);\n      \t\t\n      \t\tguarantee \\\"P1: Constellation for GPS is initialized properly\\\":\n      \t\t\tisOn => (most_recent_constellation = probe_constellation);\n      \t\t\n      \t\tguarantee \\\"P2: Launch location for IMU is initialized properly\\\":\n      \t\t\tisOn => most_recent_launch_location = probe_launch_location;\n      \t\t\n      \t\tguarantee \\\"P3: Delivery location for navigation is initialized properly\\\":\n      \t\t\tisOn => most_recent_delivery_location = probe_delivery_location;\n\n      \t\tguarantee \\\"P4: A command to release a valuable package is issued only if drone has received confirmation from base\\\":\n    \t\t\trelease_cmd and valuable_package => target_confirmed;\n\n  \t\t\tguarantee \\\"P5: The drone will always request a confirmation to base before starting delivery of a valuable package\\\":\n    \t\t\tdelivery_started and valuable_package => confirmation_requested;\n\n    \t\tguarantee \\\"P6: The drone is flying only if since last initialization the mission was not aborted\\\":\n      \t\t\tprobe_fly_cmd => Agree_Nodes::Since(probe_init_mode, not (probe_abort_mode));\n\t\t**}"
              },
              {
                "name": "verdict",
                "kind": "AnnexSubclause",
                "sourceText": "{**\n\t\t\tCyberReq {\n\t\t\tid = \\\"CyberReq01\\\"\n\t\t\tdescription = \\\"The drone shall be resilient to loss of ability to deliver a package to \n\t\t\t              the appropriate consumer location\\\"\n\t\t\tcondition = actuation_out:I or actuation_out:A or delivery_status:I or delivery_status:A\n\t\t\tcia = I\n\t\t\tseverity = Hazardous\n\t\t    \t};\n\t\t\tCyberReq {\n\t\t\tid = \\\"CyberReq02\\\"\n\t\t\tdescription = \\\"The drone shall be resilient to maliciously commanded improper delivery of a package\\\"\n\t\t\tcondition = delivery_status:I \n\t\t\tcia = I\n\t\t\tseverity = Major\n\t\t\t};\n\t    \tMissionReq {\n\t\t    \tid =\\\"MReq01\\\"\n\t\t    \tdescription = \\\"Deliver a package to the intended location.\\\"\n\t\t    \treqs = \\\"CyberReq01\\\",\\\"CyberReq02\\\"\n\t    \t};\n\t\t**}"
              }
            ]
          },
          {
            "packageName": "DeliveryDrone",
            "name": "DeliveryDrone::DeliveryDroneSystem.Impl",
            "localName": "DeliveryDroneSystem.Impl",
            "kind": "ComponentImplementation",
            "category": "system",
            "subcomponents": [
              {
                "name": "gnc",
                "kind": "Subcomponent",
                "category": "system",
                "classifier": "GNC::GNC.Impl",
                "properties": [
                  {
                    "name": "CASE_Consolidated_Properties::insideTrustedBoundary",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "BooleanLiteral",
                      "value": true
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::componentType",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "EnumerationLiteral",
                      "value": "Software"
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::pedigree",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "EnumerationLiteral",
                      "value": "InternallyDeveloped"
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::hasSensitiveInfo",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "BooleanLiteral",
                      "value": true
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::canReceiveSWUpdate",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "BooleanLiteral",
                      "value": false
                    }
                  }
                ]
              },
              {
                "name": "radio",
                "kind": "Subcomponent",
                "category": "system",
                "classifier": "DeliveryDrone::Radio",
                "properties": [
                  {
                    "name": "CASE_Consolidated_Properties::componentType",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "EnumerationLiteral",
                      "value": "Hybrid"
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::insideTrustedBoundary",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "BooleanLiteral",
                      "value": true
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::pedigree",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "EnumerationLiteral",
                      "value": "InternallyDeveloped"
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::dosProtection",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "IntegerLiteral",
                      "value": 7,
                      "unit": null
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::failSafe",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "IntegerLiteral",
                      "value": 7,
                      "unit": null
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::inputValidation",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "IntegerLiteral",
                      "value": 7,
                      "unit": null
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::logging",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "IntegerLiteral",
                      "value": 7,
                      "unit": null
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::memoryProtection",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "IntegerLiteral",
                      "value": 5,
                      "unit": null
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::physicalAccessControl",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "IntegerLiteral",
                      "value": 7,
                      "unit": null
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::remoteAttestation",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "IntegerLiteral",
                      "value": 7,
                      "unit": null
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::resourceAvailability",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "IntegerLiteral",
                      "value": 7,
                      "unit": null
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::secureBoot",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "IntegerLiteral",
                      "value": 7,
                      "unit": null
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::staticCodeAnalysis",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "IntegerLiteral",
                      "value": 7,
                      "unit": null
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::strongCryptoAlgorithms",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "IntegerLiteral",
                      "value": 7,
                      "unit": null
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::supplyChainSecurity",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "IntegerLiteral",
                      "value": 0,
                      "unit": null
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::systemAccessControl",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "IntegerLiteral",
                      "value": 7,
                      "unit": null
                    }
                  }
                ]
              },
              {
                "name": "actuation",
                "kind": "Subcomponent",
                "category": "system",
                "classifier": "DeliveryDrone::Actuation",
                "properties": [
                  {
                    "name": "CASE_Consolidated_Properties::componentType",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "EnumerationLiteral",
                      "value": "Hardware"
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::hasSensitiveInfo",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "BooleanLiteral",
                      "value": true
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::insideTrustedBoundary",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "BooleanLiteral",
                      "value": true
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::pedigree",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "EnumerationLiteral",
                      "value": "InternallyDeveloped"
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::physicalAccessControl",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "IntegerLiteral",
                      "value": 7,
                      "unit": null
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::supplyChainSecurity",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "IntegerLiteral",
                      "value": 7,
                      "unit": null
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::systemAccessControl",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "IntegerLiteral",
                      "value": 7,
                      "unit": null
                    }
                  }
                ]
              },
              {
                "name": "deliveryPlanner",
                "kind": "Subcomponent",
                "category": "system",
                "classifier": "DeliveryDrone::DeliveryPlanner",
                "properties": [
                  {
                    "name": "CASE_Consolidated_Properties::insideTrustedBoundary",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "BooleanLiteral",
                      "value": true
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::componentType",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "EnumerationLiteral",
                      "value": "Hybrid"
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::pedigree",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "EnumerationLiteral",
                      "value": "InternallyDeveloped"
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::antiJamming",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "IntegerLiteral",
                      "value": 7,
                      "unit": null
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::dosProtection",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "IntegerLiteral",
                      "value": 7,
                      "unit": null
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::failSafe",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "IntegerLiteral",
                      "value": 7,
                      "unit": null
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::heterogeneity",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "IntegerLiteral",
                      "value": 7,
                      "unit": null
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::inputValidation",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "IntegerLiteral",
                      "value": 7,
                      "unit": null
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::logging",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "IntegerLiteral",
                      "value": 7,
                      "unit": null
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::memoryProtection",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "IntegerLiteral",
                      "value": 7,
                      "unit": null
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::physicalAccessControl",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "IntegerLiteral",
                      "value": 7,
                      "unit": null
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::remoteAttestation",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "IntegerLiteral",
                      "value": 7,
                      "unit": null
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::resourceAvailability",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "IntegerLiteral",
                      "value": 7,
                      "unit": null
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::secureBoot",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "IntegerLiteral",
                      "value": 7,
                      "unit": null
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::staticCodeAnalysis",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "IntegerLiteral",
                      "value": 7,
                      "unit": null
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::strongCryptoAlgorithms",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "IntegerLiteral",
                      "value": 7,
                      "unit": null
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::supplyChainSecurity",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "IntegerLiteral",
                      "value": 7,
                      "unit": null
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::systemAccessControl",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "IntegerLiteral",
                      "value": 7,
                      "unit": null
                    }
                  }
                ]
              },
              {
                "name": "deliveryItemMechanism",
                "kind": "Subcomponent",
                "category": "system",
                "classifier": "DeliveryDrone::DeliveryItemMechanism",
                "properties": [
                  {
                    "name": "CASE_Consolidated_Properties::componentType",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "EnumerationLiteral",
                      "value": "Hardware"
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::hasSensitiveInfo",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "BooleanLiteral",
                      "value": true
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::insideTrustedBoundary",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "BooleanLiteral",
                      "value": true
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::pedigree",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "EnumerationLiteral",
                      "value": "InternallyDeveloped"
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::physicalAccessControl",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "IntegerLiteral",
                      "value": 7,
                      "unit": null
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::supplyChainSecurity",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "IntegerLiteral",
                      "value": 7,
                      "unit": null
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::systemAccessControl",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "IntegerLiteral",
                      "value": 7,
                      "unit": null
                    }
                  }
                ]
              },
              {
                "name": "camera",
                "kind": "Subcomponent",
                "category": "system",
                "classifier": "DeliveryDrone::Camera",
                "properties": [
                  {
                    "name": "CASE_Consolidated_Properties::componentType",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "EnumerationLiteral",
                      "value": "Hardware"
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::hasSensitiveInfo",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "BooleanLiteral",
                      "value": true
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::insideTrustedBoundary",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "BooleanLiteral",
                      "value": true
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::pedigree",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "EnumerationLiteral",
                      "value": "InternallyDeveloped"
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::physicalAccessControl",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "IntegerLiteral",
                      "value": 7,
                      "unit": null
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::supplyChainSecurity",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "IntegerLiteral",
                      "value": 7,
                      "unit": null
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::systemAccessControl",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "IntegerLiteral",
                      "value": 7,
                      "unit": null
                    }
                  }
                ]
              },
              {
                "name": "connector",
                "kind": "Subcomponent",
                "category": "system",
                "classifier": "DeliveryDrone::Connector",
                "properties": [
                  {
                    "name": "CASE_Consolidated_Properties::componentType",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "EnumerationLiteral",
                      "value": "Hybrid"
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::insideTrustedBoundary",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "BooleanLiteral",
                      "value": true
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::pedigree",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "EnumerationLiteral",
                      "value": "COTS"
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::adversariallyTestedForTrojanOrLogicBomb",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "IntegerLiteral",
                      "value": 0,
                      "unit": null
                    }
                  }
                ]
              }
            ],
            "connections": [
              {
                "name": "c1b",
                "kind": "PortConnection",
                "source": "deliveryPlanner.launch_pos",
                "destination": "gnc.launch_pos",
                "bidirectional": false,
                "properties": [
                  {
                    "name": "CASE_Consolidated_Properties::connectionType",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "EnumerationLiteral",
                      "value": "Trusted"
                    }
                  }
                ]
              },
              {
                "name": "c4",
                "kind": "PortConnection",
                "source": "deliveryPlanner.dest_location",
                "destination": "gnc.navigation_dest_pos",
                "bidirectional": false,
                "properties": [
                  {
                    "name": "CASE_Consolidated_Properties::connectionType",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "EnumerationLiteral",
                      "value": "Trusted"
                    }
                  }
                ]
              },
              {
                "name": "c5",
                "kind": "PortConnection",
                "source": "gnc.navigation_cur_pos",
                "destination": "deliveryPlanner.cur_pos",
                "bidirectional": false,
                "properties": [
                  {
                    "name": "CASE_Consolidated_Properties::connectionType",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "EnumerationLiteral",
                      "value": "Trusted"
                    }
                  }
                ]
              },
              {
                "name": "c7",
                "kind": "PortConnection",
                "source": "deliveryItemMechanism.delivery_status_out",
                "destination": "deliveryPlanner.delivery_status",
                "bidirectional": false,
                "properties": [
                  {
                    "name": "CASE_Consolidated_Properties::connectionType",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "EnumerationLiteral",
                      "value": "Trusted"
                    }
                  }
                ]
              },
              {
                "name": "c9",
                "kind": "PortConnection",
                "source": "camera.camera_out",
                "destination": "deliveryPlanner.camera_result",
                "bidirectional": false,
                "properties": [
                  {
                    "name": "CASE_Consolidated_Properties::connectionType",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "EnumerationLiteral",
                      "value": "Trusted"
                    }
                  }
                ]
              },
              {
                "name": "c10",
                "kind": "PortConnection",
                "source": "deliveryPlanner.radio_cmd",
                "destination": "radio.radio_in",
                "bidirectional": false,
                "properties": [
                  {
                    "name": "CASE_Consolidated_Properties::connectionType",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "EnumerationLiteral",
                      "value": "Trusted"
                    }
                  }
                ]
              },
              {
                "name": "c11",
                "kind": "PortConnection",
                "source": "radio.radio_out",
                "destination": "deliveryPlanner.radio_response",
                "bidirectional": false,
                "properties": [
                  {
                    "name": "CASE_Consolidated_Properties::connectionType",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "EnumerationLiteral",
                      "value": "Trusted"
                    }
                  }
                ]
              },
              {
                "name": "c14a",
                "kind": "PortConnection",
                "source": "bus1",
                "destination": "connector.bus_in",
                "bidirectional": false,
                "properties": [
                  {
                    "name": "CASE_Consolidated_Properties::connectionType",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "EnumerationLiteral",
                      "value": "Untrusted"
                    }
                  }
                ]
              },
              {
                "name": "c14b",
                "kind": "PortConnection",
                "source": "connector.bus_out",
                "destination": "deliveryPlanner.bus_in",
                "bidirectional": false,
                "properties": [
                  {
                    "name": "CASE_Consolidated_Properties::connectionType",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "EnumerationLiteral",
                      "value": "Trusted"
                    }
                  }
                ]
              },
              {
                "name": "c15",
                "kind": "PortConnection",
                "source": "deliveryPlanner.bus_out",
                "destination": "bus2",
                "bidirectional": false,
                "properties": [
                  {
                    "name": "CASE_Consolidated_Properties::connectionType",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "EnumerationLiteral",
                      "value": "Trusted"
                    }
                  }
                ]
              },
              {
                "name": "c16",
                "kind": "PortConnection",
                "source": "comm1",
                "destination": "radio.comm_in",
                "bidirectional": false,
                "properties": [
                  {
                    "name": "CASE_Consolidated_Properties::connectionType",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "EnumerationLiteral",
                      "value": "Trusted"
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::deviceAuthentication",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "IntegerLiteral",
                      "value": 9,
                      "unit": null
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::encryptedTransmission",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "IntegerLiteral",
                      "value": 9,
                      "unit": null
                    }
                  }
                ]
              },
              {
                "name": "c17",
                "kind": "PortConnection",
                "source": "radio.comm_out",
                "destination": "comm2",
                "bidirectional": false,
                "properties": [
                  {
                    "name": "CASE_Consolidated_Properties::connectionType",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "EnumerationLiteral",
                      "value": "Trusted"
                    }
                  }
                ]
              },
              {
                "name": "c19",
                "kind": "PortConnection",
                "source": "gnc.fc_motor_cmd",
                "destination": "actuation.motor_cmd",
                "bidirectional": false,
                "properties": [
                  {
                    "name": "CASE_Consolidated_Properties::connectionType",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "EnumerationLiteral",
                      "value": "Trusted"
                    }
                  }
                ]
              },
              {
                "name": "c20",
                "kind": "PortConnection",
                "source": "actuation.response",
                "destination": "gnc.fc_actuation_response",
                "bidirectional": false,
                "properties": [
                  {
                    "name": "CASE_Consolidated_Properties::connectionType",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "EnumerationLiteral",
                      "value": "Trusted"
                    }
                  }
                ]
              },
              {
                "name": "c22",
                "kind": "PortConnection",
                "source": "satellite0_sig_pos",
                "destination": "gnc.satellite0_pos",
                "bidirectional": false,
                "properties": [
                  {
                    "name": "CASE_Consolidated_Properties::connectionType",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "EnumerationLiteral",
                      "value": "Trusted"
                    }
                  }
                ]
              },
              {
                "name": "c23",
                "kind": "PortConnection",
                "source": "satellite1_sig_pos",
                "destination": "gnc.satellite1_pos",
                "bidirectional": false,
                "properties": [
                  {
                    "name": "CASE_Consolidated_Properties::connectionType",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "EnumerationLiteral",
                      "value": "Trusted"
                    }
                  }
                ]
              },
              {
                "name": "c25",
                "kind": "PortConnection",
                "source": "deliveryPlanner.delivery_cmd",
                "destination": "deliveryItemMechanism.delivery_cmd_in",
                "bidirectional": false,
                "properties": [
                  {
                    "name": "CASE_Consolidated_Properties::connectionType",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "EnumerationLiteral",
                      "value": "Trusted"
                    }
                  }
                ]
              },
              {
                "name": "c26",
                "kind": "PortConnection",
                "source": "deliveryPlanner.nav_cmd",
                "destination": "gnc.navigation_cmd",
                "bidirectional": false,
                "properties": [
                  {
                    "name": "CASE_Consolidated_Properties::connectionType",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "EnumerationLiteral",
                      "value": "Trusted"
                    }
                  }
                ]
              },
              {
                "name": "c27",
                "kind": "PortConnection",
                "source": "deliveryPlanner.camera",
                "destination": "camera.camera_in",
                "bidirectional": false,
                "properties": [
                  {
                    "name": "CASE_Consolidated_Properties::connectionType",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "EnumerationLiteral",
                      "value": "Trusted"
                    }
                  }
                ]
              },
              {
                "name": "c28",
                "kind": "PortConnection",
                "source": "deliveryPlanner.radio_cmd",
                "destination": "radio_cmd",
                "bidirectional": false,
                "properties": [
                  {
                    "name": "CASE_Consolidated_Properties::connectionType",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "EnumerationLiteral",
                      "value": "Trusted"
                    }
                  }
                ]
              },
              {
                "name": "c29",
                "kind": "PortConnection",
                "source": "radio.radio_out",
                "destination": "radio_response",
                "bidirectional": false,
                "properties": [
                  {
                    "name": "CASE_Consolidated_Properties::connectionType",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "EnumerationLiteral",
                      "value": "Trusted"
                    }
                  }
                ]
              },
              {
                "name": "c30",
                "kind": "PortConnection",
                "source": "deliveryItemMechanism.delivery_status_out",
                "destination": "delivery_status",
                "bidirectional": false,
                "properties": [
                  {
                    "name": "CASE_Consolidated_Properties::connectionType",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "EnumerationLiteral",
                      "value": "Trusted"
                    }
                  }
                ]
              },
              {
                "name": "c31",
                "kind": "PortConnection",
                "source": "deliveryPlanner.delivery_cmd",
                "destination": "probe_delivery_cmd",
                "bidirectional": false,
                "properties": [
                  {
                    "name": "CASE_Consolidated_Properties::connectionType",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "EnumerationLiteral",
                      "value": "Trusted"
                    }
                  }
                ]
              },
              {
                "name": "c32",
                "kind": "PortConnection",
                "source": "actuation.response",
                "destination": "actuation_out",
                "bidirectional": false,
                "properties": [
                  {
                    "name": "CASE_Consolidated_Properties::connectionType",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "EnumerationLiteral",
                      "value": "Trusted"
                    }
                  }
                ]
              },
              {
                "name": "c33",
                "kind": "PortConnection",
                "source": "deliveryPlanner.constellation",
                "destination": "gnc.constellation",
                "bidirectional": false,
                "properties": [
                  {
                    "name": "CASE_Consolidated_Properties::connectionType",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "EnumerationLiteral",
                      "value": "Trusted"
                    }
                  }
                ]
              },
              {
                "name": "c34",
                "kind": "PortConnection",
                "source": "gnc.gps_health_status",
                "destination": "deliveryPlanner.gps_health_status",
                "bidirectional": false,
                "properties": [
                  {
                    "name": "CASE_Consolidated_Properties::connectionType",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "EnumerationLiteral",
                      "value": "Trusted"
                    }
                  }
                ]
              },
              {
                "name": "c35",
                "kind": "PortConnection",
                "source": "gnc.imu_health_status",
                "destination": "deliveryPlanner.imu_health_status",
                "bidirectional": false,
                "properties": [
                  {
                    "name": "CASE_Consolidated_Properties::connectionType",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "EnumerationLiteral",
                      "value": "Trusted"
                    }
                  }
                ]
              },
              {
                "name": "c36",
                "kind": "PortConnection",
                "source": "radio.health_status",
                "destination": "deliveryPlanner.rdo_health_status",
                "bidirectional": false,
                "properties": [
                  {
                    "name": "CASE_Consolidated_Properties::connectionType",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "EnumerationLiteral",
                      "value": "Trusted"
                    }
                  }
                ]
              },
              {
                "name": "c37",
                "kind": "PortConnection",
                "source": "camera.health_status",
                "destination": "deliveryPlanner.cam_health_status",
                "bidirectional": false,
                "properties": [
                  {
                    "name": "CASE_Consolidated_Properties::connectionType",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "EnumerationLiteral",
                      "value": "Trusted"
                    }
                  }
                ]
              },
              {
                "name": "c38",
                "kind": "PortConnection",
                "source": "gnc.probe_constellation",
                "destination": "probe_constellation",
                "bidirectional": false,
                "properties": [
                  {
                    "name": "CASE_Consolidated_Properties::connectionType",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "EnumerationLiteral",
                      "value": "Trusted"
                    }
                  }
                ]
              },
              {
                "name": "c39",
                "kind": "PortConnection",
                "source": "deliveryPlanner.probe_init_mode",
                "destination": "probe_init_mode",
                "bidirectional": false,
                "properties": [
                  {
                    "name": "CASE_Consolidated_Properties::connectionType",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "EnumerationLiteral",
                      "value": "Trusted"
                    }
                  }
                ]
              },
              {
                "name": "c40",
                "kind": "PortConnection",
                "source": "gnc.probe_launch_pos",
                "destination": "probe_launch_location",
                "bidirectional": false,
                "properties": [
                  {
                    "name": "CASE_Consolidated_Properties::connectionType",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "EnumerationLiteral",
                      "value": "Trusted"
                    }
                  }
                ]
              },
              {
                "name": "c41",
                "kind": "PortConnection",
                "source": "gnc.navigation_probe_dest_pos",
                "destination": "probe_delivery_location",
                "bidirectional": false,
                "properties": [
                  {
                    "name": "CASE_Consolidated_Properties::connectionType",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "EnumerationLiteral",
                      "value": "Trusted"
                    }
                  }
                ]
              },
              {
                "name": "c42",
                "kind": "PortConnection",
                "source": "deliveryItemMechanism.package_is_secure",
                "destination": "deliveryPlanner.package_is_secure",
                "bidirectional": false,
                "properties": [
                  {
                    "name": "CASE_Consolidated_Properties::connectionType",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "EnumerationLiteral",
                      "value": "Trusted"
                    }
                  }
                ]
              },
              {
                "name": "c43",
                "kind": "PortConnection",
                "source": "deliveryPlanner.nav_cmd",
                "destination": "probe_fly_cmd",
                "bidirectional": false,
                "properties": [
                  {
                    "name": "CASE_Consolidated_Properties::connectionType",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "EnumerationLiteral",
                      "value": "Trusted"
                    }
                  }
                ]
              },
              {
                "name": "c44",
                "kind": "PortConnection",
                "source": "deliveryPlanner.probe_abort_mode",
                "destination": "probe_abort_mode",
                "bidirectional": false,
                "properties": [
                  {
                    "name": "CASE_Consolidated_Properties::connectionType",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "EnumerationLiteral",
                      "value": "Trusted"
                    }
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    {
      "name": "Base_Types",
      "kind": "AadlPackage",
      "public": {
        "with": [
          "Data_Model"
        ],
        "components": [
          {
            "name": "Base_Types::Boolean",
            "localName": "Boolean",
            "kind": "ComponentType",
            "category": "data",
            "properties": [
              {
                "name": "Data_Model::Data_Representation",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "EnumerationLiteral",
                  "value": "Boolean"
                }
              }
            ]
          },
          {
            "name": "Base_Types::Integer",
            "localName": "Integer",
            "kind": "ComponentType",
            "category": "data",
            "properties": [
              {
                "name": "Data_Model::Data_Representation",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "EnumerationLiteral",
                  "value": "Integer"
                }
              }
            ]
          },
          {
            "name": "Base_Types::Integer_8",
            "localName": "Integer_8",
            "kind": "ComponentType",
            "category": "data",
            "extends": "Base_Types::Integer",
            "properties": [
              {
                "name": "Data_Model::Number_Representation",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "EnumerationLiteral",
                  "value": "Signed"
                }
              },
              {
                "name": "Memory_Properties::Data_Size",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "IntegerLiteral",
                  "value": 1,
                  "unit": "Bytes"
                }
              }
            ]
          },
          {
            "name": "Base_Types::Integer_16",
            "localName": "Integer_16",
            "kind": "ComponentType",
            "category": "data",
            "extends": "Base_Types::Integer",
            "properties": [
              {
                "name": "Data_Model::Number_Representation",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "EnumerationLiteral",
                  "value": "Signed"
                }
              },
              {
                "name": "Memory_Properties::Data_Size",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "IntegerLiteral",
                  "value": 2,
                  "unit": "Bytes"
                }
              }
            ]
          },
          {
            "name": "Base_Types::Integer_32",
            "localName": "Integer_32",
            "kind": "ComponentType",
            "category": "data",
            "extends": "Base_Types::Integer",
            "properties": [
              {
                "name": "Data_Model::Number_Representation",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "EnumerationLiteral",
                  "value": "Signed"
                }
              },
              {
                "name": "Memory_Properties::Data_Size",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "IntegerLiteral",
                  "value": 4,
                  "unit": "Bytes"
                }
              }
            ]
          },
          {
            "name": "Base_Types::Integer_64",
            "localName": "Integer_64",
            "kind": "ComponentType",
            "category": "data",
            "extends": "Base_Types::Integer",
            "properties": [
              {
                "name": "Data_Model::Number_Representation",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "EnumerationLiteral",
                  "value": "Signed"
                }
              },
              {
                "name": "Memory_Properties::Data_Size",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "IntegerLiteral",
                  "value": 8,
                  "unit": "Bytes"
                }
              }
            ]
          },
          {
            "name": "Base_Types::Unsigned_8",
            "localName": "Unsigned_8",
            "kind": "ComponentType",
            "category": "data",
            "extends": "Base_Types::Integer",
            "properties": [
              {
                "name": "Data_Model::Number_Representation",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "EnumerationLiteral",
                  "value": "Unsigned"
                }
              },
              {
                "name": "Memory_Properties::Data_Size",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "IntegerLiteral",
                  "value": 1,
                  "unit": "Bytes"
                }
              }
            ]
          },
          {
            "name": "Base_Types::Unsigned_16",
            "localName": "Unsigned_16",
            "kind": "ComponentType",
            "category": "data",
            "extends": "Base_Types::Integer",
            "properties": [
              {
                "name": "Data_Model::Number_Representation",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "EnumerationLiteral",
                  "value": "Unsigned"
                }
              },
              {
                "name": "Memory_Properties::Data_Size",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "IntegerLiteral",
                  "value": 2,
                  "unit": "Bytes"
                }
              }
            ]
          },
          {
            "name": "Base_Types::Unsigned_32",
            "localName": "Unsigned_32",
            "kind": "ComponentType",
            "category": "data",
            "extends": "Base_Types::Integer",
            "properties": [
              {
                "name": "Data_Model::Number_Representation",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "EnumerationLiteral",
                  "value": "Unsigned"
                }
              },
              {
                "name": "Memory_Properties::Data_Size",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "IntegerLiteral",
                  "value": 4,
                  "unit": "Bytes"
                }
              }
            ]
          },
          {
            "name": "Base_Types::Unsigned_64",
            "localName": "Unsigned_64",
            "kind": "ComponentType",
            "category": "data",
            "extends": "Base_Types::Integer",
            "properties": [
              {
                "name": "Data_Model::Number_Representation",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "EnumerationLiteral",
                  "value": "Unsigned"
                }
              },
              {
                "name": "Memory_Properties::Data_Size",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "IntegerLiteral",
                  "value": 8,
                  "unit": "Bytes"
                }
              }
            ]
          },
          {
            "name": "Base_Types::Natural",
            "localName": "Natural",
            "kind": "ComponentType",
            "category": "data",
            "extends": "Base_Types::Integer",
            "properties": [
              {
                "name": "Data_Model::Integer_Range",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "RangeValue",
                  "value": {
                    "min": {
                      "kind": "IntegerLiteral",
                      "value": 0,
                      "unit": null
                    },
                    "max": {
                      "kind": "PropertyConstant",
                      "value": "Max_Target_Integer"
                    }
                  }
                }
              }
            ]
          },
          {
            "name": "Base_Types::Float",
            "localName": "Float",
            "kind": "ComponentType",
            "category": "data",
            "properties": [
              {
                "name": "Data_Model::Data_Representation",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "EnumerationLiteral",
                  "value": "Float"
                }
              }
            ]
          },
          {
            "name": "Base_Types::Float_32",
            "localName": "Float_32",
            "kind": "ComponentType",
            "category": "data",
            "extends": "Base_Types::Float",
            "properties": [
              {
                "name": "Data_Model::IEEE754_Precision",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "EnumerationLiteral",
                  "value": "Simple"
                }
              },
              {
                "name": "Memory_Properties::Data_Size",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "IntegerLiteral",
                  "value": 4,
                  "unit": "Bytes"
                }
              }
            ]
          },
          {
            "name": "Base_Types::Float_64",
            "localName": "Float_64",
            "kind": "ComponentType",
            "category": "data",
            "extends": "Base_Types::Float",
            "properties": [
              {
                "name": "Data_Model::IEEE754_Precision",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "EnumerationLiteral",
                  "value": "Double"
                }
              },
              {
                "name": "Memory_Properties::Data_Size",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "IntegerLiteral",
                  "value": 8,
                  "unit": "Bytes"
                }
              }
            ]
          },
          {
            "name": "Base_Types::Character",
            "localName": "Character",
            "kind": "ComponentType",
            "category": "data",
            "properties": [
              {
                "name": "Data_Model::Data_Representation",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "EnumerationLiteral",
                  "value": "Character"
                }
              }
            ]
          },
          {
            "name": "Base_Types::String",
            "localName": "String",
            "kind": "ComponentType",
            "category": "data",
            "properties": [
              {
                "name": "Data_Model::Data_Representation",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "EnumerationLiteral",
                  "value": "String"
                }
              }
            ]
          }
        ]
      }
    },
    {
      "name": "Data_Model",
      "kind": "PropertySet",
      "properties": [
        {
          "name": "Data_Model::Base_Type",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "ListType",
            "propertyType": {
              "kind": "ClassifierType",
              "classifiers": [
                "data"
              ]
            }
          },
          "appliesTo": [
            "data",
            "feature"
          ]
        },
        {
          "name": "Data_Model::Code_Set",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "data",
            "feature"
          ]
        },
        {
          "name": "Data_Model::Data_Digits",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "data",
            "feature"
          ]
        },
        {
          "name": "Data_Model::Data_Scale",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "data",
            "feature"
          ]
        },
        {
          "name": "Data_Model::Data_Representation",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "EnumerationType",
            "values": [
              "Array",
              "Boolean",
              "Character",
              "Enum",
              "Float",
              "Fixed",
              "Integer",
              "String",
              "Struct",
              "Union"
            ]
          },
          "appliesTo": [
            "data",
            "feature"
          ]
        },
        {
          "name": "Data_Model::MyDimension",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "data",
            "feature"
          ]
        },
        {
          "name": "Data_Model::Dimension",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "ListType",
            "propertyType": {
              "kind": "AadlInteger"
            }
          },
          "appliesTo": [
            "data",
            "data port",
            "event data port",
            "data access"
          ]
        },
        {
          "name": "Data_Model::Element_Names",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "ListType",
            "propertyType": {
              "kind": "AadlString"
            }
          },
          "appliesTo": [
            "data",
            "feature"
          ]
        },
        {
          "name": "Data_Model::Enumerators",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "ListType",
            "propertyType": {
              "kind": "AadlString"
            }
          },
          "appliesTo": [
            "data",
            "feature"
          ]
        },
        {
          "name": "Data_Model::IEEE754_Precision",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "EnumerationType",
            "values": [
              "Simple",
              "Double"
            ]
          },
          "appliesTo": [
            "data",
            "feature"
          ]
        },
        {
          "name": "Data_Model::Initial_Value",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "ListType",
            "propertyType": {
              "kind": "AadlString"
            }
          },
          "appliesTo": [
            "data",
            "feature"
          ]
        },
        {
          "name": "Data_Model::Integer_Range",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "RangeType",
            "numberType": {
              "kind": "AadlInteger"
            }
          },
          "appliesTo": [
            "data",
            "feature"
          ]
        },
        {
          "name": "Data_Model::Measurement_Unit",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlString"
          },
          "appliesTo": [
            "data",
            "feature"
          ]
        },
        {
          "name": "Data_Model::Number_Representation",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "EnumerationType",
            "values": [
              "Signed",
              "Unsigned"
            ]
          },
          "appliesTo": [
            "data",
            "feature"
          ]
        },
        {
          "name": "Data_Model::Real_Range",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "RangeType",
            "numberType": {
              "kind": "AadlReal"
            }
          },
          "appliesTo": [
            "data",
            "feature"
          ]
        },
        {
          "name": "Data_Model::Representation",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "ListType",
            "propertyType": {
              "kind": "AadlString"
            }
          },
          "appliesTo": [
            "data",
            "feature"
          ]
        }
      ]
    },
    {
      "name": "Data_Types",
      "kind": "AadlPackage",
      "public": {
        "with": [
          "Data_Model",
          "Base_Types"
        ],
        "components": [
          {
            "name": "Data_Types::Position",
            "localName": "Position",
            "kind": "ComponentType",
            "category": "data"
          },
          {
            "packageName": "Data_Types",
            "name": "Data_Types::Position.impl",
            "localName": "Position.impl",
            "kind": "ComponentImplementation",
            "category": "data",
            "subcomponents": [
              {
                "name": "x",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Float"
              },
              {
                "name": "y",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Float"
              }
            ]
          },
          {
            "name": "Data_Types::DeliveryOrder",
            "localName": "DeliveryOrder",
            "kind": "ComponentType",
            "category": "data"
          },
          {
            "packageName": "Data_Types",
            "name": "Data_Types::DeliveryOrder.impl",
            "localName": "DeliveryOrder.impl",
            "kind": "ComponentImplementation",
            "category": "data",
            "subcomponents": [
              {
                "name": "target_position",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Data_Types::Position.impl"
              },
              {
                "name": "target_picture",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Integer"
              },
              {
                "name": "item_value",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Float"
              }
            ]
          },
          {
            "name": "Data_Types::DeliveryStatus",
            "localName": "DeliveryStatus",
            "kind": "ComponentType",
            "category": "data",
            "properties": [
              {
                "name": "Data_Model::Data_Representation",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "EnumerationLiteral",
                  "value": "Enum"
                }
              },
              {
                "name": "Data_Model::Enumerators",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "ListValue",
                  "value": [
                    {
                      "kind": "StringLiteral",
                      "value": "NOT_STARTED"
                    },
                    {
                      "kind": "StringLiteral",
                      "value": "IN_PROGRESS"
                    },
                    {
                      "kind": "StringLiteral",
                      "value": "COMPLETED"
                    },
                    {
                      "kind": "StringLiteral",
                      "value": "FAILED"
                    }
                  ]
                }
              }
            ]
          },
          {
            "name": "Data_Types::Constellation",
            "localName": "Constellation",
            "kind": "ComponentType",
            "category": "data",
            "properties": [
              {
                "name": "Data_Model::Data_Representation",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "EnumerationLiteral",
                  "value": "Enum"
                }
              },
              {
                "name": "Data_Model::Enumerators",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "ListValue",
                  "value": [
                    {
                      "kind": "StringLiteral",
                      "value": "Satellite0"
                    },
                    {
                      "kind": "StringLiteral",
                      "value": "Satellite1"
                    }
                  ]
                }
              }
            ]
          },
          {
            "name": "Data_Types::InputBus",
            "localName": "InputBus",
            "kind": "ComponentType",
            "category": "data"
          },
          {
            "packageName": "Data_Types",
            "name": "Data_Types::InputBus.impl",
            "localName": "InputBus.impl",
            "kind": "ComponentImplementation",
            "category": "data",
            "subcomponents": [
              {
                "name": "connected",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Boolean"
              },
              {
                "name": "update_order",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Boolean"
              },
              {
                "name": "order",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Data_Types::DeliveryOrder.impl"
              },
              {
                "name": "on_off",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Boolean"
              },
              {
                "name": "abort_cmd",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Boolean"
              },
              {
                "name": "constellation",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Data_Types::Constellation"
              },
              {
                "name": "launch_pos",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Data_Types::Position.impl"
              },
              {
                "name": "init_criteria_satisfied",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Boolean"
              },
              {
                "name": "mission_store_release_sequence",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Boolean"
              }
            ]
          },
          {
            "name": "Data_Types::RadioResponse",
            "localName": "RadioResponse",
            "kind": "ComponentType",
            "category": "data"
          },
          {
            "packageName": "Data_Types",
            "name": "Data_Types::RadioResponse.impl",
            "localName": "RadioResponse.impl",
            "kind": "ComponentImplementation",
            "category": "data",
            "subcomponents": [
              {
                "name": "data_available",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Boolean"
              },
              {
                "name": "target_confirmed",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Boolean"
              }
            ]
          },
          {
            "name": "Data_Types::ProbeSafeLanding",
            "localName": "ProbeSafeLanding",
            "kind": "ComponentType",
            "category": "data"
          },
          {
            "packageName": "Data_Types",
            "name": "Data_Types::ProbeSafeLanding.impl",
            "localName": "ProbeSafeLanding.impl",
            "kind": "ComponentImplementation",
            "category": "data",
            "subcomponents": [
              {
                "name": "is_target_clear",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Boolean"
              },
              {
                "name": "has_valid_marker",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Boolean"
              }
            ]
          },
          {
            "name": "Data_Types::DeliveryPlannerState",
            "localName": "DeliveryPlannerState",
            "kind": "ComponentType",
            "category": "data",
            "properties": [
              {
                "name": "Data_Model::Data_Representation",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "EnumerationLiteral",
                  "value": "Enum"
                }
              },
              {
                "name": "Data_Model::Enumerators",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "ListValue",
                  "value": [
                    {
                      "kind": "StringLiteral",
                      "value": "OFF"
                    },
                    {
                      "kind": "StringLiteral",
                      "value": "INIT"
                    },
                    {
                      "kind": "StringLiteral",
                      "value": "READY"
                    },
                    {
                      "kind": "StringLiteral",
                      "value": "LAUNCH"
                    },
                    {
                      "kind": "StringLiteral",
                      "value": "ABORT"
                    },
                    {
                      "kind": "StringLiteral",
                      "value": "FLYING_TO_DEST"
                    },
                    {
                      "kind": "StringLiteral",
                      "value": "MAKING_DELIVERY"
                    },
                    {
                      "kind": "StringLiteral",
                      "value": "RETURN_TO_TRUCK"
                    }
                  ]
                }
              }
            ]
          },
          {
            "name": "Data_Types::PackageDeliveryCommand",
            "localName": "PackageDeliveryCommand",
            "kind": "ComponentType",
            "category": "data",
            "properties": [
              {
                "name": "Data_Model::Data_Representation",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "EnumerationLiteral",
                  "value": "Enum"
                }
              },
              {
                "name": "Data_Model::Enumerators",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "ListValue",
                  "value": [
                    {
                      "kind": "StringLiteral",
                      "value": "NO_OPERATION"
                    },
                    {
                      "kind": "StringLiteral",
                      "value": "RELEASE_PACKAGE"
                    },
                    {
                      "kind": "StringLiteral",
                      "value": "ABORT_DELIVERY"
                    }
                  ]
                }
              }
            ]
          }
        ]
      }
    },
    {
      "name": "Agree_Constants",
      "kind": "AadlPackage",
      "public": {
        "with": [
          "Data_Types"
        ],
        "annexes": [
          {
            "name": "agree",
            "kind": "AnnexLibrary",
            "parsedAnnexLibrary": {
              "statements": [
                {
                  "kind": "ConstStatement",
                  "name": "ITEM_VALUE_THRESHOLD",
                  "type": {
                    "kind": "PrimType",
                    "primType": "real"
                  },
                  "expr": {
                    "kind": "RealLitExpr",
                    "value": "100.0"
                  }
                },
                {
                  "kind": "ConstStatement",
                  "name": "WAITING_CONFIRMATION_THRESHOLD",
                  "type": {
                    "kind": "PrimType",
                    "primType": "int"
                  },
                  "expr": {
                    "kind": "IntLitExpr",
                    "value": "10"
                  }
                },
                {
                  "kind": "ConstStatement",
                  "name": "MAXIMUM_NUMBER_OF_RETRIES",
                  "type": {
                    "kind": "PrimType",
                    "primType": "int"
                  },
                  "expr": {
                    "kind": "IntLitExpr",
                    "value": "3"
                  }
                },
                {
                  "kind": "ConstStatement",
                  "name": "RELEASE_PACKAGE_CMD",
                  "type": {
                    "kind": "DoubleDotRef",
                    "name": "Data_Types::PackageDeliveryCommand"
                  },
                  "expr": {
                    "kind": "AadlEnumerator",
                    "type": {
                      "kind": "DoubleDotRef",
                      "name": "Data_Types::PackageDeliveryCommand"
                    },
                    "value": "RELEASE_PACKAGE"
                  }
                },
                {
                  "kind": "ConstStatement",
                  "name": "ABORT_DELIVERY_CMD",
                  "type": {
                    "kind": "DoubleDotRef",
                    "name": "Data_Types::PackageDeliveryCommand"
                  },
                  "expr": {
                    "kind": "AadlEnumerator",
                    "type": {
                      "kind": "DoubleDotRef",
                      "name": "Data_Types::PackageDeliveryCommand"
                    },
                    "value": "ABORT_DELIVERY"
                  }
                },
                {
                  "kind": "ConstStatement",
                  "name": "NO_OPERATION_CMD",
                  "type": {
                    "kind": "DoubleDotRef",
                    "name": "Data_Types::PackageDeliveryCommand"
                  },
                  "expr": {
                    "kind": "AadlEnumerator",
                    "type": {
                      "kind": "DoubleDotRef",
                      "name": "Data_Types::PackageDeliveryCommand"
                    },
                    "value": "NO_OPERATION"
                  }
                },
                {
                  "kind": "ConstStatement",
                  "name": "NOT_STARTED_STATUS",
                  "type": {
                    "kind": "DoubleDotRef",
                    "name": "Data_Types::DeliveryStatus"
                  },
                  "expr": {
                    "kind": "AadlEnumerator",
                    "type": {
                      "kind": "DoubleDotRef",
                      "name": "Data_Types::DeliveryStatus"
                    },
                    "value": "NOT_STARTED"
                  }
                },
                {
                  "kind": "ConstStatement",
                  "name": "FAILED_STATUS",
                  "type": {
                    "kind": "DoubleDotRef",
                    "name": "Data_Types::DeliveryStatus"
                  },
                  "expr": {
                    "kind": "AadlEnumerator",
                    "type": {
                      "kind": "DoubleDotRef",
                      "name": "Data_Types::DeliveryStatus"
                    },
                    "value": "FAILED"
                  }
                },
                {
                  "kind": "ConstStatement",
                  "name": "COMPLETED_STATUS",
                  "type": {
                    "kind": "DoubleDotRef",
                    "name": "Data_Types::DeliveryStatus"
                  },
                  "expr": {
                    "kind": "AadlEnumerator",
                    "type": {
                      "kind": "DoubleDotRef",
                      "name": "Data_Types::DeliveryStatus"
                    },
                    "value": "COMPLETED"
                  }
                }
              ]
            },
            "sourceText": "{**\n\t\t\t\n\t\tconst ITEM_VALUE_THRESHOLD: real = 100.0;\n\t\t\n\t\tconst WAITING_CONFIRMATION_THRESHOLD: int = 10;\n\t\t\n\t\tconst MAXIMUM_NUMBER_OF_RETRIES: int = 3;\n\t\t\n\t\t-- enums\n\t\tconst RELEASE_PACKAGE_CMD: Data_Types::PackageDeliveryCommand = enum(Data_Types::PackageDeliveryCommand, RELEASE_PACKAGE);\n\t\tconst ABORT_DELIVERY_CMD: Data_Types::PackageDeliveryCommand = enum(Data_Types::PackageDeliveryCommand, ABORT_DELIVERY);\n\t\tconst NO_OPERATION_CMD: Data_Types::PackageDeliveryCommand = enum(Data_Types::PackageDeliveryCommand, NO_OPERATION);\n\t\tconst NOT_STARTED_STATUS: Data_Types::DeliveryStatus = enum(Data_Types::DeliveryStatus, NOT_STARTED);\n\t\tconst FAILED_STATUS: Data_Types::DeliveryStatus = enum(Data_Types::DeliveryStatus, FAILED);\n\t\tconst COMPLETED_STATUS: Data_Types::DeliveryStatus = enum(Data_Types::DeliveryStatus, COMPLETED);\n\t\t\n\t\t\n\t**}"
          }
        ]
      }
    },
    {
      "name": "Agree_Nodes",
      "kind": "AadlPackage",
      "public": {
        "with": [
          "Data_Types"
        ],
        "annexes": [
          {
            "name": "agree",
            "kind": "AnnexLibrary",
            "parsedAnnexLibrary": {
              "statements": [
                {
                  "kind": "NodeDef",
                  "name": "HasHappened",
                  "args": [
                    {
                      "name": "X",
                      "type": {
                        "kind": "PrimType",
                        "primType": "bool"
                      }
                    }
                  ],
                  "returns": [
                    {
                      "name": "Y",
                      "type": {
                        "kind": "PrimType",
                        "primType": "bool"
                      }
                    }
                  ],
                  "body": [
                    {
                      "kind": "NodeEq",
                      "left": [
                        {
                          "name": "Y",
                          "type": {
                            "kind": "PrimType",
                            "primType": "bool"
                          }
                        }
                      ],
                      "expr": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "NamedElmExpr",
                          "name": "X"
                        },
                        "op": "or",
                        "right": {
                          "kind": "BinaryExpr",
                          "left": {
                            "kind": "BoolLitExpr",
                            "value": "false"
                          },
                          "op": "->",
                          "right": {
                            "kind": "PreExpr",
                            "expr": {
                              "kind": "NamedElmExpr",
                              "name": "Y"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                {
                  "kind": "NodeDef",
                  "name": "InitiallyX",
                  "args": [
                    {
                      "name": "X",
                      "type": {
                        "kind": "PrimType",
                        "primType": "bool"
                      }
                    }
                  ],
                  "returns": [
                    {
                      "name": "Y",
                      "type": {
                        "kind": "PrimType",
                        "primType": "bool"
                      }
                    }
                  ],
                  "body": [
                    {
                      "kind": "NodeEq",
                      "left": [
                        {
                          "name": "Y",
                          "type": {
                            "kind": "PrimType",
                            "primType": "bool"
                          }
                        }
                      ],
                      "expr": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "NamedElmExpr",
                          "name": "X"
                        },
                        "op": "->",
                        "right": {
                          "kind": "BoolLitExpr",
                          "value": "true"
                        }
                      }
                    }
                  ]
                },
                {
                  "kind": "NodeDef",
                  "name": "FirstLocation",
                  "args": [
                    {
                      "name": "X",
                      "type": {
                        "kind": "DoubleDotRef",
                        "name": "Data_Types::Position.impl"
                      }
                    }
                  ],
                  "returns": [
                    {
                      "name": "Y",
                      "type": {
                        "kind": "DoubleDotRef",
                        "name": "Data_Types::Position.impl"
                      }
                    }
                  ],
                  "body": [
                    {
                      "kind": "NodeEq",
                      "left": [
                        {
                          "name": "Y",
                          "type": {
                            "kind": "DoubleDotRef",
                            "name": "Data_Types::Position.impl"
                          }
                        }
                      ],
                      "expr": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "NamedElmExpr",
                          "name": "X"
                        },
                        "op": "->",
                        "right": {
                          "kind": "PreExpr",
                          "expr": {
                            "kind": "NamedElmExpr",
                            "name": "Y"
                          }
                        }
                      }
                    }
                  ]
                },
                {
                  "kind": "NodeDef",
                  "name": "close_locations",
                  "args": [
                    {
                      "name": "p1",
                      "type": {
                        "kind": "DoubleDotRef",
                        "name": "Data_Types::Position.impl"
                      }
                    },
                    {
                      "name": "p2",
                      "type": {
                        "kind": "DoubleDotRef",
                        "name": "Data_Types::Position.impl"
                      }
                    }
                  ],
                  "returns": [
                    {
                      "name": "are_close",
                      "type": {
                        "kind": "PrimType",
                        "primType": "bool"
                      }
                    }
                  ],
                  "body": [
                    {
                      "kind": "NodeEq",
                      "left": [
                        {
                          "name": "are_close",
                          "type": {
                            "kind": "PrimType",
                            "primType": "bool"
                          }
                        }
                      ],
                      "expr": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "NamedElmExpr",
                          "name": "p1"
                        },
                        "op": "=",
                        "right": {
                          "kind": "NamedElmExpr",
                          "name": "p2"
                        }
                      }
                    }
                  ]
                },
                {
                  "kind": "NodeDef",
                  "name": "Duration",
                  "args": [
                    {
                      "name": "p",
                      "type": {
                        "kind": "PrimType",
                        "primType": "bool"
                      }
                    }
                  ],
                  "returns": [
                    {
                      "name": "r",
                      "type": {
                        "kind": "PrimType",
                        "primType": "int"
                      }
                    }
                  ],
                  "body": [
                    {
                      "kind": "NodeEq",
                      "left": [
                        {
                          "name": "r",
                          "type": {
                            "kind": "PrimType",
                            "primType": "int"
                          }
                        }
                      ],
                      "expr": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "IfThenElseExpr",
                          "if": {
                            "kind": "NamedElmExpr",
                            "name": "p"
                          },
                          "then": {
                            "kind": "IntLitExpr",
                            "value": "1"
                          },
                          "else": {
                            "kind": "IntLitExpr",
                            "value": "0"
                          }
                        },
                        "op": "->",
                        "right": {
                          "kind": "IfThenElseExpr",
                          "if": {
                            "kind": "NamedElmExpr",
                            "name": "p"
                          },
                          "then": {
                            "kind": "BinaryExpr",
                            "left": {
                              "kind": "PreExpr",
                              "expr": {
                                "kind": "NamedElmExpr",
                                "name": "r"
                              }
                            },
                            "op": "+",
                            "right": {
                              "kind": "IntLitExpr",
                              "value": "1"
                            }
                          },
                          "else": {
                            "kind": "IntLitExpr",
                            "value": "0"
                          }
                        }
                      }
                    }
                  ]
                },
                {
                  "kind": "NodeDef",
                  "name": "Sofar",
                  "args": [
                    {
                      "name": "X",
                      "type": {
                        "kind": "PrimType",
                        "primType": "bool"
                      }
                    }
                  ],
                  "returns": [
                    {
                      "name": "Y",
                      "type": {
                        "kind": "PrimType",
                        "primType": "bool"
                      }
                    }
                  ],
                  "body": [
                    {
                      "kind": "NodeEq",
                      "left": [
                        {
                          "name": "Y",
                          "type": {
                            "kind": "PrimType",
                            "primType": "bool"
                          }
                        }
                      ],
                      "expr": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "NamedElmExpr",
                          "name": "X"
                        },
                        "op": "->",
                        "right": {
                          "kind": "BinaryExpr",
                          "left": {
                            "kind": "NamedElmExpr",
                            "name": "X"
                          },
                          "op": "and",
                          "right": {
                            "kind": "PreExpr",
                            "expr": {
                              "kind": "NamedElmExpr",
                              "name": "Y"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                {
                  "kind": "NodeDef",
                  "name": "Since",
                  "args": [
                    {
                      "name": "X",
                      "type": {
                        "kind": "PrimType",
                        "primType": "bool"
                      }
                    },
                    {
                      "name": "Y",
                      "type": {
                        "kind": "PrimType",
                        "primType": "bool"
                      }
                    }
                  ],
                  "returns": [
                    {
                      "name": "Z",
                      "type": {
                        "kind": "PrimType",
                        "primType": "bool"
                      }
                    }
                  ],
                  "body": [
                    {
                      "kind": "NodeEq",
                      "left": [
                        {
                          "name": "Z",
                          "type": {
                            "kind": "PrimType",
                            "primType": "bool"
                          }
                        }
                      ],
                      "expr": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "NamedElmExpr",
                          "name": "X"
                        },
                        "op": "or",
                        "right": {
                          "kind": "BinaryExpr",
                          "left": {
                            "kind": "NamedElmExpr",
                            "name": "Y"
                          },
                          "op": "and",
                          "right": {
                            "kind": "BinaryExpr",
                            "left": {
                              "kind": "BoolLitExpr",
                              "value": "false"
                            },
                            "op": "->",
                            "right": {
                              "kind": "PreExpr",
                              "expr": {
                                "kind": "NamedElmExpr",
                                "name": "Z"
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                {
                  "kind": "NodeDef",
                  "name": "ToInt",
                  "args": [
                    {
                      "name": "b",
                      "type": {
                        "kind": "PrimType",
                        "primType": "bool"
                      }
                    }
                  ],
                  "returns": [
                    {
                      "name": "i",
                      "type": {
                        "kind": "PrimType",
                        "primType": "int"
                      }
                    }
                  ],
                  "body": [
                    {
                      "kind": "NodeEq",
                      "left": [
                        {
                          "name": "i",
                          "type": {
                            "kind": "PrimType",
                            "primType": "int"
                          }
                        }
                      ],
                      "expr": {
                        "kind": "IfThenElseExpr",
                        "if": {
                          "kind": "NamedElmExpr",
                          "name": "b"
                        },
                        "then": {
                          "kind": "IntLitExpr",
                          "value": "1"
                        },
                        "else": {
                          "kind": "IntLitExpr",
                          "value": "0"
                        }
                      }
                    }
                  ]
                }
              ]
            },
            "sourceText": "{**\n\t\t\t\n\t\t-- HasHappened(X) is true iff X has been true at least once so far\n\t\tnode HasHappened(X : bool) returns (Y : bool);\n\t\tlet\n  \t\t\tY = X or (false -> pre (Y)) ;\n\t\ttel;\n\n\t\t-- Initially(X) is true iff X was true at the initial step\n\t\tnode InitiallyX(X: bool) returns (Y: bool);\n\t\tlet\n  \t\t\tY = X -> true;\n\t\ttel;\n\n\t\t-- FirstLocation(X) is the constant stream consisting of the first value of X\n\t\tnode FirstLocation( X : Data_Types::Position.impl ) returns ( Y : Data_Types::Position.impl );\n\t\tlet\n  \t\t\tY = X -> pre (Y);\n\t\ttel;\n\t\t\n\t\tnode close_locations(p1: Data_Types::Position.impl, p2: Data_Types::Position.impl) returns (are_close: bool);\n\t\tlet\n  \t\t\tare_close = p1 = p2;\n\t\ttel;\n\t\t\n\t\tnode Duration(p: bool) returns (r: int) ;\n\t\tlet   \n\t\t\tr = (if p then 1 else 0) -> (if p then pre(r) + 1 else 0) ;\n\t\ttel;\n\t\t\n\t\tnode Sofar(X : bool ) returns ( Y : bool );\n\t\tlet\n \t\t\tY = X -> (X and (pre(Y)));\n\t\ttel;\n\t\t\n\t\tnode Since(X: bool, Y : bool ) returns ( Z : bool );\n\t\tlet\n  \t\t\tZ =  X or (Y and (false -> pre(Z)));\n\t\ttel;\n\t\t\n\t\tnode ToInt(b: bool) returns (i: int);\n\t\tlet\n\t\t\ti = if b then 1 else 0;\n\t\ttel;\n\t\t\n\t**}"
          }
        ]
      }
    },
    {
      "name": "CASE_Consolidated_Properties",
      "kind": "PropertySet",
      "properties": [
        {
          "name": "CASE_Consolidated_Properties::canReceiveConfigUpdate",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlBoolean"
          },
          "appliesTo": [
            "abstract",
            "bus",
            "device",
            "system",
            "process",
            "processor",
            "thread"
          ]
        },
        {
          "name": "CASE_Consolidated_Properties::canReceiveSWUpdate",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlBoolean"
          },
          "appliesTo": [
            "abstract",
            "bus",
            "device",
            "system",
            "process",
            "processor",
            "thread"
          ]
        },
        {
          "name": "CASE_Consolidated_Properties::componentType",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "EnumerationType",
            "values": [
              "Software",
              "Hardware",
              "Human",
              "SwHwHybrid",
              "SwHumanHybrid",
              "HwHumanHybrid",
              "Hybrid"
            ]
          },
          "appliesTo": [
            "abstract",
            "bus",
            "device",
            "system",
            "process",
            "processor",
            "thread"
          ]
        },
        {
          "name": "CASE_Consolidated_Properties::hasSensitiveInfo",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlBoolean"
          },
          "appliesTo": [
            "abstract",
            "bus",
            "device",
            "system",
            "process",
            "processor",
            "thread"
          ]
        },
        {
          "name": "CASE_Consolidated_Properties::insideTrustedBoundary",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlBoolean"
          },
          "appliesTo": [
            "abstract",
            "bus",
            "device",
            "system",
            "process",
            "processor",
            "thread"
          ]
        },
        {
          "name": "CASE_Consolidated_Properties::pedigree",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "EnumerationType",
            "values": [
              "InternallyDeveloped",
              "COTS",
              "Sourced"
            ]
          },
          "appliesTo": [
            "abstract",
            "bus",
            "device",
            "system",
            "process",
            "processor",
            "thread"
          ]
        },
        {
          "name": "CASE_Consolidated_Properties::probe",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlBoolean"
          },
          "appliesTo": [
            "port"
          ]
        },
        {
          "name": "CASE_Consolidated_Properties::connectionType",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "EnumerationType",
            "values": [
              "Trusted",
              "Untrusted"
            ]
          },
          "appliesTo": [
            "connection"
          ]
        },
        {
          "name": "CASE_Consolidated_Properties::category",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlString"
          },
          "appliesTo": [
            "abstract",
            "bus",
            "device",
            "system",
            "process",
            "processor",
            "thread"
          ]
        },
        {
          "name": "CASE_Consolidated_Properties::adversariallyTestedForTrojanOrLogicBomb",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "abstract",
            "bus",
            "device",
            "system",
            "process",
            "processor",
            "thread"
          ]
        },
        {
          "name": "CASE_Consolidated_Properties::encryptedTransmission",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "connection"
          ]
        },
        {
          "name": "CASE_Consolidated_Properties::deviceAuthentication",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "connection"
          ]
        },
        {
          "name": "CASE_Consolidated_Properties::sessionAuthenticity",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "connection"
          ]
        },
        {
          "name": "CASE_Consolidated_Properties::antiJamming",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "abstract",
            "bus",
            "device",
            "system",
            "process",
            "processor",
            "thread"
          ]
        },
        {
          "name": "CASE_Consolidated_Properties::auditMessageResponses",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "abstract",
            "bus",
            "device",
            "system",
            "process",
            "processor",
            "thread"
          ]
        },
        {
          "name": "CASE_Consolidated_Properties::dosProtection",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "abstract",
            "bus",
            "device",
            "system",
            "process",
            "processor",
            "thread"
          ]
        },
        {
          "name": "CASE_Consolidated_Properties::encryptedStorage",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "abstract",
            "bus",
            "device",
            "system",
            "process",
            "processor",
            "thread"
          ]
        },
        {
          "name": "CASE_Consolidated_Properties::failSafe",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "abstract",
            "bus",
            "device",
            "system",
            "process",
            "processor",
            "thread"
          ]
        },
        {
          "name": "CASE_Consolidated_Properties::heterogeneity",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "abstract",
            "bus",
            "device",
            "system",
            "process",
            "processor",
            "thread"
          ]
        },
        {
          "name": "CASE_Consolidated_Properties::inputValidation",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "abstract",
            "bus",
            "device",
            "system",
            "process",
            "processor",
            "thread"
          ]
        },
        {
          "name": "CASE_Consolidated_Properties::logging",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "abstract",
            "bus",
            "device",
            "system",
            "process",
            "processor",
            "thread"
          ]
        },
        {
          "name": "CASE_Consolidated_Properties::memoryProtection",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "abstract",
            "bus",
            "device",
            "system",
            "process",
            "processor",
            "thread"
          ]
        },
        {
          "name": "CASE_Consolidated_Properties::physicalAccessControl",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "abstract",
            "bus",
            "device",
            "system",
            "process",
            "processor",
            "thread"
          ]
        },
        {
          "name": "CASE_Consolidated_Properties::remoteAttestation",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "abstract",
            "bus",
            "device",
            "system",
            "process",
            "processor",
            "thread"
          ]
        },
        {
          "name": "CASE_Consolidated_Properties::removeIdentifyingInformation",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "abstract",
            "bus",
            "device",
            "system",
            "process",
            "processor",
            "thread"
          ]
        },
        {
          "name": "CASE_Consolidated_Properties::resourceAvailability",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "abstract",
            "bus",
            "device",
            "system",
            "process",
            "processor",
            "thread"
          ]
        },
        {
          "name": "CASE_Consolidated_Properties::resourceIsolation",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "abstract",
            "bus",
            "device",
            "system",
            "process",
            "processor",
            "thread"
          ]
        },
        {
          "name": "CASE_Consolidated_Properties::secureBoot",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "abstract",
            "bus",
            "device",
            "system",
            "process",
            "processor",
            "thread"
          ]
        },
        {
          "name": "CASE_Consolidated_Properties::staticCodeAnalysis",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "abstract",
            "bus",
            "device",
            "system",
            "process",
            "processor",
            "thread"
          ]
        },
        {
          "name": "CASE_Consolidated_Properties::strongCryptoAlgorithms",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "abstract",
            "bus",
            "device",
            "system",
            "process",
            "processor",
            "thread"
          ]
        },
        {
          "name": "CASE_Consolidated_Properties::supplyChainSecurity",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "abstract",
            "bus",
            "device",
            "system",
            "process",
            "processor",
            "thread"
          ]
        },
        {
          "name": "CASE_Consolidated_Properties::systemAccessControl",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "abstract",
            "bus",
            "device",
            "system",
            "process",
            "processor",
            "thread"
          ]
        },
        {
          "name": "CASE_Consolidated_Properties::tamperProtection",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "abstract",
            "bus",
            "device",
            "system",
            "process",
            "processor",
            "thread"
          ]
        },
        {
          "name": "CASE_Consolidated_Properties::userAuthentication",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "abstract",
            "bus",
            "device",
            "system",
            "process",
            "processor",
            "thread"
          ]
        },
        {
          "name": "CASE_Consolidated_Properties::zeroize",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "abstract",
            "bus",
            "device",
            "system",
            "process",
            "processor",
            "thread"
          ]
        },
        {
          "name": "CASE_Consolidated_Properties::Configuration_Attack",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlBoolean"
          },
          "appliesTo": [
            "abstract",
            "bus",
            "device",
            "system",
            "process",
            "processor",
            "thread"
          ]
        },
        {
          "name": "CASE_Consolidated_Properties::Physical_Theft_Attack",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlBoolean"
          },
          "appliesTo": [
            "abstract",
            "bus",
            "device",
            "system",
            "process",
            "processor",
            "thread"
          ]
        },
        {
          "name": "CASE_Consolidated_Properties::Interception_Attack",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlBoolean"
          },
          "appliesTo": [
            "abstract",
            "bus",
            "device",
            "system",
            "process",
            "processor",
            "thread"
          ]
        },
        {
          "name": "CASE_Consolidated_Properties::Hardware_Integrity_Attack",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlBoolean"
          },
          "appliesTo": [
            "abstract",
            "bus",
            "device",
            "system",
            "process",
            "processor",
            "thread"
          ]
        },
        {
          "name": "CASE_Consolidated_Properties::Supply_Chain_Attack",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlBoolean"
          },
          "appliesTo": [
            "abstract",
            "bus",
            "device",
            "system",
            "process",
            "processor",
            "thread"
          ]
        },
        {
          "name": "CASE_Consolidated_Properties::Brute_Force_Attack",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlBoolean"
          },
          "appliesTo": [
            "abstract",
            "bus",
            "device",
            "system",
            "process",
            "processor",
            "thread"
          ]
        },
        {
          "name": "CASE_Consolidated_Properties::Fault_Injection_Attack",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlBoolean"
          },
          "appliesTo": [
            "abstract",
            "bus",
            "device",
            "system",
            "process",
            "processor",
            "thread"
          ]
        },
        {
          "name": "CASE_Consolidated_Properties::Identity_Spoofing_Attack",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlBoolean"
          },
          "appliesTo": [
            "abstract",
            "bus",
            "device",
            "system",
            "process",
            "processor",
            "thread"
          ]
        },
        {
          "name": "CASE_Consolidated_Properties::Excessive_Allocation_Attack",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlBoolean"
          },
          "appliesTo": [
            "abstract",
            "bus",
            "device",
            "system",
            "process",
            "processor",
            "thread"
          ]
        },
        {
          "name": "CASE_Consolidated_Properties::Sniffing_Attack",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlBoolean"
          },
          "appliesTo": [
            "abstract",
            "bus",
            "device",
            "system",
            "process",
            "processor",
            "thread"
          ]
        },
        {
          "name": "CASE_Consolidated_Properties::Buffer_Attack",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlBoolean"
          },
          "appliesTo": [
            "abstract",
            "bus",
            "device",
            "system",
            "process",
            "processor",
            "thread"
          ]
        },
        {
          "name": "CASE_Consolidated_Properties::Flooding_Attack",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlBoolean"
          },
          "appliesTo": [
            "abstract",
            "bus",
            "device",
            "system",
            "process",
            "processor",
            "thread"
          ]
        },
        {
          "name": "CASE_Consolidated_Properties::Component_Type",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "EnumerationType",
            "values": [
              "FILTER",
              "ATTESTATION",
              "MONITOR",
              "VIRTUAL_MACHINE",
              "COMM_DRIVER",
              "SEL4",
              "SWITCH"
            ]
          },
          "appliesTo": [
            "system",
            "process",
            "thread",
            "thread group",
            "device",
            "abstract",
            "processor",
            "virtual processor"
          ]
        },
        {
          "name": "CASE_Consolidated_Properties::Component_Impl",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlString"
          },
          "appliesTo": [
            "system",
            "process",
            "thread",
            "thread group",
            "abstract"
          ]
        },
        {
          "name": "CASE_Consolidated_Properties::Component_Spec",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "ListType",
            "propertyType": {
              "kind": "AadlString"
            }
          },
          "appliesTo": [
            "system",
            "process",
            "thread",
            "abstract"
          ]
        },
        {
          "name": "CASE_Consolidated_Properties::Cache_Timeout",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "system",
            "process",
            "thread",
            "thread group",
            "device",
            "abstract"
          ]
        },
        {
          "name": "CASE_Consolidated_Properties::Cache_Size",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "system",
            "process",
            "thread",
            "thread group",
            "device",
            "abstract"
          ]
        },
        {
          "name": "CASE_Consolidated_Properties::Comm_Modality",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "EnumerationType",
            "values": [
              "RF",
              "WIFI",
              "WIRED_ETHERNET",
              "SERIAL",
              "BT",
              "NFC"
            ]
          },
          "appliesTo": [
            "bus"
          ]
        },
        {
          "name": "CASE_Consolidated_Properties::OS",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlString"
          },
          "appliesTo": [
            "processor",
            "virtual processor"
          ]
        },
        {
          "name": "CASE_Consolidated_Properties::Trust_Level",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "feature",
            "connection",
            "classifier",
            "subcomponent"
          ]
        },
        {
          "name": "CASE_Consolidated_Properties::Control_Level",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "feature",
            "connection",
            "classifier",
            "subcomponent"
          ]
        },
        {
          "name": "CASE_Consolidated_Properties::Data_Classification",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "EnumerationType",
            "values": [
              "TOP_SECRET",
              "SECRET",
              "CONFIDENTIAL",
              "FOUO",
              "TIME_SENSITIVE"
            ]
          },
          "appliesTo": [
            "feature",
            "connection",
            "subcomponent",
            "classifier"
          ]
        }
      ]
    },
    {
      "name": "GNC",
      "kind": "AadlPackage",
      "public": {
        "with": [
          "Base_Types",
          "Data_Types",
          "Agree_Nodes",
          "CASE_Consolidated_Properties"
        ],
        "components": [
          {
            "name": "GNC::GPS",
            "localName": "GPS",
            "kind": "ComponentType",
            "category": "system",
            "features": [
              {
                "name": "constellation",
                "kind": "DataPort",
                "classifier": "Data_Types::Constellation",
                "direction": "in"
              },
              {
                "name": "satellite0_pos",
                "kind": "DataPort",
                "classifier": "Data_Types::Position.impl",
                "direction": "in"
              },
              {
                "name": "satellite1_pos",
                "kind": "DataPort",
                "classifier": "Data_Types::Position.impl",
                "direction": "in"
              },
              {
                "name": "gps_pos",
                "kind": "DataPort",
                "classifier": "Data_Types::Position.impl",
                "direction": "out"
              },
              {
                "name": "health_status",
                "kind": "DataPort",
                "classifier": "Base_Types::Boolean",
                "direction": "out"
              },
              {
                "name": "probe_constellation",
                "kind": "DataPort",
                "classifier": "Data_Types::Constellation",
                "direction": "out"
              }
            ],
            "annexes": [
              {
                "name": "agree",
                "kind": "AnnexSubclause",
                "parsedAnnexSubclause": {
                  "statements": [
                    {
                      "kind": "EqStatement",
                      "left": [
                        {
                          "name": "satellite0_selected",
                          "type": {
                            "kind": "PrimType",
                            "primType": "bool"
                          }
                        }
                      ],
                      "expr": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "NamedElmExpr",
                          "name": "constellation"
                        },
                        "op": "=",
                        "right": {
                          "kind": "AadlEnumerator",
                          "type": {
                            "kind": "DoubleDotRef",
                            "name": "Data_Types::Constellation"
                          },
                          "value": "Satellite0"
                        }
                      }
                    },
                    {
                      "kind": "EqStatement",
                      "left": [
                        {
                          "name": "selected_satellite_pos",
                          "type": {
                            "kind": "DoubleDotRef",
                            "name": "Data_Types::Position.impl"
                          }
                        }
                      ],
                      "expr": {
                        "kind": "IfThenElseExpr",
                        "if": {
                          "kind": "NamedElmExpr",
                          "name": "satellite0_selected"
                        },
                        "then": {
                          "kind": "NamedElmExpr",
                          "name": "satellite0_pos"
                        },
                        "else": {
                          "kind": "NamedElmExpr",
                          "name": "satellite1_pos"
                        }
                      }
                    },
                    {
                      "kind": "GuaranteeStatement",
                      "label": "Output: gps_pos",
                      "expr": {
                        "kind": "CallExpr",
                        "function": {
                          "kind": "DoubleDotRef",
                          "packageName": "Agree_Nodes",
                          "name": "close_locations"
                        },
                        "args": [
                          {
                            "kind": "NamedElmExpr",
                            "name": "gps_pos"
                          },
                          {
                            "kind": "NamedElmExpr",
                            "name": "selected_satellite_pos"
                          }
                        ]
                      }
                    },
                    {
                      "kind": "GuaranteeStatement",
                      "label": "Output: probe_constellation",
                      "expr": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "NamedElmExpr",
                          "name": "probe_constellation"
                        },
                        "op": "=",
                        "right": {
                          "kind": "NamedElmExpr",
                          "name": "constellation"
                        }
                      }
                    }
                  ]
                },
                "sourceText": "{**\n\t\t\t -- variables\n\t\t\t eq satellite0_selected: bool = (constellation = enum(Data_Types::Constellation, Satellite0));\n\t\t\t eq selected_satellite_pos: Data_Types::Position.impl = if satellite0_selected then \n\t\t\t \t\t\t\t\t\t\t\t\t\t\t\t  \t\t\tsatellite0_pos \n\t\t\t \t\t\t\t\t\t\t\t\t\t\t\t  \t\telse satellite1_pos;\n\t\t\t \n\t\t\t -- high-level specification\n\t\t\t guarantee \\\"Output: gps_pos\\\": Agree_Nodes::close_locations(gps_pos, selected_satellite_pos);\n\t\t\t \n\t\t\t -- probe outputs\n\t\t\t guarantee \\\"Output: probe_constellation\\\": probe_constellation = constellation;\n\t\t**}"
              },
              {
                "name": "verdict",
                "kind": "AnnexSubclause",
                "sourceText": "{**\n\t\t\tCyberRel \\\"gps_out_I\\\" => gps_pos:I;\n\t\t\tCyberRel \\\"gps_out_A\\\" => gps_pos:A;\n\t\t\tEvent {\n\t\t\t\tid = \\\"loa_event\\\"\n\t\t\t\tprobability = 1.0e-9\n\t\t\t\tcomment = \\\"loss of availability of the GPS\\\"\n\t\t\t\tdescription = \\\"LOA\\\"\n\t\t\t}\n\t\t\tEvent {\n\t\t\t\tid = \\\"ued_event\\\"\n\t\t\t\tprobability = 1.0e-8\n\t\t\t\tcomment = \\\"undetected erroneous data of the GPS\\\"\n\t\t\t\tdescription = \\\"UED\\\"\n\t\t\t}\n\t\t\tSafetyRel \\\"gps_out_LOA\\\" = happens(\\\"loa_event\\\") => gps_pos:A;\n\t\t\tSafetyRel \\\"gps_out_UED\\\" = happens(\\\"ued_event\\\") => gps_pos:I;\n\t\t**}"
              }
            ]
          },
          {
            "name": "GNC::IMU",
            "localName": "IMU",
            "kind": "ComponentType",
            "category": "system",
            "features": [
              {
                "name": "launch_pos",
                "kind": "DataPort",
                "classifier": "Data_Types::Position.impl",
                "direction": "in"
              },
              {
                "name": "imu_pos",
                "kind": "DataPort",
                "classifier": "Data_Types::Position.impl",
                "direction": "out"
              },
              {
                "name": "health_status",
                "kind": "DataPort",
                "classifier": "Base_Types::Boolean",
                "direction": "out"
              },
              {
                "name": "probe_launch_pos",
                "kind": "DataPort",
                "classifier": "Data_Types::Position.impl",
                "direction": "out"
              }
            ],
            "annexes": [
              {
                "name": "agree",
                "kind": "AnnexSubclause",
                "parsedAnnexSubclause": {
                  "statements": [
                    {
                      "kind": "GuaranteeStatement",
                      "label": "Output: probe_launch_pos",
                      "expr": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "NamedElmExpr",
                          "name": "probe_launch_pos"
                        },
                        "op": "=",
                        "right": {
                          "kind": "NamedElmExpr",
                          "name": "launch_pos"
                        }
                      }
                    }
                  ]
                },
                "sourceText": "{**\n\t\t\t-- probe\n\t\t\tguarantee \\\"Output: probe_launch_pos\\\": probe_launch_pos = launch_pos;\n\t\t**}"
              },
              {
                "name": "verdict",
                "kind": "AnnexSubclause",
                "sourceText": "{**\n\t\t\tCyberRel \\\"imu_out_I\\\" => imu_pos:I;\n\t\t\tCyberRel \\\"imu_out_A\\\" => imu_pos:A;\n\t\t\tEvent {\n\t\t\t\tid = \\\"loa_event\\\"\n\t\t\t\tprobability = 1.0e-8\n\t\t\t\tcomment = \\\"loss of availability of the IMU\\\"\n\t\t\t\tdescription = \\\"LOA\\\"\n\t\t\t}\n\t\t\tEvent {\n\t\t\t\tid = \\\"ued_event\\\"\n\t\t\t\tprobability = 1.0e-8\n\t\t\t\tcomment = \\\"undetected erroneous data of the IMU\\\"\n\t\t\t\tdescription = \\\"UED\\\"\n\t\t\t}\n\t\t\tSafetyRel \\\"imu_out_LOA\\\" = happens(\\\"loa_event\\\") => imu_pos:A;\n\t\t\tSafetyRel \\\"imu_out_UED\\\" = happens(\\\"ued_event\\\") => imu_pos:I;\n\t\t**}"
              }
            ]
          },
          {
            "name": "GNC::PositionEstimator",
            "localName": "PositionEstimator",
            "kind": "ComponentType",
            "category": "system",
            "features": [
              {
                "name": "gps_pos",
                "kind": "DataPort",
                "classifier": "Data_Types::Position.impl",
                "direction": "in"
              },
              {
                "name": "imu_pos",
                "kind": "DataPort",
                "classifier": "Data_Types::Position.impl",
                "direction": "in"
              },
              {
                "name": "pos_act_in",
                "kind": "DataPort",
                "classifier": "Data_Types::Position.impl",
                "direction": "in"
              },
              {
                "name": "est_pos",
                "kind": "DataPort",
                "classifier": "Data_Types::Position.impl",
                "direction": "out"
              }
            ],
            "annexes": [
              {
                "name": "agree",
                "kind": "AnnexSubclause",
                "parsedAnnexSubclause": {
                  "statements": [
                    {
                      "kind": "GuaranteeStatement",
                      "label": "Output: est_pos",
                      "expr": {
                        "kind": "CallExpr",
                        "function": {
                          "kind": "DoubleDotRef",
                          "packageName": "Agree_Nodes",
                          "name": "close_locations"
                        },
                        "args": [
                          {
                            "kind": "NamedElmExpr",
                            "name": "est_pos"
                          },
                          {
                            "kind": "NamedElmExpr",
                            "name": "gps_pos"
                          }
                        ]
                      }
                    }
                  ]
                },
                "sourceText": "{**\n\t\t\t-- high-level specification\n\t\t\tguarantee \\\"Output: est_pos\\\": Agree_Nodes::close_locations(est_pos, gps_pos);\t\n\t\t**}"
              },
              {
                "name": "verdict",
                "kind": "AnnexSubclause",
                "sourceText": "{**\n\t\t\tCyberRel \\\"pos_out_I\\\" = imu_pos:I or gps_pos:I or pos_act_in:I => est_pos:I;\n\t\t\tCyberRel \\\"pos_out_A\\\" = imu_pos:A or gps_pos:A or pos_act_in:A => est_pos:A;\n\t\t\tEvent {\n\t\t\t\tid = \\\"loa_event\\\"\n\t\t\t\tprobability = 1.0e-8\n\t\t\t\tcomment = \\\"loss of availability of the PositionEstimator\\\"\n\t\t\t\tdescription = \\\"LOA\\\"\n\t\t\t}\n\t\t\tEvent {\n\t\t\t\tid = \\\"ued_event\\\"\n\t\t\t\tprobability = 1.0e-9\n\t\t\t\tcomment = \\\"undetected erroneous data of the PositionEstimator\\\"\n\t\t\t\tdescription = \\\"UED\\\"\n\t\t\t}\n\t\t\tSafetyRel \\\"pos_out_LOA\\\" = happens(\\\"loa_event\\\") or (imu_pos:A or gps_pos:A) or pos_act_in:A => est_pos:A;\n--\t\t\tSafetyRel \\\"pos_out_LOA\\\" = happens(\\\"loa_event\\\") or (imu_pos:A and gps_pos:A) or pos_act_in:A => est_pos:A;\n\t\t\tSafetyRel \\\"pos_out_UED\\\" = happens(\\\"ued_event\\\") or imu_pos:I or gps_pos:I or pos_act_in:I => est_pos:I;\n\t\t**}"
              }
            ]
          },
          {
            "name": "GNC::Navigation",
            "localName": "Navigation",
            "kind": "ComponentType",
            "category": "system",
            "features": [
              {
                "name": "est_pos",
                "kind": "DataPort",
                "classifier": "Data_Types::Position.impl",
                "direction": "in"
              },
              {
                "name": "dest_pos",
                "kind": "DataPort",
                "classifier": "Data_Types::Position.impl",
                "direction": "in"
              },
              {
                "name": "cmd",
                "kind": "DataPort",
                "classifier": "Base_Types::Boolean",
                "direction": "in"
              },
              {
                "name": "flight_control_state",
                "kind": "DataPort",
                "classifier": "Base_Types::Boolean",
                "direction": "in"
              },
              {
                "name": "move",
                "kind": "DataPort",
                "classifier": "Base_Types::Boolean",
                "direction": "out"
              },
              {
                "name": "cur_pos",
                "kind": "DataPort",
                "classifier": "Data_Types::Position.impl",
                "direction": "out"
              },
              {
                "name": "pos_act_out",
                "kind": "DataPort",
                "classifier": "Data_Types::Position.impl",
                "direction": "out"
              },
              {
                "name": "probe_dest_pos",
                "kind": "DataPort",
                "classifier": "Data_Types::Position.impl",
                "direction": "out"
              }
            ],
            "annexes": [
              {
                "name": "agree",
                "kind": "AnnexSubclause",
                "parsedAnnexSubclause": {
                  "statements": [
                    {
                      "kind": "GuaranteeStatement",
                      "label": "Output: cur_pos | Current location is computed from Estimated Position",
                      "expr": {
                        "kind": "CallExpr",
                        "function": {
                          "kind": "DoubleDotRef",
                          "packageName": "Agree_Nodes",
                          "name": "close_locations"
                        },
                        "args": [
                          {
                            "kind": "NamedElmExpr",
                            "name": "cur_pos"
                          },
                          {
                            "kind": "NamedElmExpr",
                            "name": "est_pos"
                          }
                        ]
                      }
                    },
                    {
                      "kind": "GuaranteeStatement",
                      "label": "Output: move",
                      "expr": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "NamedElmExpr",
                          "name": "move"
                        },
                        "op": "=",
                        "right": {
                          "kind": "NamedElmExpr",
                          "name": "cmd"
                        }
                      }
                    },
                    {
                      "kind": "GuaranteeStatement",
                      "label": "Output: probe_dest_pos",
                      "expr": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "NamedElmExpr",
                          "name": "probe_dest_pos"
                        },
                        "op": "=",
                        "right": {
                          "kind": "NamedElmExpr",
                          "name": "dest_pos"
                        }
                      }
                    }
                  ]
                },
                "sourceText": "{**\n\t\t\t-- high-level specification\n\t\t\t\t\t\n\t\t\tguarantee \\\"Output: cur_pos | Current location is computed from Estimated Position\\\":\n\t\t\t\tAgree_Nodes::close_locations(cur_pos, est_pos);\n\t\t\t\n\t\t\tguarantee \\\"Output: move\\\":\n\t\t\t\tmove = cmd;\n\t\t\t\n\t\t\t-- probe outputs\n\t\t\tguarantee \\\"Output: probe_dest_pos\\\": probe_dest_pos = dest_pos;\n\t\t**}"
              },
              {
                "name": "verdict",
                "kind": "AnnexSubclause",
                "sourceText": "{**\n\t\t\tCyberRel \\\"move_out_I\\\"         = est_pos:I or cmd:I or flight_control_state:I => move:I;\n\t\t\tCyberRel \\\"move_out_A\\\"         = est_pos:A or cmd:A or flight_control_state:A => move:A;\n\t\t\tCyberRel \\\"nav_location_out_I\\\" = est_pos:I or cmd:I or flight_control_state:I => cur_pos:I;\n\t\t\tCyberRel \\\"nav_location_out_A\\\" = est_pos:A or cmd:A or flight_control_state:A => cur_pos:A;\n\t\t\tCyberRel \\\"pos_act_out_I\\\"      = est_pos:I or cmd:I or flight_control_state:I => pos_act_out:I;\n\t\t\tCyberRel \\\"pos_act_out_A\\\"      = est_pos:A or cmd:A or flight_control_state:A => pos_act_out:A;\n\t\t\tEvent {\n\t\t\t\tid = \\\"loa_event\\\"\n\t\t\t\tprobability = 1.0e-8\n\t\t\t\tcomment = \\\"loss of availability of the Navigator\\\"\n\t\t\t\tdescription = \\\"LOA\\\"\n\t\t\t}\n\t\t\tEvent {\n\t\t\t\tid = \\\"ued_event\\\"\n\t\t\t\tprobability = 1.0e-9\n\t\t\t\tcomment = \\\"undetected erroneous data of the Navigator\\\"\n\t\t\t\tdescription = \\\"UED\\\"\n\t\t\t}\n\t\t\tSafetyRel \\\"move_out_LOA\\\"         = happens(\\\"loa_event\\\") or est_pos:A or cmd:A or flight_control_state:A => move:A;\n\t\t\tSafetyRel \\\"move_out_UED\\\"         = happens(\\\"ued_event\\\") or est_pos:I or cmd:I or flight_control_state:I => move:I;\n\t\t\tSafetyRel \\\"nav_location_out_LOA\\\" = happens(\\\"loa_event\\\") or est_pos:A or cmd:A or flight_control_state:A => cur_pos:A;\n\t\t\tSafetyRel \\\"nav_location_out_UED\\\" = happens(\\\"ued_event\\\") or est_pos:I or cmd:I or flight_control_state:I => cur_pos:I;\n\t\t\tSafetyRel \\\"pos_act_out_LOA\\\"      = happens(\\\"loa_event\\\") or est_pos:A or cmd:A or flight_control_state:A => pos_act_out:A;\n\t\t\tSafetyRel \\\"pos_act_out_UED\\\"      = happens(\\\"ued_event\\\") or est_pos:I or cmd:I or flight_control_state:I => pos_act_out:I;\n\t\t**}"
              }
            ]
          },
          {
            "name": "GNC::FlightControl",
            "localName": "FlightControl",
            "kind": "ComponentType",
            "category": "system",
            "features": [
              {
                "name": "actuation_response",
                "kind": "DataPort",
                "classifier": "Base_Types::Boolean",
                "direction": "in"
              },
              {
                "name": "move",
                "kind": "DataPort",
                "classifier": "Base_Types::Boolean",
                "direction": "in"
              },
              {
                "name": "motor_cmd",
                "kind": "DataPort",
                "classifier": "Base_Types::Boolean",
                "direction": "out"
              },
              {
                "name": "fc_state",
                "kind": "DataPort",
                "classifier": "Base_Types::Boolean",
                "direction": "out"
              }
            ],
            "annexes": [
              {
                "name": "verdict",
                "kind": "AnnexSubclause",
                "sourceText": "{**\n\t\t\tCyberRel \\\"state_out_I\\\"  = move:I or actuation_response:I => fc_state:I;\n\t\t\tCyberRel \\\"state_out_A\\\"  = move:A or actuation_response:A => fc_state:A;\n\t\t\tCyberRel \\\"fc_cmd_out_I\\\" = move:I or actuation_response:I => motor_cmd:I;\n\t\t\tCyberRel \\\"fc_cmd_out_A\\\" = move:A or actuation_response:A => motor_cmd:A;\n\t\t\tEvent {\n\t\t\t\tid = \\\"loa_event\\\"\n\t\t\t\tprobability = 1.0e-8\n\t\t\t\tcomment = \\\"loss of availability of the FlightControl\\\"\n\t\t\t\tdescription = \\\"LOA\\\"\n\t\t\t}\n\t\t\tEvent {\n\t\t\t\tid = \\\"ued_event\\\"\n\t\t\t\tprobability = 1.0e-9\n\t\t\t\tcomment = \\\"undetected erroneous data of the FlightControl\\\"\n\t\t\t\tdescription = \\\"UED\\\"\n\t\t\t}\n\t\t\tSafetyRel \\\"motor_out_LOA\\\" = happens(\\\"loa_event\\\") or actuation_response:A or move:A => motor_cmd:A;\n\t\t\tSafetyRel \\\"motor_out_UED\\\" = happens(\\\"ued_event\\\") or actuation_response:I or move:I => motor_cmd:I;\n\t\t**}"
              }
            ]
          },
          {
            "name": "GNC::GNC",
            "localName": "GNC",
            "kind": "ComponentType",
            "category": "system",
            "features": [
              {
                "name": "constellation",
                "kind": "DataPort",
                "classifier": "Data_Types::Constellation",
                "direction": "in"
              },
              {
                "name": "satellite0_pos",
                "kind": "DataPort",
                "classifier": "Data_Types::Position.impl",
                "direction": "in"
              },
              {
                "name": "satellite1_pos",
                "kind": "DataPort",
                "classifier": "Data_Types::Position.impl",
                "direction": "in"
              },
              {
                "name": "launch_pos",
                "kind": "DataPort",
                "classifier": "Data_Types::Position.impl",
                "direction": "in"
              },
              {
                "name": "navigation_cmd",
                "kind": "DataPort",
                "classifier": "Base_Types::Boolean",
                "direction": "in"
              },
              {
                "name": "navigation_dest_pos",
                "kind": "DataPort",
                "classifier": "Data_Types::Position.impl",
                "direction": "in"
              },
              {
                "name": "fc_actuation_response",
                "kind": "DataPort",
                "classifier": "Base_Types::Boolean",
                "direction": "in"
              },
              {
                "name": "gps_health_status",
                "kind": "DataPort",
                "classifier": "Base_Types::Boolean",
                "direction": "out"
              },
              {
                "name": "probe_constellation",
                "kind": "DataPort",
                "classifier": "Data_Types::Constellation",
                "direction": "out"
              },
              {
                "name": "imu_health_status",
                "kind": "DataPort",
                "classifier": "Base_Types::Boolean",
                "direction": "out"
              },
              {
                "name": "probe_launch_pos",
                "kind": "DataPort",
                "classifier": "Data_Types::Position.impl",
                "direction": "out"
              },
              {
                "name": "navigation_cur_pos",
                "kind": "DataPort",
                "classifier": "Data_Types::Position.impl",
                "direction": "out"
              },
              {
                "name": "navigation_probe_dest_pos",
                "kind": "DataPort",
                "classifier": "Data_Types::Position.impl",
                "direction": "out"
              },
              {
                "name": "fc_motor_cmd",
                "kind": "DataPort",
                "classifier": "Base_Types::Boolean",
                "direction": "out"
              }
            ]
          },
          {
            "packageName": "GNC",
            "name": "GNC::GNC.Impl",
            "localName": "GNC.Impl",
            "kind": "ComponentImplementation",
            "category": "system",
            "subcomponents": [
              {
                "name": "gps",
                "kind": "Subcomponent",
                "category": "system",
                "classifier": "GNC::GPS",
                "properties": [
                  {
                    "name": "CASE_Consolidated_Properties::insideTrustedBoundary",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "BooleanLiteral",
                      "value": true
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::componentType",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "EnumerationLiteral",
                      "value": "Hybrid"
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::pedigree",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "EnumerationLiteral",
                      "value": "COTS"
                    }
                  }
                ]
              },
              {
                "name": "imu",
                "kind": "Subcomponent",
                "category": "system",
                "classifier": "GNC::IMU",
                "properties": [
                  {
                    "name": "CASE_Consolidated_Properties::insideTrustedBoundary",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "BooleanLiteral",
                      "value": true
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::componentType",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "EnumerationLiteral",
                      "value": "Hybrid"
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::pedigree",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "EnumerationLiteral",
                      "value": "InternallyDeveloped"
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::supplyChainSecurity",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "IntegerLiteral",
                      "value": 7,
                      "unit": null
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::physicalAccessControl",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "IntegerLiteral",
                      "value": 7,
                      "unit": null
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::systemAccessControl",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "IntegerLiteral",
                      "value": 7,
                      "unit": null
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::secureBoot",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "IntegerLiteral",
                      "value": 7,
                      "unit": null
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::memoryProtection",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "IntegerLiteral",
                      "value": 7,
                      "unit": null
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::remoteAttestation",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "IntegerLiteral",
                      "value": 7,
                      "unit": null
                    }
                  }
                ]
              },
              {
                "name": "positionEstimator",
                "kind": "Subcomponent",
                "category": "system",
                "classifier": "GNC::PositionEstimator",
                "properties": [
                  {
                    "name": "CASE_Consolidated_Properties::canReceiveSWUpdate",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "BooleanLiteral",
                      "value": true
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::componentType",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "EnumerationLiteral",
                      "value": "Software"
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::hasSensitiveInfo",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "BooleanLiteral",
                      "value": true
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::insideTrustedBoundary",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "BooleanLiteral",
                      "value": true
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::pedigree",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "EnumerationLiteral",
                      "value": "COTS"
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::adversariallyTestedForTrojanOrLogicBomb",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "IntegerLiteral",
                      "value": 0,
                      "unit": null
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::antiJamming",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "IntegerLiteral",
                      "value": 7,
                      "unit": null
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::dosProtection",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "IntegerLiteral",
                      "value": 7,
                      "unit": null
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::failSafe",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "IntegerLiteral",
                      "value": 7,
                      "unit": null
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::heterogeneity",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "IntegerLiteral",
                      "value": 7,
                      "unit": null
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::inputValidation",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "IntegerLiteral",
                      "value": 7,
                      "unit": null
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::logging",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "IntegerLiteral",
                      "value": 7,
                      "unit": null
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::memoryProtection",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "IntegerLiteral",
                      "value": 7,
                      "unit": null
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::physicalAccessControl",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "IntegerLiteral",
                      "value": 7,
                      "unit": null
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::remoteAttestation",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "IntegerLiteral",
                      "value": 7,
                      "unit": null
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::resourceAvailability",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "IntegerLiteral",
                      "value": 7,
                      "unit": null
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::secureBoot",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "IntegerLiteral",
                      "value": 7,
                      "unit": null
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::staticCodeAnalysis",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "IntegerLiteral",
                      "value": 7,
                      "unit": null
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::strongCryptoAlgorithms",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "IntegerLiteral",
                      "value": 7,
                      "unit": null
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::supplyChainSecurity",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "IntegerLiteral",
                      "value": 7,
                      "unit": null
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::systemAccessControl",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "IntegerLiteral",
                      "value": 7,
                      "unit": null
                    }
                  }
                ]
              },
              {
                "name": "navigation",
                "kind": "Subcomponent",
                "category": "system",
                "classifier": "GNC::Navigation",
                "properties": [
                  {
                    "name": "CASE_Consolidated_Properties::canReceiveSWUpdate",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "BooleanLiteral",
                      "value": true
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::componentType",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "EnumerationLiteral",
                      "value": "Software"
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::hasSensitiveInfo",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "BooleanLiteral",
                      "value": true
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::insideTrustedBoundary",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "BooleanLiteral",
                      "value": true
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::pedigree",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "EnumerationLiteral",
                      "value": "InternallyDeveloped"
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::inputValidation",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "IntegerLiteral",
                      "value": 7,
                      "unit": null
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::memoryProtection",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "IntegerLiteral",
                      "value": 7,
                      "unit": null
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::physicalAccessControl",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "IntegerLiteral",
                      "value": 7,
                      "unit": null
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::remoteAttestation",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "IntegerLiteral",
                      "value": 7,
                      "unit": null
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::secureBoot",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "IntegerLiteral",
                      "value": 7,
                      "unit": null
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::supplyChainSecurity",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "IntegerLiteral",
                      "value": 7,
                      "unit": null
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::systemAccessControl",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "IntegerLiteral",
                      "value": 7,
                      "unit": null
                    }
                  }
                ]
              },
              {
                "name": "fc",
                "kind": "Subcomponent",
                "category": "system",
                "classifier": "GNC::FlightControl",
                "properties": [
                  {
                    "name": "CASE_Consolidated_Properties::canReceiveSWUpdate",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "BooleanLiteral",
                      "value": true
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::componentType",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "EnumerationLiteral",
                      "value": "Software"
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::hasSensitiveInfo",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "BooleanLiteral",
                      "value": true
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::insideTrustedBoundary",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "BooleanLiteral",
                      "value": true
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::pedigree",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "EnumerationLiteral",
                      "value": "InternallyDeveloped"
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::memoryProtection",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "IntegerLiteral",
                      "value": 7,
                      "unit": null
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::physicalAccessControl",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "IntegerLiteral",
                      "value": 7,
                      "unit": null
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::remoteAttestation",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "IntegerLiteral",
                      "value": 7,
                      "unit": null
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::secureBoot",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "IntegerLiteral",
                      "value": 7,
                      "unit": null
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::supplyChainSecurity",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "IntegerLiteral",
                      "value": 7,
                      "unit": null
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::systemAccessControl",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "IntegerLiteral",
                      "value": 7,
                      "unit": null
                    }
                  }
                ]
              }
            ],
            "connections": [
              {
                "name": "i1",
                "kind": "PortConnection",
                "source": "constellation",
                "destination": "gps.constellation",
                "bidirectional": false,
                "properties": [
                  {
                    "name": "CASE_Consolidated_Properties::connectionType",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "EnumerationLiteral",
                      "value": "Trusted"
                    }
                  }
                ]
              },
              {
                "name": "i2",
                "kind": "PortConnection",
                "source": "satellite0_pos",
                "destination": "gps.satellite0_pos",
                "bidirectional": false,
                "properties": [
                  {
                    "name": "CASE_Consolidated_Properties::connectionType",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "EnumerationLiteral",
                      "value": "Trusted"
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::deviceAuthentication",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "IntegerLiteral",
                      "value": 7,
                      "unit": null
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::sessionAuthenticity",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "IntegerLiteral",
                      "value": 7,
                      "unit": null
                    }
                  }
                ]
              },
              {
                "name": "i3",
                "kind": "PortConnection",
                "source": "satellite1_pos",
                "destination": "gps.satellite1_pos",
                "bidirectional": false,
                "properties": [
                  {
                    "name": "CASE_Consolidated_Properties::connectionType",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "EnumerationLiteral",
                      "value": "Trusted"
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::deviceAuthentication",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "IntegerLiteral",
                      "value": 7,
                      "unit": null
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::sessionAuthenticity",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "IntegerLiteral",
                      "value": 7,
                      "unit": null
                    }
                  }
                ]
              },
              {
                "name": "i4",
                "kind": "PortConnection",
                "source": "launch_pos",
                "destination": "imu.launch_pos",
                "bidirectional": false,
                "properties": [
                  {
                    "name": "CASE_Consolidated_Properties::connectionType",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "EnumerationLiteral",
                      "value": "Trusted"
                    }
                  }
                ]
              },
              {
                "name": "i5",
                "kind": "PortConnection",
                "source": "gps.gps_pos",
                "destination": "positionEstimator.gps_pos",
                "bidirectional": false,
                "properties": [
                  {
                    "name": "CASE_Consolidated_Properties::connectionType",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "EnumerationLiteral",
                      "value": "Trusted"
                    }
                  }
                ]
              },
              {
                "name": "i6",
                "kind": "PortConnection",
                "source": "gps.health_status",
                "destination": "gps_health_status",
                "bidirectional": false,
                "properties": [
                  {
                    "name": "CASE_Consolidated_Properties::connectionType",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "EnumerationLiteral",
                      "value": "Trusted"
                    }
                  }
                ]
              },
              {
                "name": "i7",
                "kind": "PortConnection",
                "source": "gps.probe_constellation",
                "destination": "probe_constellation",
                "bidirectional": false,
                "properties": [
                  {
                    "name": "CASE_Consolidated_Properties::connectionType",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "EnumerationLiteral",
                      "value": "Trusted"
                    }
                  }
                ]
              },
              {
                "name": "i8",
                "kind": "PortConnection",
                "source": "imu.imu_pos",
                "destination": "positionEstimator.imu_pos",
                "bidirectional": false,
                "properties": [
                  {
                    "name": "CASE_Consolidated_Properties::connectionType",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "EnumerationLiteral",
                      "value": "Trusted"
                    }
                  }
                ]
              },
              {
                "name": "i9",
                "kind": "PortConnection",
                "source": "imu.health_status",
                "destination": "imu_health_status",
                "bidirectional": false,
                "properties": [
                  {
                    "name": "CASE_Consolidated_Properties::connectionType",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "EnumerationLiteral",
                      "value": "Trusted"
                    }
                  }
                ]
              },
              {
                "name": "i10",
                "kind": "PortConnection",
                "source": "imu.probe_launch_pos",
                "destination": "probe_launch_pos",
                "bidirectional": false,
                "properties": [
                  {
                    "name": "CASE_Consolidated_Properties::connectionType",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "EnumerationLiteral",
                      "value": "Trusted"
                    }
                  }
                ]
              },
              {
                "name": "c1",
                "kind": "PortConnection",
                "source": "positionEstimator.est_pos",
                "destination": "navigation.est_pos",
                "bidirectional": false,
                "properties": [
                  {
                    "name": "CASE_Consolidated_Properties::connectionType",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "EnumerationLiteral",
                      "value": "Trusted"
                    }
                  },
                  {
                    "name": "CASE_Consolidated_Properties::encryptedTransmission",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "IntegerLiteral",
                      "value": 6,
                      "unit": null
                    }
                  }
                ]
              },
              {
                "name": "c2",
                "kind": "PortConnection",
                "source": "navigation.move",
                "destination": "fc.move",
                "bidirectional": false,
                "properties": [
                  {
                    "name": "CASE_Consolidated_Properties::connectionType",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "EnumerationLiteral",
                      "value": "Trusted"
                    }
                  }
                ]
              },
              {
                "name": "c3",
                "kind": "PortConnection",
                "source": "fc.fc_state",
                "destination": "navigation.flight_control_state",
                "bidirectional": false,
                "properties": [
                  {
                    "name": "CASE_Consolidated_Properties::connectionType",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "EnumerationLiteral",
                      "value": "Trusted"
                    }
                  }
                ]
              },
              {
                "name": "c24",
                "kind": "PortConnection",
                "source": "navigation.pos_act_out",
                "destination": "positionEstimator.pos_act_in",
                "bidirectional": false,
                "properties": [
                  {
                    "name": "CASE_Consolidated_Properties::connectionType",
                    "kind": "PropertyAssociation",
                    "value": {
                      "kind": "EnumerationLiteral",
                      "value": "Trusted"
                    }
                  }
                ]
              },
              {
                "name": "cc1",
                "kind": "PortConnection",
                "source": "navigation.cur_pos",
                "destination": "navigation_cur_pos",
                "bidirectional": false
              },
              {
                "name": "cc2",
                "kind": "PortConnection",
                "source": "navigation_cmd",
                "destination": "navigation.cmd",
                "bidirectional": false
              },
              {
                "name": "cc3",
                "kind": "PortConnection",
                "source": "navigation_dest_pos",
                "destination": "navigation.dest_pos",
                "bidirectional": false
              },
              {
                "name": "cc4",
                "kind": "PortConnection",
                "source": "navigation.probe_dest_pos",
                "destination": "navigation_probe_dest_pos",
                "bidirectional": false
              },
              {
                "name": "cc5",
                "kind": "PortConnection",
                "source": "fc.motor_cmd",
                "destination": "fc_motor_cmd",
                "bidirectional": false
              },
              {
                "name": "cc6",
                "kind": "PortConnection",
                "source": "fc_actuation_response",
                "destination": "fc.actuation_response",
                "bidirectional": false
              }
            ]
          }
        ]
      }
    },
    {
      "name": "Timing_Properties",
      "kind": "PropertySet",
      "properties": [
        {
          "name": "Timing_Properties::Activate_Deadline",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "thread"
          ]
        },
        {
          "name": "Timing_Properties::Activate_Execution_Time",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "RangeType",
            "numberType": {
              "kind": "AadlInteger"
            }
          },
          "appliesTo": [
            "thread"
          ]
        },
        {
          "name": "Timing_Properties::Compute_Deadline",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "thread",
            "device",
            "subprogram",
            "subprogram access",
            "event port",
            "event data port"
          ]
        },
        {
          "name": "Timing_Properties::Compute_Execution_Time",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "RangeType",
            "numberType": {
              "kind": "AadlInteger"
            }
          },
          "appliesTo": [
            "thread",
            "device",
            "subprogram",
            "event port",
            "event data port"
          ]
        },
        {
          "name": "Timing_Properties::Client_Subprogram_Execution_Time",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "RangeType",
            "numberType": {
              "kind": "AadlInteger"
            }
          },
          "appliesTo": [
            "subprogram"
          ]
        },
        {
          "name": "Timing_Properties::Deactivate_Deadline",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "thread"
          ]
        },
        {
          "name": "Timing_Properties::Deactivate_Execution_Time",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "RangeType",
            "numberType": {
              "kind": "AadlInteger"
            }
          },
          "appliesTo": [
            "thread"
          ]
        },
        {
          "name": "Timing_Properties::Deadline",
          "kind": "Property",
          "inherit": true,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "thread",
            "thread group",
            "process",
            "system",
            "device",
            "virtual processor"
          ]
        },
        {
          "name": "Timing_Properties::First_Dispatch_Time",
          "kind": "Property",
          "inherit": true,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "thread",
            "thread group"
          ]
        },
        {
          "name": "Timing_Properties::Dispatch_Jitter",
          "kind": "Property",
          "inherit": true,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "thread",
            "thread group"
          ]
        },
        {
          "name": "Timing_Properties::Dispatch_Offset",
          "kind": "Property",
          "inherit": true,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "thread"
          ]
        },
        {
          "name": "Timing_Properties::Execution_Time",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "virtual processor"
          ]
        },
        {
          "name": "Timing_Properties::Finalize_Deadline",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "thread"
          ]
        },
        {
          "name": "Timing_Properties::Finalize_Execution_Time",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "RangeType",
            "numberType": {
              "kind": "AadlInteger"
            }
          },
          "appliesTo": [
            "thread"
          ]
        },
        {
          "name": "Timing_Properties::Initialize_Deadline",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "thread"
          ]
        },
        {
          "name": "Timing_Properties::Initialize_Execution_Time",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "RangeType",
            "numberType": {
              "kind": "AadlInteger"
            }
          },
          "appliesTo": [
            "thread"
          ]
        },
        {
          "name": "Timing_Properties::Load_Deadline",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "process",
            "system"
          ]
        },
        {
          "name": "Timing_Properties::Load_Time",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "RangeType",
            "numberType": {
              "kind": "AadlInteger"
            }
          },
          "appliesTo": [
            "process",
            "system"
          ]
        },
        {
          "name": "Timing_Properties::Processor_Capacity",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlReal"
          },
          "appliesTo": [
            "processor",
            "virtual processor",
            "system"
          ]
        },
        {
          "name": "Timing_Properties::Period",
          "kind": "Property",
          "inherit": true,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "thread",
            "thread group",
            "process",
            "system",
            "device",
            "virtual processor",
            "virtual bus",
            "bus"
          ]
        },
        {
          "name": "Timing_Properties::Recover_Deadline",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "thread"
          ]
        },
        {
          "name": "Timing_Properties::Recover_Execution_Time",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "RangeType",
            "numberType": {
              "kind": "AadlInteger"
            }
          },
          "appliesTo": [
            "thread"
          ]
        },
        {
          "name": "Timing_Properties::Reference_Time",
          "kind": "Property",
          "inherit": true,
          "propertyType": {
            "kind": "ReferenceType",
            "references": [
              "device",
              "processor",
              "bus",
              "system",
              "abstract"
            ]
          },
          "appliesTo": [
            "device",
            "processor",
            "bus",
            "system",
            "memory",
            "virtual bus",
            "virtual processor"
          ]
        },
        {
          "name": "Timing_Properties::Startup_Deadline",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "processor",
            "virtual processor",
            "process",
            "system"
          ]
        },
        {
          "name": "Timing_Properties::Startup_Execution_Time",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "RangeType",
            "numberType": {
              "kind": "AadlInteger"
            }
          },
          "appliesTo": [
            "virtual processor",
            "processor",
            "process",
            "system"
          ]
        },
        {
          "name": "Timing_Properties::Clock_Jitter",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "processor",
            "device",
            "system"
          ]
        },
        {
          "name": "Timing_Properties::Clock_Period",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "processor",
            "device",
            "system"
          ]
        },
        {
          "name": "Timing_Properties::Clock_Period_Range",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "RangeType",
            "numberType": {
              "kind": "AadlInteger"
            }
          },
          "appliesTo": [
            "processor",
            "device",
            "system"
          ]
        },
        {
          "name": "Timing_Properties::Process_Swap_Execution_Time",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "RangeType",
            "numberType": {
              "kind": "AadlInteger"
            }
          },
          "appliesTo": [
            "processor",
            "virtual processor",
            "system"
          ]
        },
        {
          "name": "Timing_Properties::Reference_Processor",
          "kind": "Property",
          "inherit": true,
          "propertyType": {
            "kind": "ClassifierType",
            "classifiers": [
              "processor"
            ]
          },
          "appliesTo": [
            "subprogram",
            "subprogram group",
            "thread",
            "thread group",
            "process",
            "device",
            "system"
          ]
        },
        {
          "name": "Timing_Properties::Scheduler_Quantum",
          "kind": "Property",
          "inherit": true,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "processor"
          ]
        },
        {
          "name": "Timing_Properties::Thread_Swap_Execution_Time",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "RangeType",
            "numberType": {
              "kind": "AadlInteger"
            }
          },
          "appliesTo": [
            "processor",
            "system",
            "virtual processor"
          ]
        },
        {
          "name": "Timing_Properties::Frame_Period",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "processor",
            "virtual processor"
          ]
        },
        {
          "name": "Timing_Properties::Slot_Time",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "processor",
            "virtual processor"
          ]
        }
      ]
    },
    {
      "name": "Programming_Properties",
      "kind": "PropertySet",
      "properties": [
        {
          "name": "Programming_Properties::Activate_Entrypoint",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "ClassifierType",
            "classifiers": [
              "subprogram classifier"
            ]
          },
          "appliesTo": [
            "thread",
            "device",
            "processor",
            "virtual processor"
          ]
        },
        {
          "name": "Programming_Properties::Activate_Entrypoint_Call_Sequence",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "ReferenceType",
            "references": [
              "subprogram call sequence"
            ]
          },
          "appliesTo": [
            "thread",
            "device"
          ]
        },
        {
          "name": "Programming_Properties::Activate_Entrypoint_Source_Text",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlString"
          },
          "appliesTo": [
            "thread",
            "device",
            "virtual processor",
            "processor"
          ]
        },
        {
          "name": "Programming_Properties::Compute_Entrypoint",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "ClassifierType",
            "classifiers": [
              "subprogram classifier"
            ]
          },
          "appliesTo": [
            "thread",
            "device",
            "subprogram access",
            "event port",
            "event data port"
          ]
        },
        {
          "name": "Programming_Properties::Compute_Entrypoint_Call_Sequence",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "ReferenceType",
            "references": [
              "subprogram call sequence"
            ]
          },
          "appliesTo": [
            "thread",
            "device",
            "subprogram access",
            "event port",
            "event data port"
          ]
        },
        {
          "name": "Programming_Properties::Compute_Entrypoint_Source_Text",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlString"
          },
          "appliesTo": [
            "thread",
            "device",
            "subprogram access",
            "event port",
            "event data port"
          ]
        },
        {
          "name": "Programming_Properties::Deactivate_Entrypoint",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "ClassifierType",
            "classifiers": [
              "subprogram classifier"
            ]
          },
          "appliesTo": [
            "thread",
            "device"
          ]
        },
        {
          "name": "Programming_Properties::Deactivate_Entrypoint_Call_Sequence",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "ReferenceType",
            "references": [
              "subprogram call sequence"
            ]
          },
          "appliesTo": [
            "thread",
            "device"
          ]
        },
        {
          "name": "Programming_Properties::Deactivate_Entrypoint_Source_Text",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlString"
          },
          "appliesTo": [
            "thread"
          ]
        },
        {
          "name": "Programming_Properties::Finalize_Entrypoint",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "ClassifierType",
            "classifiers": [
              "subprogram classifier"
            ]
          },
          "appliesTo": [
            "thread",
            "device"
          ]
        },
        {
          "name": "Programming_Properties::Finalize_Entrypoint_Call_Sequence",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "ReferenceType",
            "references": [
              "subprogram call sequence"
            ]
          },
          "appliesTo": [
            "thread",
            "device"
          ]
        },
        {
          "name": "Programming_Properties::Finalize_Entrypoint_Source_Text",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlString"
          },
          "appliesTo": [
            "thread",
            "device"
          ]
        },
        {
          "name": "Programming_Properties::Initialize_Entrypoint",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "ClassifierType",
            "classifiers": [
              "subprogram classifier"
            ]
          },
          "appliesTo": [
            "thread",
            "device"
          ]
        },
        {
          "name": "Programming_Properties::Initialize_Entrypoint_Call_Sequence",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "ReferenceType",
            "references": [
              "subprogram call sequence"
            ]
          },
          "appliesTo": [
            "thread",
            "device"
          ]
        },
        {
          "name": "Programming_Properties::Initialize_Entrypoint_Source_Text",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlString"
          },
          "appliesTo": [
            "thread",
            "device"
          ]
        },
        {
          "name": "Programming_Properties::Recover_Entrypoint",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "ClassifierType",
            "classifiers": [
              "subprogram classifier"
            ]
          },
          "appliesTo": [
            "thread",
            "device"
          ]
        },
        {
          "name": "Programming_Properties::Recover_Entrypoint_Call_Sequence",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "ReferenceType",
            "references": [
              "subprogram call sequence"
            ]
          },
          "appliesTo": [
            "thread",
            "device"
          ]
        },
        {
          "name": "Programming_Properties::Recover_Entrypoint_Source_Text",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlString"
          },
          "appliesTo": [
            "thread",
            "device"
          ]
        },
        {
          "name": "Programming_Properties::Source_Language",
          "kind": "Property",
          "inherit": true,
          "propertyType": {
            "kind": "ListType",
            "propertyType": "AADL_Project::Supported_Source_Languages"
          },
          "appliesTo": [
            "subprogram",
            "data",
            "thread",
            "thread group",
            "process",
            "system",
            "bus",
            "device",
            "processor",
            "virtual processor",
            "virtual bus"
          ]
        },
        {
          "name": "Programming_Properties::Source_Name",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlString"
          },
          "appliesTo": [
            "data",
            "port",
            "subprogram",
            "parameter",
            "virtual bus",
            "virtual processor"
          ]
        },
        {
          "name": "Programming_Properties::Source_Text",
          "kind": "Property",
          "inherit": true,
          "propertyType": {
            "kind": "ListType",
            "propertyType": {
              "kind": "AadlString"
            }
          },
          "appliesTo": [
            "data",
            "port",
            "subprogram",
            "thread",
            "thread group",
            "process",
            "system",
            "virtual bus",
            "virtual processor",
            "memory",
            "bus",
            "device",
            "processor",
            "parameter",
            "feature group",
            "aadl package"
          ]
        },
        {
          "name": "Programming_Properties::Supported_Source_Language",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "ListType",
            "propertyType": "AADL_Project::Supported_Source_Languages"
          },
          "appliesTo": [
            "processor",
            "virtual processor",
            "system"
          ]
        },
        {
          "name": "Programming_Properties::Type_Source_Name",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlString"
          },
          "appliesTo": [
            "data",
            "port",
            "subprogram"
          ]
        },
        {
          "name": "Programming_Properties::Hardware_Description_Source_Text",
          "kind": "Property",
          "inherit": true,
          "propertyType": {
            "kind": "ListType",
            "propertyType": {
              "kind": "AadlString"
            }
          },
          "appliesTo": [
            "memory",
            "bus",
            "device",
            "processor",
            "system"
          ]
        },
        {
          "name": "Programming_Properties::Hardware_Source_Language",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "EnumerationType",
            "values": [
              "VHDL"
            ]
          },
          "appliesTo": [
            "memory",
            "bus",
            "device",
            "processor",
            "system"
          ]
        },
        {
          "name": "Programming_Properties::Device_Driver",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "ClassifierType",
            "classifiers": [
              "abstract implementation"
            ]
          },
          "appliesTo": [
            "device"
          ]
        }
      ]
    },
    {
      "name": "Thread_Properties",
      "kind": "PropertySet",
      "properties": [
        {
          "name": "Thread_Properties::Dispatch_Protocol",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "EnumerationType",
            "values": [
              "Periodic",
              "Sporadic",
              "Aperiodic",
              "Timed",
              "Hybrid",
              "Background"
            ]
          },
          "appliesTo": [
            "thread",
            "device",
            "virtual processor"
          ]
        },
        {
          "name": "Thread_Properties::Dispatch_Trigger",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "ListType",
            "propertyType": {
              "kind": "ReferenceType",
              "references": [
                "port"
              ]
            }
          },
          "appliesTo": [
            "device",
            "thread"
          ]
        },
        {
          "name": "Thread_Properties::Dispatch_Able",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlBoolean"
          },
          "appliesTo": [
            "thread"
          ]
        },
        {
          "name": "Thread_Properties::POSIX_Scheduling_Policy",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "EnumerationType",
            "values": [
              "SCHED_FIFO",
              "SCHED_RR",
              "SCHED_OTHERS"
            ]
          },
          "appliesTo": [
            "thread",
            "thread group"
          ]
        },
        {
          "name": "Thread_Properties::Priority",
          "kind": "Property",
          "inherit": true,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "thread",
            "thread group",
            "process",
            "system",
            "device",
            "data",
            "data access"
          ]
        },
        {
          "name": "Thread_Properties::Criticality",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "thread",
            "thread group"
          ]
        },
        {
          "name": "Thread_Properties::Time_Slot",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "ListType",
            "propertyType": {
              "kind": "AadlInteger"
            }
          },
          "appliesTo": [
            "thread",
            "thread group",
            "process",
            "virtual processor",
            "system"
          ]
        },
        {
          "name": "Thread_Properties::Concurrency_Control_Protocol",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "EnumerationType",
            "values": [
              "None_Specified",
              "Interrupt_Masking",
              "Maximum_Priority",
              "Priority_Inheritance",
              "Priority_Ceiling",
              "Spin_Lock",
              "Semaphore",
              "Protected_Access"
            ]
          },
          "appliesTo": [
            "data",
            "data access"
          ]
        },
        {
          "name": "Thread_Properties::Urgency",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "port",
            "subprogram"
          ]
        },
        {
          "name": "Thread_Properties::Dequeue_Protocol",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "EnumerationType",
            "values": [
              "OneItem",
              "MultipleItems",
              "AllItems"
            ]
          },
          "appliesTo": [
            "event port",
            "event data port"
          ]
        },
        {
          "name": "Thread_Properties::Dequeued_Items",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "event port",
            "event data port"
          ]
        },
        {
          "name": "Thread_Properties::Mode_Transition_Response",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "EnumerationType",
            "values": [
              "emergency",
              "planned"
            ]
          },
          "appliesTo": [
            "mode transition"
          ]
        },
        {
          "name": "Thread_Properties::Resumption_Policy",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "EnumerationType",
            "values": [
              "restart",
              "resume"
            ]
          },
          "appliesTo": [
            "thread",
            "thread group",
            "process",
            "system",
            "device",
            "processor",
            "memory",
            "bus",
            "system",
            "virtual bus",
            "virtual processor",
            "subprogram"
          ]
        },
        {
          "name": "Thread_Properties::Active_Thread_Handling_Protocol",
          "kind": "Property",
          "inherit": true,
          "propertyType": {
            "kind": "EnumerationType",
            "values": [
              "abort"
            ]
          },
          "appliesTo": [
            "thread",
            "thread group",
            "process",
            "system"
          ]
        },
        {
          "name": "Thread_Properties::Active_Thread_Queue_Handling_Protocol",
          "kind": "Property",
          "inherit": true,
          "propertyType": {
            "kind": "EnumerationType",
            "values": [
              "flush",
              "hold"
            ]
          },
          "appliesTo": [
            "thread",
            "thread group",
            "process",
            "system"
          ]
        },
        {
          "name": "Thread_Properties::Deactivation_Policy",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "EnumerationType",
            "values": [
              "inactive",
              "unload"
            ]
          },
          "appliesTo": [
            "thread",
            "process",
            "virtual processor",
            "processor"
          ]
        },
        {
          "name": "Thread_Properties::Runtime_Protection",
          "kind": "Property",
          "inherit": true,
          "propertyType": {
            "kind": "AadlBoolean"
          },
          "appliesTo": [
            "process",
            "system",
            "virtual processor"
          ]
        },
        {
          "name": "Thread_Properties::Subprogram_Call_Type",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "EnumerationType",
            "values": [
              "Synchronous",
              "SemiSynchronous"
            ]
          },
          "appliesTo": [
            "subprogram"
          ]
        },
        {
          "name": "Thread_Properties::Synchronized_Component",
          "kind": "Property",
          "inherit": true,
          "propertyType": {
            "kind": "AadlBoolean"
          },
          "appliesTo": [
            "thread",
            "thread group",
            "process",
            "system"
          ]
        }
      ]
    },
    {
      "name": "AADL_Project",
      "kind": "PropertySet",
      "propertyConstants": [
        {
          "name": "AADL_Project::Supported_Classifier_Equivalence_Matches",
          "kind": "PropertyConstant",
          "propertyType": {
            "kind": "ListType",
            "propertyType": {
              "kind": "ListType",
              "propertyType": {
                "kind": "ClassifierType",
                "classifiers": [
                  "data",
                  "bus",
                  "subprogram",
                  "subprogram group",
                  "feature group"
                ]
              }
            }
          },
          "value": {
            "kind": "ListValue",
            "value": []
          }
        },
        {
          "name": "AADL_Project::Supported_Classifier_Subset_Matches",
          "kind": "PropertyConstant",
          "propertyType": {
            "kind": "ListType",
            "propertyType": {
              "kind": "ListType",
              "propertyType": {
                "kind": "ClassifierType",
                "classifiers": [
                  "data",
                  "bus",
                  "subprogram",
                  "subprogram group"
                ]
              }
            }
          },
          "value": {
            "kind": "ListValue",
            "value": []
          }
        },
        {
          "name": "AADL_Project::Supported_Type_Conversions",
          "kind": "PropertyConstant",
          "propertyType": {
            "kind": "ListType",
            "propertyType": {
              "kind": "ListType",
              "propertyType": {
                "kind": "ClassifierType",
                "classifiers": [
                  "data",
                  "bus",
                  "subprogram",
                  "subprogram group"
                ]
              }
            }
          },
          "value": {
            "kind": "ListValue",
            "value": []
          }
        },
        {
          "name": "AADL_Project::Supported_Classifier_Complement_Matches",
          "kind": "PropertyConstant",
          "propertyType": {
            "kind": "ListType",
            "propertyType": {
              "kind": "ListType",
              "propertyType": {
                "kind": "ClassifierType",
                "classifiers": [
                  "feature group"
                ]
              }
            }
          },
          "value": {
            "kind": "ListValue",
            "value": []
          }
        },
        {
          "name": "AADL_Project::Max_Aadlinteger",
          "kind": "PropertyConstant",
          "propertyType": {
            "kind": "AadlInteger"
          },
          "value": {
            "kind": "IntegerLiteral",
            "value": 4294967296,
            "unit": null
          }
        },
        {
          "name": "AADL_Project::Max_Target_Integer",
          "kind": "PropertyConstant",
          "propertyType": {
            "kind": "AadlInteger"
          },
          "value": {
            "kind": "IntegerLiteral",
            "value": 4294967296,
            "unit": null
          }
        },
        {
          "name": "AADL_Project::Max_Base_Address",
          "kind": "PropertyConstant",
          "propertyType": {
            "kind": "AadlInteger"
          },
          "value": {
            "kind": "IntegerLiteral",
            "value": 4294967296,
            "unit": null
          }
        },
        {
          "name": "AADL_Project::Max_Memory_Size",
          "kind": "PropertyConstant",
          "propertyType": {
            "kind": "AadlInteger"
          },
          "value": {
            "kind": "IntegerLiteral",
            "value": 4294967296,
            "unit": "Bytes"
          }
        },
        {
          "name": "AADL_Project::Max_Queue_Size",
          "kind": "PropertyConstant",
          "propertyType": {
            "kind": "AadlInteger"
          },
          "value": {
            "kind": "IntegerLiteral",
            "value": 512,
            "unit": null
          }
        },
        {
          "name": "AADL_Project::Max_Thread_Limit",
          "kind": "PropertyConstant",
          "propertyType": {
            "kind": "AadlInteger"
          },
          "value": {
            "kind": "IntegerLiteral",
            "value": 32,
            "unit": null
          }
        },
        {
          "name": "AADL_Project::Max_Time",
          "kind": "PropertyConstant",
          "propertyType": {
            "kind": "AadlInteger"
          },
          "value": {
            "kind": "IntegerLiteral",
            "value": 1000,
            "unit": "hr"
          }
        },
        {
          "name": "AADL_Project::Max_Urgency",
          "kind": "PropertyConstant",
          "propertyType": {
            "kind": "AadlInteger"
          },
          "value": {
            "kind": "IntegerLiteral",
            "value": 12,
            "unit": null
          }
        },
        {
          "name": "AADL_Project::Max_Byte_Count",
          "kind": "PropertyConstant",
          "propertyType": {
            "kind": "AadlInteger"
          },
          "value": {
            "kind": "IntegerLiteral",
            "value": 4294967296,
            "unit": null
          }
        },
        {
          "name": "AADL_Project::Max_Word_Space",
          "kind": "PropertyConstant",
          "propertyType": {
            "kind": "AadlInteger"
          },
          "value": {
            "kind": "IntegerLiteral",
            "value": 64,
            "unit": null
          }
        },
        {
          "name": "AADL_Project::Max_Volume",
          "kind": "PropertyConstant",
          "propertyType": {
            "kind": "AadlInteger"
          },
          "value": {
            "kind": "IntegerLiteral",
            "value": 1000,
            "unit": "GBytesps"
          }
        }
      ],
      "propertyTypes": [
        {
          "name": "AADL_Project::Supported_Active_Thread_Handling_Protocols",
          "kind": "PropertyType",
          "type": {
            "kind": "EnumerationType",
            "values": [
              "abort"
            ]
          }
        },
        {
          "name": "AADL_Project::Supported_Connection_Patterns",
          "kind": "PropertyType",
          "type": {
            "kind": "EnumerationType",
            "values": [
              "One_To_One",
              "All_To_All",
              "One_To_All",
              "All_To_One",
              "Next",
              "Previous",
              "Cyclic_Next",
              "Cyclic_Previous",
              "Odd_To_Odd",
              "Even_To_Even",
              "Next_Next",
              "Cyclic_Next_Next",
              "Previous_Previous",
              "Cyclic_Previous_Previous"
            ]
          }
        },
        {
          "name": "AADL_Project::Supported_Concurrency_Control_Protocols",
          "kind": "PropertyType",
          "type": {
            "kind": "EnumerationType",
            "values": [
              "None_Specified",
              "Interrupt_Masking",
              "Maximum_Priority",
              "Priority_Inheritance",
              "Priority_Ceiling",
              "Spin_Lock",
              "Semaphore",
              "Protected_Access"
            ]
          }
        },
        {
          "name": "AADL_Project::Supported_Dispatch_Protocols",
          "kind": "PropertyType",
          "type": {
            "kind": "EnumerationType",
            "values": [
              "Periodic",
              "Sporadic",
              "Aperiodic",
              "Timed",
              "Hybrid",
              "Background"
            ]
          }
        },
        {
          "name": "AADL_Project::Supported_Queue_Processing_Protocols",
          "kind": "PropertyType",
          "type": {
            "kind": "EnumerationType",
            "values": [
              "Fifo"
            ]
          }
        },
        {
          "name": "AADL_Project::Supported_Hardware_Source_Languages",
          "kind": "PropertyType",
          "type": {
            "kind": "EnumerationType",
            "values": [
              "VHDL"
            ]
          }
        },
        {
          "name": "AADL_Project::Supported_Connection_QoS",
          "kind": "PropertyType",
          "type": {
            "kind": "EnumerationType",
            "values": [
              "GuaranteedDelivery",
              "OrderedDelivery",
              "SecureDelivery"
            ]
          }
        },
        {
          "name": "AADL_Project::Supported_Scheduling_Protocols",
          "kind": "PropertyType",
          "type": {
            "kind": "EnumerationType",
            "values": [
              "Static",
              "Round_Robin_Protocol",
              "POSIX_1003_HIGHEST_PRIORITY_FIRST_PROTOCOL",
              "FixedTimeline",
              "Cooperative",
              "RMS",
              "DMS",
              "EDF",
              "SporadicServer",
              "SlackServer",
              "ARINC653"
            ]
          }
        },
        {
          "name": "AADL_Project::Supported_Source_Languages",
          "kind": "PropertyType",
          "type": {
            "kind": "EnumerationType",
            "values": [
              "Ada95",
              "Ada2005",
              "C",
              "Java",
              "Simulink_6_5",
              "SCADE"
            ]
          }
        },
        {
          "name": "AADL_Project::Supported_Distributions",
          "kind": "PropertyType",
          "type": {
            "kind": "EnumerationType",
            "values": [
              "Fixed",
              "Poisson"
            ]
          }
        },
        {
          "name": "AADL_Project::Supported_Classifier_Substitutions",
          "kind": "PropertyType",
          "type": {
            "kind": "EnumerationType",
            "values": [
              "Classifier_Match",
              "Type_Extension",
              "Signature_Match"
            ]
          }
        },
        {
          "name": "AADL_Project::Time",
          "kind": "PropertyType",
          "type": {
            "kind": "AadlInteger"
          }
        },
        {
          "name": "AADL_Project::Time_Range",
          "kind": "PropertyType",
          "type": {
            "kind": "RangeType",
            "numberType": {
              "kind": "AadlInteger"
            }
          }
        },
        {
          "name": "AADL_Project::Size",
          "kind": "PropertyType",
          "type": {
            "kind": "AadlInteger"
          }
        },
        {
          "name": "AADL_Project::Size_Range",
          "kind": "PropertyType",
          "type": {
            "kind": "RangeType",
            "numberType": {
              "kind": "AadlInteger"
            }
          }
        },
        {
          "name": "AADL_Project::Size_Units",
          "kind": "PropertyType",
          "type": {
            "kind": "EnumerationType",
            "values": [
              "bits",
              "Bytes",
              "KByte",
              "MByte",
              "GByte",
              "TByte"
            ]
          }
        },
        {
          "name": "AADL_Project::Time_Units",
          "kind": "PropertyType",
          "type": {
            "kind": "EnumerationType",
            "values": [
              "ps",
              "ns",
              "us",
              "ms",
              "sec",
              "min",
              "hr"
            ]
          }
        },
        {
          "name": "AADL_Project::Data_Rate_Units",
          "kind": "PropertyType",
          "type": {
            "kind": "EnumerationType",
            "values": [
              "bitsps",
              "Bytesps",
              "KBytesps",
              "MBytesps",
              "GBytesps"
            ]
          }
        },
        {
          "name": "AADL_Project::Data_Volume_Units",
          "kind": "PropertyType",
          "type": {
            "kind": "EnumerationType",
            "values": [
              "bitsps",
              "Bytesps",
              "KBytesps",
              "MBytesps",
              "GBytesps"
            ]
          }
        },
        {
          "name": "AADL_Project::Data_Volume",
          "kind": "PropertyType",
          "type": {
            "kind": "AadlInteger"
          }
        },
        {
          "name": "AADL_Project::Processor_Speed_Units",
          "kind": "PropertyType",
          "type": {
            "kind": "EnumerationType",
            "values": [
              "KIPS",
              "MIPS",
              "GIPS"
            ]
          }
        }
      ]
    },
    {
      "name": "Communication_Properties",
      "kind": "PropertySet",
      "properties": [
        {
          "name": "Communication_Properties::Fan_Out_Policy",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "EnumerationType",
            "values": [
              "Broadcast",
              "RoundRobin",
              "Selective",
              "OnDemand"
            ]
          },
          "appliesTo": [
            "feature"
          ]
        },
        {
          "name": "Communication_Properties::Connection_Pattern",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "ListType",
            "propertyType": {
              "kind": "ListType",
              "propertyType": "AADL_Project::Supported_Connection_Patterns"
            }
          },
          "appliesTo": [
            "connection"
          ]
        },
        {
          "name": "Communication_Properties::Connection_Set",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "ListType",
            "propertyType": "Communication_Properties::Connection_Pair"
          },
          "appliesTo": [
            "connection"
          ]
        },
        {
          "name": "Communication_Properties::Overflow_Handling_Protocol",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "EnumerationType",
            "values": [
              "DropOldest",
              "DropNewest",
              "Error"
            ]
          },
          "appliesTo": [
            "event port",
            "event data port",
            "subprogram access"
          ]
        },
        {
          "name": "Communication_Properties::Queue_Processing_Protocol",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "EnumerationType",
            "values": [
              "Fifo"
            ]
          },
          "appliesTo": [
            "event port",
            "event data port",
            "subprogram access"
          ]
        },
        {
          "name": "Communication_Properties::Queue_Size",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "event port",
            "event data port",
            "subprogram access"
          ]
        },
        {
          "name": "Communication_Properties::Required_Connection",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlBoolean"
          },
          "appliesTo": [
            "feature"
          ]
        },
        {
          "name": "Communication_Properties::Timing",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "EnumerationType",
            "values": [
              "sampled",
              "immediate",
              "delayed"
            ]
          },
          "appliesTo": [
            "port connection"
          ]
        },
        {
          "name": "Communication_Properties::Transmission_Type",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "EnumerationType",
            "values": [
              "push",
              "pull"
            ]
          },
          "appliesTo": [
            "feature",
            "connection",
            "bus",
            "virtual bus"
          ]
        },
        {
          "name": "Communication_Properties::Input_Rate",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "RecordType",
            "fields": [
              {
                "name": "Value_Range",
                "propertyType": {
                  "kind": "RangeType",
                  "numberType": {
                    "kind": "AadlReal"
                  }
                }
              },
              {
                "name": "Rate_Unit",
                "propertyType": {
                  "kind": "EnumerationType",
                  "values": [
                    "PerSecond",
                    "PerDispatch"
                  ]
                }
              },
              {
                "name": "Rate_Distribution",
                "propertyType": {
                  "kind": "AADL_Project::Supported_Distributions"
                }
              }
            ]
          },
          "appliesTo": [
            "feature"
          ]
        },
        {
          "name": "Communication_Properties::Input_Time",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "ListType",
            "propertyType": "Communication_Properties::IO_Time_Spec"
          },
          "appliesTo": [
            "feature"
          ]
        },
        {
          "name": "Communication_Properties::Output_Rate",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "RecordType",
            "fields": [
              {
                "name": "Value_Range",
                "propertyType": {
                  "kind": "RangeType",
                  "numberType": {
                    "kind": "AadlReal"
                  }
                }
              },
              {
                "name": "Rate_Unit",
                "propertyType": {
                  "kind": "EnumerationType",
                  "values": [
                    "PerSecond",
                    "PerDispatch"
                  ]
                }
              },
              {
                "name": "Rate_Distribution",
                "propertyType": {
                  "kind": "AADL_Project::Supported_Distributions"
                }
              }
            ]
          },
          "appliesTo": [
            "feature"
          ]
        },
        {
          "name": "Communication_Properties::Output_Time",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "ListType",
            "propertyType": "Communication_Properties::IO_Time_Spec"
          },
          "appliesTo": [
            "feature"
          ]
        },
        {
          "name": "Communication_Properties::Subprogram_Call_Rate",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "RecordType",
            "fields": [
              {
                "name": "Value_Range",
                "propertyType": {
                  "kind": "RangeType",
                  "numberType": {
                    "kind": "AadlReal"
                  }
                }
              },
              {
                "name": "Rate_Unit",
                "propertyType": {
                  "kind": "EnumerationType",
                  "values": [
                    "PerSecond",
                    "PerDispatch"
                  ]
                }
              },
              {
                "name": "Rate_Distribution",
                "propertyType": {
                  "kind": "AADL_Project::Supported_Distributions"
                }
              }
            ]
          },
          "appliesTo": [
            "subprogram access"
          ]
        },
        {
          "name": "Communication_Properties::Transmission_Time",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "RecordType",
            "fields": [
              {
                "name": "Fixed",
                "propertyType": {
                  "kind": "AADL_Project::Time_Range"
                }
              },
              {
                "name": "PerByte",
                "propertyType": {
                  "kind": "AADL_Project::Time_Range"
                }
              }
            ]
          },
          "appliesTo": [
            "bus",
            "system",
            "device",
            "processor",
            "memory",
            "virtual bus",
            "virtual processor"
          ]
        },
        {
          "name": "Communication_Properties::Actual_Latency",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "RangeType",
            "numberType": {
              "kind": "AadlInteger"
            }
          },
          "appliesTo": [
            "flow",
            "connection",
            "virtual bus",
            "bus",
            "processor",
            "virtual processor",
            "device",
            "system",
            "feature",
            "memory"
          ]
        },
        {
          "name": "Communication_Properties::Latency",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "RangeType",
            "numberType": {
              "kind": "AadlInteger"
            }
          },
          "appliesTo": [
            "flow",
            "connection",
            "virtual bus",
            "bus",
            "processor",
            "virtual processor",
            "device",
            "system",
            "feature",
            "memory"
          ]
        },
        {
          "name": "Communication_Properties::Data_Rate",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "feature",
            "connection",
            "bus",
            "virtual bus",
            "system",
            "processor",
            "virtual processor",
            "memory",
            "device"
          ]
        }
      ],
      "propertyTypes": [
        {
          "name": "Communication_Properties::Connection_Pair",
          "kind": "PropertyType",
          "type": {
            "kind": "RecordType",
            "fields": [
              {
                "name": "src",
                "propertyType": {
                  "kind": "ListType",
                  "propertyType": {
                    "kind": "AadlInteger"
                  }
                }
              },
              {
                "name": "dst",
                "propertyType": {
                  "kind": "ListType",
                  "propertyType": {
                    "kind": "AadlInteger"
                  }
                }
              }
            ]
          }
        },
        {
          "name": "Communication_Properties::IO_Time_Spec",
          "kind": "PropertyType",
          "type": {
            "kind": "RecordType",
            "fields": [
              {
                "name": "Offset",
                "propertyType": {
                  "kind": "AADL_Project::Time_Range"
                }
              },
              {
                "name": "Time",
                "propertyType": {
                  "kind": "Communication_Properties::IO_Reference_Time"
                }
              }
            ]
          }
        },
        {
          "name": "Communication_Properties::IO_Reference_Time",
          "kind": "PropertyType",
          "type": {
            "kind": "EnumerationType",
            "values": [
              "Dispatch",
              "Start",
              "Completion",
              "Deadline",
              "NoIO",
              "Dynamic"
            ]
          }
        },
        {
          "name": "Communication_Properties::Rate_Spec",
          "kind": "PropertyType",
          "type": {
            "kind": "RecordType",
            "fields": [
              {
                "name": "Value_Range",
                "propertyType": {
                  "kind": "RangeType",
                  "numberType": {
                    "kind": "AadlReal"
                  }
                }
              },
              {
                "name": "Rate_Unit",
                "propertyType": {
                  "kind": "EnumerationType",
                  "values": [
                    "PerSecond",
                    "PerDispatch"
                  ]
                }
              },
              {
                "name": "Rate_Distribution",
                "propertyType": {
                  "kind": "AADL_Project::Supported_Distributions"
                }
              }
            ]
          }
        }
      ]
    },
    {
      "name": "Memory_Properties",
      "kind": "PropertySet",
      "properties": [
        {
          "name": "Memory_Properties::Access_Right",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "EnumerationType",
            "values": [
              "read_only",
              "write_only",
              "read_write",
              "by_method"
            ]
          },
          "appliesTo": [
            "data",
            "bus",
            "data access",
            "bus access"
          ]
        },
        {
          "name": "Memory_Properties::Access_Time",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "RecordType",
            "fields": [
              {
                "name": "First",
                "propertyType": {
                  "kind": "Communication_Properties::IO_Time_Spec"
                }
              },
              {
                "name": "Last",
                "propertyType": {
                  "kind": "Communication_Properties::IO_Time_Spec"
                }
              }
            ]
          },
          "appliesTo": [
            "data access",
            "data"
          ]
        },
        {
          "name": "Memory_Properties::Allowed_Message_Size",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "RangeType",
            "numberType": {
              "kind": "AadlInteger"
            }
          },
          "appliesTo": [
            "bus"
          ]
        },
        {
          "name": "Memory_Properties::Assign_Time",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "RecordType",
            "fields": [
              {
                "name": "Fixed",
                "propertyType": {
                  "kind": "AADL_Project::Time_Range"
                }
              },
              {
                "name": "PerByte",
                "propertyType": {
                  "kind": "AADL_Project::Time_Range"
                }
              }
            ]
          },
          "appliesTo": [
            "processor"
          ]
        },
        {
          "name": "Memory_Properties::Base_Address",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "memory",
            "data",
            "data access",
            "port"
          ]
        },
        {
          "name": "Memory_Properties::Device_Register_Address",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "port",
            "feature group"
          ]
        },
        {
          "name": "Memory_Properties::Read_Time",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "RecordType",
            "fields": [
              {
                "name": "Fixed",
                "propertyType": {
                  "kind": "AADL_Project::Time_Range"
                }
              },
              {
                "name": "PerByte",
                "propertyType": {
                  "kind": "AADL_Project::Time_Range"
                }
              }
            ]
          },
          "appliesTo": [
            "memory"
          ]
        },
        {
          "name": "Memory_Properties::Code_Size",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "data",
            "thread",
            "thread group",
            "process",
            "system",
            "subprogram",
            "processor",
            "virtual processor",
            "virtual bus",
            "device"
          ]
        },
        {
          "name": "Memory_Properties::Data_Size",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "data",
            "feature",
            "subprogram",
            "thread",
            "thread group",
            "process",
            "system",
            "processor",
            "virtual processor",
            "virtual bus",
            "bus",
            "device"
          ]
        },
        {
          "name": "Memory_Properties::Heap_Size",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "thread",
            "subprogram",
            "thread group",
            "process",
            "system",
            "processor",
            "virtual processor",
            "device"
          ]
        },
        {
          "name": "Memory_Properties::Stack_Size",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "thread",
            "subprogram",
            "processor",
            "virtual processor",
            "device"
          ]
        },
        {
          "name": "Memory_Properties::Source_Code_Size",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "data",
            "thread",
            "thread group",
            "process",
            "system",
            "subprogram",
            "processor",
            "virtual processor",
            "device"
          ]
        },
        {
          "name": "Memory_Properties::Source_Data_Size",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "data",
            "feature",
            "subprogram",
            "thread",
            "thread group",
            "process",
            "system",
            "processor",
            "virtual processor",
            "device"
          ]
        },
        {
          "name": "Memory_Properties::Source_Heap_Size",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "thread",
            "subprogram"
          ]
        },
        {
          "name": "Memory_Properties::Source_Stack_Size",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "thread",
            "subprogram",
            "processor",
            "virtual processor",
            "device"
          ]
        },
        {
          "name": "Memory_Properties::Byte_Count",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "memory"
          ]
        },
        {
          "name": "Memory_Properties::Memory_Size",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "memory",
            "system",
            "processor",
            "virtual processor"
          ]
        },
        {
          "name": "Memory_Properties::Word_Size",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "memory"
          ]
        },
        {
          "name": "Memory_Properties::Word_Space",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "memory"
          ]
        },
        {
          "name": "Memory_Properties::Write_Time",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "RecordType",
            "fields": [
              {
                "name": "Fixed",
                "propertyType": {
                  "kind": "AADL_Project::Time_Range"
                }
              },
              {
                "name": "PerByte",
                "propertyType": {
                  "kind": "AADL_Project::Time_Range"
                }
              }
            ]
          },
          "appliesTo": [
            "memory"
          ]
        }
      ],
      "propertyTypes": [
        {
          "name": "Memory_Properties::Access_Rights",
          "kind": "PropertyType",
          "type": {
            "kind": "EnumerationType",
            "values": [
              "read_only",
              "write_only",
              "read_write",
              "by_method"
            ]
          }
        }
      ]
    },
    {
      "name": "Deployment_Properties",
      "kind": "PropertySet",
      "properties": [
        {
          "name": "Deployment_Properties::Allowed_Processor_Binding_Class",
          "kind": "Property",
          "inherit": true,
          "propertyType": {
            "kind": "ListType",
            "propertyType": {
              "kind": "ClassifierType",
              "classifiers": [
                "processor",
                "virtual processor",
                "system",
                "device",
                "abstract"
              ]
            }
          },
          "appliesTo": [
            "thread",
            "thread group",
            "process",
            "system",
            "virtual processor",
            "device"
          ]
        },
        {
          "name": "Deployment_Properties::Allowed_Processor_Binding",
          "kind": "Property",
          "inherit": true,
          "propertyType": {
            "kind": "ListType",
            "propertyType": {
              "kind": "ReferenceType",
              "references": [
                "processor",
                "virtual processor",
                "system",
                "device",
                "abstract"
              ]
            }
          },
          "appliesTo": [
            "thread",
            "thread group",
            "process",
            "system",
            "virtual processor",
            "device"
          ]
        },
        {
          "name": "Deployment_Properties::Actual_Processor_Binding",
          "kind": "Property",
          "inherit": true,
          "propertyType": {
            "kind": "ListType",
            "propertyType": {
              "kind": "ReferenceType",
              "references": [
                "processor",
                "virtual processor",
                "system",
                "device",
                "abstract"
              ]
            }
          },
          "appliesTo": [
            "thread",
            "thread group",
            "process",
            "system",
            "virtual processor",
            "device"
          ]
        },
        {
          "name": "Deployment_Properties::Allowed_Memory_Binding_Class",
          "kind": "Property",
          "inherit": true,
          "propertyType": {
            "kind": "ListType",
            "propertyType": {
              "kind": "ClassifierType",
              "classifiers": [
                "memory",
                "system",
                "processor",
                "virtual processor",
                "abstract"
              ]
            }
          },
          "appliesTo": [
            "thread",
            "thread group",
            "process",
            "system",
            "device",
            "data",
            "data port",
            "event data port",
            "subprogram",
            "subprogram group",
            "processor",
            "virtual processor"
          ]
        },
        {
          "name": "Deployment_Properties::Allowed_Memory_Binding",
          "kind": "Property",
          "inherit": true,
          "propertyType": {
            "kind": "ListType",
            "propertyType": {
              "kind": "ReferenceType",
              "references": [
                "memory",
                "system",
                "processor",
                "virtual processor",
                "abstract"
              ]
            }
          },
          "appliesTo": [
            "memory",
            "thread",
            "thread group",
            "process",
            "system",
            "device",
            "data",
            "data port",
            "event data port",
            "subprogram",
            "subprogram group",
            "processor",
            "virtual processor"
          ]
        },
        {
          "name": "Deployment_Properties::Actual_Memory_Binding",
          "kind": "Property",
          "inherit": true,
          "propertyType": {
            "kind": "ListType",
            "propertyType": {
              "kind": "ReferenceType",
              "references": [
                "memory",
                "system",
                "processor",
                "virtual processor",
                "abstract"
              ]
            }
          },
          "appliesTo": [
            "memory",
            "thread",
            "thread group",
            "process",
            "system",
            "processor",
            "virtual processor",
            "device",
            "data",
            "data port",
            "event data port",
            "subprogram",
            "subprogram group"
          ]
        },
        {
          "name": "Deployment_Properties::Allowed_Connection_Binding_Class",
          "kind": "Property",
          "inherit": true,
          "propertyType": {
            "kind": "ListType",
            "propertyType": {
              "kind": "ClassifierType",
              "classifiers": [
                "processor",
                "virtual processor",
                "bus",
                "virtual bus",
                "device",
                "memory",
                "system",
                "abstract"
              ]
            }
          },
          "appliesTo": [
            "feature",
            "connection",
            "thread",
            "thread group",
            "process",
            "system",
            "virtual bus"
          ]
        },
        {
          "name": "Deployment_Properties::Allowed_Connection_Binding",
          "kind": "Property",
          "inherit": true,
          "propertyType": {
            "kind": "ListType",
            "propertyType": {
              "kind": "ReferenceType",
              "references": [
                "processor",
                "virtual processor",
                "bus",
                "virtual bus",
                "device",
                "memory",
                "system",
                "abstract"
              ]
            }
          },
          "appliesTo": [
            "feature",
            "connection",
            "thread",
            "thread group",
            "process",
            "system",
            "virtual bus"
          ]
        },
        {
          "name": "Deployment_Properties::Actual_Connection_Binding",
          "kind": "Property",
          "inherit": true,
          "propertyType": {
            "kind": "ListType",
            "propertyType": {
              "kind": "ReferenceType",
              "references": [
                "processor",
                "virtual processor",
                "bus",
                "virtual bus",
                "device",
                "memory",
                "system",
                "abstract"
              ]
            }
          },
          "appliesTo": [
            "feature",
            "connection",
            "thread",
            "thread group",
            "process",
            "system",
            "virtual bus"
          ]
        },
        {
          "name": "Deployment_Properties::Actual_Function_Binding",
          "kind": "Property",
          "inherit": true,
          "propertyType": {
            "kind": "ListType",
            "propertyType": {
              "kind": "ReferenceType",
              "references": [
                "processor",
                "virtual processor",
                "bus",
                "virtual bus",
                "device",
                "memory",
                "system",
                "process",
                "thread",
                "feature",
                "abstract"
              ]
            }
          },
          "appliesTo": [
            "subprogram",
            "thread",
            "thread group",
            "process",
            "system",
            "abstract",
            "feature"
          ]
        },
        {
          "name": "Deployment_Properties::Allowed_Subprogram_Call",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "ListType",
            "propertyType": {
              "kind": "ReferenceType",
              "references": [
                "subprogram"
              ]
            }
          },
          "appliesTo": [
            "subprogram access"
          ]
        },
        {
          "name": "Deployment_Properties::Actual_Subprogram_Call",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "ReferenceType",
            "references": [
              "subprogram"
            ]
          },
          "appliesTo": [
            "subprogram access"
          ]
        },
        {
          "name": "Deployment_Properties::Allowed_Subprogram_Call_Binding",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "ListType",
            "propertyType": {
              "kind": "ReferenceType",
              "references": [
                "bus",
                "processor",
                "device"
              ]
            }
          },
          "appliesTo": [
            "subprogram",
            "thread",
            "thread group",
            "process",
            "system"
          ]
        },
        {
          "name": "Deployment_Properties::Actual_Subprogram_Call_Binding",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "ListType",
            "propertyType": {
              "kind": "ReferenceType",
              "references": [
                "bus",
                "processor",
                "memory",
                "device"
              ]
            }
          },
          "appliesTo": [
            "subprogram"
          ]
        },
        {
          "name": "Deployment_Properties::Provided_Virtual_Bus_Class",
          "kind": "Property",
          "inherit": true,
          "propertyType": {
            "kind": "ListType",
            "propertyType": {
              "kind": "ClassifierType",
              "classifiers": [
                "virtual bus"
              ]
            }
          },
          "appliesTo": [
            "bus",
            "virtual bus",
            "processor",
            "virtual processor",
            "device",
            "memory",
            "system"
          ]
        },
        {
          "name": "Deployment_Properties::Required_Virtual_Bus_Class",
          "kind": "Property",
          "inherit": true,
          "propertyType": {
            "kind": "ListType",
            "propertyType": {
              "kind": "ClassifierType",
              "classifiers": [
                "virtual bus"
              ]
            }
          },
          "appliesTo": [
            "virtual bus",
            "connection",
            "port",
            "thread",
            "thread group",
            "process",
            "system",
            "device"
          ]
        },
        {
          "name": "Deployment_Properties::Provided_Connection_Quality_Of_Service",
          "kind": "Property",
          "inherit": true,
          "propertyType": {
            "kind": "ListType",
            "propertyType": "AADL_Project::Supported_Connection_QoS"
          },
          "appliesTo": [
            "bus",
            "virtual bus",
            "processor",
            "virtual processor",
            "system",
            "device",
            "memory"
          ]
        },
        {
          "name": "Deployment_Properties::Required_Connection_Quality_Of_Service",
          "kind": "Property",
          "inherit": true,
          "propertyType": {
            "kind": "ListType",
            "propertyType": "AADL_Project::Supported_Connection_QoS"
          },
          "appliesTo": [
            "port",
            "connection",
            "virtual bus",
            "thread",
            "thread group",
            "process",
            "system",
            "device"
          ]
        },
        {
          "name": "Deployment_Properties::Not_Collocated",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "RecordType",
            "fields": [
              {
                "name": "Targets",
                "propertyType": {
                  "kind": "ListType",
                  "propertyType": {
                    "kind": "ReferenceType",
                    "references": [
                      "data",
                      "thread",
                      "process",
                      "system",
                      "connection"
                    ]
                  }
                }
              },
              {
                "name": "Location",
                "propertyType": {
                  "kind": "ClassifierType",
                  "classifiers": [
                    "processor",
                    "memory",
                    "bus",
                    "system"
                  ]
                }
              }
            ]
          },
          "appliesTo": [
            "process",
            "system"
          ]
        },
        {
          "name": "Deployment_Properties::Collocated",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "RecordType",
            "fields": [
              {
                "name": "Targets",
                "propertyType": {
                  "kind": "ListType",
                  "propertyType": {
                    "kind": "ReferenceType",
                    "references": [
                      "data",
                      "thread",
                      "process",
                      "system",
                      "connection"
                    ]
                  }
                }
              },
              {
                "name": "Location",
                "propertyType": {
                  "kind": "ClassifierType",
                  "classifiers": [
                    "processor",
                    "memory",
                    "bus",
                    "system"
                  ]
                }
              }
            ]
          },
          "appliesTo": [
            "process",
            "system"
          ]
        },
        {
          "name": "Deployment_Properties::Allowed_Connection_Type",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "ListType",
            "propertyType": {
              "kind": "EnumerationType",
              "values": [
                "Sampled_Data_Connection",
                "Immediate_Data_Connection",
                "Delayed_Data_Connection",
                "Port_Connection",
                "Data_Access_Connection",
                "Subprogram_Access_Connection"
              ]
            }
          },
          "appliesTo": [
            "bus",
            "device"
          ]
        },
        {
          "name": "Deployment_Properties::Allowed_Dispatch_Protocol",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "ListType",
            "propertyType": "AADL_Project::Supported_Dispatch_Protocols"
          },
          "appliesTo": [
            "processor",
            "virtual processor"
          ]
        },
        {
          "name": "Deployment_Properties::Allowed_Period",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "ListType",
            "propertyType": "AADL_Project::Time_Range"
          },
          "appliesTo": [
            "processor",
            "system",
            "virtual processor"
          ]
        },
        {
          "name": "Deployment_Properties::Allowed_Physical_Access_Class",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "ListType",
            "propertyType": {
              "kind": "ClassifierType",
              "classifiers": [
                "device",
                "processor",
                "memory",
                "bus"
              ]
            }
          },
          "appliesTo": [
            "bus"
          ]
        },
        {
          "name": "Deployment_Properties::Allowed_Physical_Access",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "ListType",
            "propertyType": {
              "kind": "ReferenceType",
              "references": [
                "device",
                "processor",
                "memory",
                "bus"
              ]
            }
          },
          "appliesTo": [
            "bus"
          ]
        },
        {
          "name": "Deployment_Properties::Memory_Protocol",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "EnumerationType",
            "values": [
              "execute_only",
              "read_only",
              "write_only",
              "read_write"
            ]
          },
          "appliesTo": [
            "memory"
          ]
        },
        {
          "name": "Deployment_Properties::Runtime_Protection_Support",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlBoolean"
          },
          "appliesTo": [
            "processor",
            "virtual processor"
          ]
        },
        {
          "name": "Deployment_Properties::Scheduling_Protocol",
          "kind": "Property",
          "inherit": true,
          "propertyType": {
            "kind": "ListType",
            "propertyType": "AADL_Project::Supported_Scheduling_Protocols"
          },
          "appliesTo": [
            "virtual processor",
            "processor",
            "system"
          ]
        },
        {
          "name": "Deployment_Properties::Preemptive_Scheduler",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlBoolean"
          },
          "appliesTo": [
            "processor"
          ]
        },
        {
          "name": "Deployment_Properties::Thread_Limit",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "processor",
            "virtual processor"
          ]
        },
        {
          "name": "Deployment_Properties::Priority_Map",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "ListType",
            "propertyType": "Deployment_Properties::Priority_Mapping"
          },
          "appliesTo": [
            "processor"
          ]
        },
        {
          "name": "Deployment_Properties::Priority_Range",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "RangeType",
            "numberType": {
              "kind": "AadlInteger"
            }
          },
          "appliesTo": [
            "processor",
            "virtual processor"
          ]
        }
      ],
      "propertyTypes": [
        {
          "name": "Deployment_Properties::Priority_Mapping",
          "kind": "PropertyType",
          "type": {
            "kind": "RecordType",
            "fields": [
              {
                "name": "Aadl_Priority",
                "propertyType": {
                  "kind": "AadlInteger"
                }
              },
              {
                "name": "RTOS_Priority",
                "propertyType": {
                  "kind": "AadlInteger"
                }
              }
            ]
          }
        }
      ]
    },
    {
      "name": "Modeling_Properties",
      "kind": "PropertySet",
      "properties": [
        {
          "name": "Modeling_Properties::Acceptable_Array_Size",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "ListType",
            "propertyType": "Modeling_Properties::Array_Size_Range"
          },
          "appliesTo": [
            "subcomponent",
            "feature"
          ]
        },
        {
          "name": "Modeling_Properties::Classifier_Matching_Rule",
          "kind": "Property",
          "inherit": true,
          "propertyType": {
            "kind": "EnumerationType",
            "values": [
              "Classifier_Match",
              "Equivalence",
              "Subset",
              "Conversion"
            ]
          },
          "appliesTo": [
            "connection",
            "component implementation"
          ]
        },
        {
          "name": "Modeling_Properties::Classifier_Substitution_Rule",
          "kind": "Property",
          "inherit": true,
          "propertyType": {
            "kind": "EnumerationType",
            "values": [
              "Classifier_Match",
              "Type_Extension",
              "Signature_Match"
            ]
          },
          "appliesTo": [
            "classifier",
            "subcomponent",
            "feature"
          ]
        },
        {
          "name": "Modeling_Properties::Implemented_As",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "ClassifierType",
            "classifiers": [
              "system implementation",
              "abstract implementation"
            ]
          },
          "appliesTo": [
            "memory",
            "bus",
            "virtual bus",
            "device",
            "virtual processor",
            "processor",
            "system"
          ]
        },
        {
          "name": "Modeling_Properties::Prototype_Substitution_Rule",
          "kind": "Property",
          "inherit": true,
          "propertyType": {
            "kind": "EnumerationType",
            "values": [
              "Classifier_Match",
              "Type_Extension",
              "Signature_Match"
            ]
          },
          "appliesTo": [
            "prototype",
            "classifier"
          ]
        }
      ],
      "propertyTypes": [
        {
          "name": "Modeling_Properties::Array_Size_Range",
          "kind": "PropertyType",
          "type": {
            "kind": "RangeType",
            "numberType": {
              "kind": "AadlInteger"
            }
          }
        }
      ]
    }
  ]
}
